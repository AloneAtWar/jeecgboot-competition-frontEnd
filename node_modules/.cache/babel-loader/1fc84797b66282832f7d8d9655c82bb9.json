{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\modal\\JPopupOnlReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\modal\\JPopupOnlReport.vue","mtime":1661074531203},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction } from '@/api/manage';\nimport { filterObj } from '@/utils/util';\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil';\nimport { httpGroupRequest } from '@/api/GroupRequest.js';\nimport md5 from 'md5';\nvar MODAL_WIDTH = 1200;\nexport default {\n  name: 'JPopupOnlReport',\n  props: ['multi', 'code', 'sorter', 'groupId', 'param'],\n  components: {},\n  data: function data() {\n    return {\n      visible: false,\n      title: \"\",\n      confirmLoading: false,\n      queryInfo: [],\n      toggleSearchStatus: false,\n      queryParam: {},\n      dictOptions: {},\n      url: {\n        getColumns: '/online/cgreport/api/getRpColumns/',\n        getData: '/online/cgreport/api/getData/',\n        getQueryInfo: '/online/cgreport/api/getQueryInfo/'\n      },\n      table: {\n        loading: true,\n        // 表头\n        columns: [],\n        //数据集\n        dataSource: [],\n        // 选择器\n        selectedRowKeys: [],\n        selectionRows: [],\n        // 分页参数\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: function showTotal(total, range) {\n            return range[0] + '-' + range[1] + ' 共' + total + '条';\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        }\n      },\n      cgRpConfigId: \"\",\n      modalWidth: MODAL_WIDTH,\n      tableScroll: {\n        x: true\n      },\n      dynamicParam: {},\n      // 排序字段，默认无排序\n      iSorter: null\n    };\n  },\n  mounted: function mounted() {//this.loadColumnsInfo()\n  },\n  watch: {\n    code: function code() {\n      this.loadColumnsInfo();\n    },\n    param: {\n      deep: true,\n      handler: function handler() {\n        // update--begin--autor:liusq-----date:20210706------for：JPopup组件在modal中使用报错#2729------\n        if (this.visible) {\n          this.dynamicParamHandler();\n          this.loadData();\n        } // update--begin--autor:liusq-----date:20210706------for：JPopup组件在modal中使用报错#2729------\n\n      }\n    },\n    sorter: {\n      immediate: true,\n      handler: function handler() {\n        var _this = this;\n\n        if (this.sorter) {\n          var arr = this.sorter.split('=');\n\n          if (arr.length === 2 && ['asc', 'desc'].includes(arr[1].toLowerCase())) {\n            this.iSorter = {\n              column: arr[0],\n              order: arr[1].toLowerCase()\n            }; // 排序字段受控\n\n            this.table.columns.forEach(function (col) {\n              if (col.dataIndex === _this.iSorter.column) {\n                _this.$set(col, 'sortOrder', _this.iSorter.order === 'asc' ? 'ascend' : 'descend');\n              } else {\n                _this.$set(col, 'sortOrder', false);\n              }\n            });\n          } else {\n            console.warn('【JPopup】sorter参数不合法');\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    showSearchFlag: function showSearchFlag() {\n      return this.queryInfo && this.queryInfo.length > 0;\n    },\n    // 行选择框类型，根据是否多选来控制显示为单选框还是多选框\n    rowSelectionType: function rowSelectionType() {\n      return this.multi ? 'checkbox' : 'radio';\n    }\n  },\n  methods: {\n    loadColumnsInfo: function loadColumnsInfo() {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      var url = \"\".concat(this.url.getColumns).concat(this.code); //缓存key\n\n      var groupIdKey;\n\n      if (this.groupId) {\n        groupIdKey = this.groupId + url;\n      }\n\n      httpGroupRequest(function () {\n        return getAction(url);\n      }, groupIdKey).then(function (res) {\n        if (res.success) {\n          _this2.initDictOptionData(res.result.dictOptions);\n\n          _this2.cgRpConfigId = res.result.cgRpConfigId;\n          _this2.title = res.result.cgRpConfigName;\n          var currColumns = res.result.columns;\n\n          for (var a = 0; a < currColumns.length; a++) {\n            if (currColumns[a].customRender) {\n              (function () {\n                var dictCode = currColumns[a].customRender;\n\n                currColumns[a].customRender = function (text) {\n                  return filterMultiDictText(_this2.dictOptions[dictCode], text + \"\");\n                };\n              })();\n            } // 排序字段受控\n\n\n            if (_this2.iSorter && currColumns[a].dataIndex === _this2.iSorter.column) {\n              currColumns[a].sortOrder = _this2.iSorter.order === 'asc' ? 'ascend' : 'descend';\n            }\n          }\n\n          _this2.table.columns = _toConsumableArray(currColumns);\n\n          _this2.initQueryInfo();\n        } else {\n          _this2.$error({\n            title: '出错了',\n            content: h(\"p\", [\"Popup\\u521D\\u59CB\\u5316\\u5931\\u8D25\\uFF0C\\u8BF7\\u68C0\\u67E5\\u4F60\\u7684\\u914D\\u7F6E\\u6216\\u7A0D\\u540E\\u91CD\\u8BD5\\uFF01\", h(\"br\"), \"\\u9519\\u8BEF\\u4FE1\\u606F\\u5982\\u4E0B\\uFF1A\", res.message]),\n            onOk: function onOk() {\n              return _this2.close();\n            }\n          });\n        }\n      });\n    },\n    initQueryInfo: function initQueryInfo() {\n      var _this3 = this;\n\n      var url = \"\".concat(this.url.getQueryInfo).concat(this.cgRpConfigId); //缓存key\n\n      var groupIdKey;\n\n      if (this.groupId) {\n        groupIdKey = this.groupId + url;\n      }\n\n      httpGroupRequest(function () {\n        return getAction(url);\n      }, groupIdKey).then(function (res) {\n        // console.log(\"获取查询条件\", res);\n        if (res.success) {\n          _this3.dynamicParamHandler(res.result);\n\n          _this3.queryInfo = res.result; //查询条件加载后再请求数据\n\n          _this3.loadData(1);\n        } else {\n          _this3.$message.warning(res.message);\n        }\n      });\n    },\n    //处理动态参数\n    dynamicParamHandler: function dynamicParamHandler(arr) {\n      var _this4 = this;\n\n      if (arr && arr.length > 0) {\n        //第一次加载查询条件前 初始化queryParam为空对象\n        var queryTemp = {};\n\n        var _iterator = _createForOfIteratorHelper(arr),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n\n            if (item.mode === 'single') {\n              queryTemp[item.field] = '';\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        this.queryParam = _objectSpread({}, queryTemp);\n      }\n\n      var dynamicTemp = {};\n\n      if (this.param) {\n        Object.keys(this.param).map(function (key) {\n          var str = _this4.param[key];\n\n          if (key in _this4.queryParam) {\n            if (str && str.startsWith(\"'\") && str.endsWith(\"'\")) {\n              str = str.substring(1, str.length - 1);\n            } //如果查询条件包含参数 设置值\n\n\n            _this4.queryParam[key] = str;\n          }\n\n          dynamicTemp[key] = _this4.param[key];\n        });\n      }\n\n      this.dynamicParam = _objectSpread({}, dynamicTemp);\n    },\n    loadData: function loadData(arg) {\n      var _this5 = this;\n\n      if (arg == 1) {\n        this.table.pagination.current = 1;\n      }\n\n      var params = this.getQueryParams(); //查询条件\n\n      this.table.loading = true;\n      var url = \"\".concat(this.url.getData).concat(this.cgRpConfigId); //缓存key\n\n      var groupIdKey;\n\n      if (this.groupId) {\n        groupIdKey = this.groupId + url + JSON.stringify(params);\n      }\n\n      httpGroupRequest(function () {\n        return getAction(url, params);\n      }, groupIdKey).then(function (res) {\n        _this5.table.loading = false; // console.log(\"daa\",res)\n\n        var data = res.result;\n\n        if (data) {\n          _this5.table.pagination.total = Number(data.total);\n          _this5.table.dataSource = data.records;\n        } else {\n          _this5.table.pagination.total = 0;\n          _this5.table.dataSource = [];\n        }\n      });\n    },\n    getQueryParams: function getQueryParams() {\n      var _this6 = this;\n\n      var paramTarget = {};\n\n      if (this.dynamicParam) {\n        //处理自定义参数\n        Object.keys(this.dynamicParam).map(function (key) {\n          paramTarget['self_' + key] = _this6.dynamicParam[key];\n        });\n      }\n\n      var param = Object.assign(paramTarget, this.queryParam, this.iSorter);\n      param.pageNo = this.table.pagination.current;\n      param.pageSize = this.table.pagination.pageSize;\n      return filterObj(param);\n    },\n    handleChangeInTableSelect: function handleChangeInTableSelect(selectedRowKeys, selectionRows) {\n      var _this7 = this;\n\n      //update-begin-author:taoyan date:2020902 for:【issue】开源online的几个问题 LOWCOD-844\n      if (!selectedRowKeys || selectedRowKeys.length == 0) {\n        this.table.selectionRows = [];\n      } else if (selectedRowKeys.length == selectionRows.length) {\n        this.table.selectionRows = selectionRows;\n      } else {\n        //当两者长度不一的时候 需要判断\n        var keys = this.table.selectedRowKeys;\n        var rows = this.table.selectionRows; //这个循环 添加新的记录\n\n        for (var i = 0; i < selectionRows.length; i++) {\n          var combineKey = this.combineRowKey(selectionRows[i]);\n\n          if (keys.indexOf(combineKey) < 0) {\n            //如果 原来的key 不包含当前记录 push\n            rows.push(selectionRows[i]);\n          }\n        } //这个循环 移除取消选中的数据\n\n\n        this.table.selectionRows = rows.filter(function (item) {\n          var combineKey = _this7.combineRowKey(item);\n\n          return selectedRowKeys.indexOf(combineKey) >= 0;\n        });\n      } //update-end-author:taoyan date:2020902 for:【issue】开源online的几个问题 LOWCOD-844\n\n\n      this.table.selectedRowKeys = selectedRowKeys;\n    },\n    handleChangeInTable: function handleChangeInTable(pagination, filters, sorter) {\n      var _this8 = this;\n\n      //分页、排序、筛选变化时触发\n      if (Object.keys(sorter).length > 0) {\n        this.iSorter = {\n          column: sorter.field,\n          order: 'ascend' === sorter.order ? 'asc' : 'desc'\n        }; // 排序字段受控\n\n        this.table.columns.forEach(function (col) {\n          if (col.dataIndex === sorter.field) {\n            _this8.$set(col, 'sortOrder', sorter.order);\n          } else {\n            _this8.$set(col, 'sortOrder', false);\n          }\n        });\n      }\n\n      this.table.pagination = pagination;\n      this.loadData();\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    handleSubmit: function handleSubmit() {\n      if (!this.multi) {\n        if (this.table.selectionRows && this.table.selectionRows.length > 1) {\n          this.$message.warning(\"请选择一条记录\");\n          return false;\n        }\n      }\n\n      if (!this.table.selectionRows || this.table.selectionRows.length == 0) {\n        this.$message.warning(\"请选择一条记录\");\n        return false;\n      }\n\n      this.$emit('ok', this.table.selectionRows);\n      this.close();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.onClearSelected();\n    },\n    show: function show() {\n      this.visible = true;\n      this.loadColumnsInfo();\n    },\n    handleToggleSearch: function handleToggleSearch() {\n      this.toggleSearchStatus = !this.toggleSearchStatus;\n    },\n    searchByquery: function searchByquery() {\n      this.loadData(1);\n    },\n    onlyReload: function onlyReload() {\n      this.loadData();\n    },\n    searchReset: function searchReset() {\n      var _this9 = this;\n\n      Object.keys(this.queryParam).forEach(function (key) {\n        _this9.queryParam[key] = \"\";\n      });\n      this.loadData(1);\n    },\n    onClearSelected: function onClearSelected() {\n      this.table.selectedRowKeys = [];\n      this.table.selectionRows = [];\n    },\n    combineRowKey: function combineRowKey(record) {\n      var res = '';\n      Object.keys(record).forEach(function (key) {\n        //update-begin---author:liusq   Date:20210203  for：pop选择器列主键问题 issues/I29P9Q------------\n        if (key == 'id') {\n          res = record[key] + res;\n        } else {\n          res += record[key];\n        } //update-end---author:liusq     Date:20210203  for：pop选择器列主键问题 issues/I29P9Q------------\n\n      }); // update-begin---author:taoyan   Date:20211025 for：jpopup 表格key重复BUG /issues/3121\n\n      res = md5(res);\n      /*if(res.length>50){\n        res = res.substring(0,50)\n      }*/\n      // update-end---author:taoyan   Date:20211025 for：jpopup 表格key重复BUG /issues/3121\n\n      return res;\n    },\n    clickThenCheck: function clickThenCheck(record) {\n      var _this10 = this;\n\n      return {\n        on: {\n          click: function click() {\n            var rowKey = _this10.combineRowKey(record);\n\n            if (!_this10.table.selectedRowKeys || _this10.table.selectedRowKeys.length == 0) {\n              var arr1 = [],\n                  arr2 = [];\n              arr1.push(record);\n              arr2.push(rowKey);\n              _this10.table.selectedRowKeys = arr2;\n              _this10.table.selectionRows = arr1;\n            } else {\n              if (_this10.table.selectedRowKeys.indexOf(rowKey) < 0) {\n                _this10.table.selectedRowKeys.push(rowKey);\n\n                _this10.table.selectionRows.push(record);\n              } else {\n                var rowKey_index = _this10.table.selectedRowKeys.indexOf(rowKey);\n\n                _this10.table.selectedRowKeys.splice(rowKey_index, 1);\n\n                _this10.table.selectionRows.splice(rowKey_index, 1);\n              }\n            } // 判断是否允许多选，如果不允许多选，就只存储最后一个选中的行\n\n\n            if (!_this10.multi && _this10.table.selectedRowKeys.length > 1) {\n              _this10.table.selectionRows = [_this10.table.selectionRows.pop()];\n              _this10.table.selectedRowKeys = [_this10.table.selectedRowKeys.pop()];\n            }\n          }\n        }\n      };\n    },\n    //防止字典中有垃圾数据\n    initDictOptionData: function initDictOptionData(dictOptions) {\n      var obj = {};\n      Object.keys(dictOptions).map(function (k) {\n        obj[k] = dictOptions[k].filter(function (item) {\n          return item != null;\n        });\n      });\n      this.dictOptions = obj;\n    }\n  }\n};",{"version":3,"sources":["JPopupOnlReport.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <j-modal\r\n    :title=\"title\"\r\n    :width=\"modalWidth\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    switchFullscreen\r\n    wrapClassName=\"j-popup-modal\"\r\n    @ok=\"handleSubmit\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\" @keyup.enter.native=\"searchByquery\">\r\n        <a-row :gutter=\"24\" v-if=\"showSearchFlag\">\r\n          <template v-for=\"(item,index) in queryInfo\">\r\n            <template v-if=\" item.hidden==='1' \">\r\n              <a-col :md=\"8\" :sm=\"24\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\r\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\r\n              </a-col>\r\n            </template>\r\n            <template v-else>\r\n              <a-col :md=\"8\" :sm=\"24\" :key=\" 'query'+index \">\r\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\r\n              </a-col>\r\n            </template>\r\n          </template>\r\n\r\n          <a-col :md=\"8\" :sm=\"8\">\r\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n              <a-button type=\"primary\" @click=\"searchByquery\" icon=\"search\">查询</a-button>\r\n              <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n              <a @click=\"handleToggleSearch\" style=\"margin-left: 8px\">\r\n                {{ toggleSearchStatus ? '收起' : '展开' }}\r\n                <a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\"/>\r\n              </a>\r\n            </span>\r\n          </a-col>\r\n\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n    <div class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 16px;\">\r\n      <i class=\"anticon anticon-info-circle ant-alert-icon\"></i>\r\n      已选择&nbsp;<a style=\"font-weight: 600\">{{ table.selectedRowKeys.length }}</a>项&nbsp;&nbsp;\r\n      <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\r\n\r\n      <a v-if=\"!showSearchFlag\" style=\"margin-left: 24px\" @click=\"onlyReload\">刷新</a>\r\n    </div>\r\n\r\n    <a-table\r\n      ref=\"table\"\r\n      size=\"middle\"\r\n      bordered\r\n      :rowKey=\"combineRowKey\"\r\n      :columns=\"table.columns\"\r\n      :dataSource=\"table.dataSource\"\r\n      :pagination=\"table.pagination\"\r\n      :loading=\"table.loading\"\r\n      :rowSelection=\"{type:rowSelectionType,fixed:true,selectedRowKeys: table.selectedRowKeys, onChange: handleChangeInTableSelect}\"\r\n      @change=\"handleChangeInTable\"\r\n      style=\"min-height: 300px\"\r\n      :scroll=\"tableScroll\"\r\n      :customRow=\"clickThenCheck\">\r\n    </a-table>\r\n\r\n\r\n  </j-modal>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n  import {filterObj} from '@/utils/util'\r\n  import { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\r\n  import { httpGroupRequest } from '@/api/GroupRequest.js'\r\n  import md5 from 'md5'\r\n\r\n  const MODAL_WIDTH = 1200;\r\n  export default {\r\n    name: 'JPopupOnlReport',\r\n    props: ['multi', 'code', 'sorter', 'groupId', 'param'],\r\n    components:{\r\n    },\r\n    data(){\r\n      return {\r\n        visible:false,\r\n        title:\"\",\r\n        confirmLoading:false,\r\n        queryInfo:[],\r\n        toggleSearchStatus:false,\r\n        queryParam:{\r\n\r\n        },\r\n        dictOptions: {},\r\n        url: {\r\n          getColumns: '/online/cgreport/api/getRpColumns/',\r\n          getData: '/online/cgreport/api/getData/',\r\n          getQueryInfo: '/online/cgreport/api/getQueryInfo/'\r\n        },\r\n        table: {\r\n          loading: true,\r\n          // 表头\r\n          columns: [],\r\n          //数据集\r\n          dataSource: [],\r\n          // 选择器\r\n          selectedRowKeys: [],\r\n          selectionRows: [],\r\n          // 分页参数\r\n          pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n            pageSizeOptions: ['10', '20', '30'],\r\n            showTotal: (total, range) => {\r\n              return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n            },\r\n            showQuickJumper: true,\r\n            showSizeChanger: true,\r\n            total: 0\r\n          }\r\n        },\r\n        cgRpConfigId:\"\",\r\n        modalWidth:MODAL_WIDTH,\r\n        tableScroll:{x:true},\r\n        dynamicParam:{},\r\n        // 排序字段，默认无排序\r\n        iSorter: null,\r\n      }\r\n    },\r\n    mounted() {\r\n      //this.loadColumnsInfo()\r\n    },\r\n    watch: {\r\n      code() {\r\n        this.loadColumnsInfo()\r\n      },\r\n      param:{\r\n        deep:true,\r\n        handler(){\r\n          // update--begin--autor:liusq-----date:20210706------for：JPopup组件在modal中使用报错#2729------\r\n          if(this.visible){\r\n            this.dynamicParamHandler()\r\n            this.loadData();\r\n          }\r\n          // update--begin--autor:liusq-----date:20210706------for：JPopup组件在modal中使用报错#2729------\r\n        },\r\n      },\r\n      sorter: {\r\n        immediate: true,\r\n        handler() {\r\n          if (this.sorter) {\r\n            let arr = this.sorter.split('=')\r\n            if (arr.length === 2 && ['asc', 'desc'].includes(arr[1].toLowerCase())) {\r\n              this.iSorter = {column: arr[0], order: arr[1].toLowerCase()}\r\n              // 排序字段受控\r\n              this.table.columns.forEach(col => {\r\n                if (col.dataIndex === this.iSorter.column) {\r\n                  this.$set(col, 'sortOrder', this.iSorter.order === 'asc' ? 'ascend' : 'descend')\r\n                } else {\r\n                  this.$set(col, 'sortOrder', false)\r\n                }\r\n              })\r\n            } else {\r\n              console.warn('【JPopup】sorter参数不合法')\r\n            }\r\n          }\r\n        },\r\n      },\r\n    },\r\n    computed:{\r\n      showSearchFlag(){\r\n        return this.queryInfo && this.queryInfo.length>0\r\n      },\r\n      // 行选择框类型，根据是否多选来控制显示为单选框还是多选框\r\n      rowSelectionType() {\r\n        return this.multi ? 'checkbox' : 'radio'\r\n      },\r\n    },\r\n    methods:{\r\n      loadColumnsInfo(){\r\n        let url = `${this.url.getColumns}${this.code}`\r\n        //缓存key\r\n        let groupIdKey\r\n        if (this.groupId) {\r\n          groupIdKey = this.groupId + url\r\n        }\r\n        httpGroupRequest(() => getAction(url), groupIdKey).then(res => {\r\n          if(res.success){\r\n            this.initDictOptionData(res.result.dictOptions);\r\n            this.cgRpConfigId = res.result.cgRpConfigId\r\n            this.title = res.result.cgRpConfigName\r\n            let currColumns = res.result.columns\r\n            for(let a=0;a<currColumns.length;a++){\r\n              if(currColumns[a].customRender){\r\n                let dictCode = currColumns[a].customRender;\r\n                currColumns[a].customRender=(text)=>{\r\n                  return filterMultiDictText(this.dictOptions[dictCode], text+\"\");\r\n                }\r\n              }\r\n              // 排序字段受控\r\n              if (this.iSorter && currColumns[a].dataIndex === this.iSorter.column) {\r\n                currColumns[a].sortOrder = this.iSorter.order === 'asc' ? 'ascend' : 'descend'\r\n              }\r\n            }\r\n            this.table.columns = [...currColumns]\r\n            this.initQueryInfo()\r\n          } else {\r\n            this.$error({\r\n              title: '出错了',\r\n              content: (<p>Popup初始化失败，请检查你的配置或稍后重试！<br/>错误信息如下：{res.message}</p>),\r\n              onOk: () => this.close(),\r\n            })\r\n          }\r\n        })\r\n      },\r\n      initQueryInfo() {\r\n        let url = `${this.url.getQueryInfo}${this.cgRpConfigId}`\r\n        //缓存key\r\n        let groupIdKey\r\n        if (this.groupId) {\r\n          groupIdKey = this.groupId + url\r\n        }\r\n        httpGroupRequest(() => getAction(url), groupIdKey).then((res) => {\r\n          // console.log(\"获取查询条件\", res);\r\n          if (res.success) {\r\n            this.dynamicParamHandler(res.result)\r\n            this.queryInfo = res.result\r\n            //查询条件加载后再请求数据\r\n            this.loadData(1)\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      },\r\n      //处理动态参数\r\n      dynamicParamHandler(arr){\r\n        if(arr && arr.length>0){\r\n          //第一次加载查询条件前 初始化queryParam为空对象\r\n          let queryTemp = {}\r\n          for(let item of arr){\r\n            if(item.mode==='single'){\r\n              queryTemp[item.field] = ''\r\n            }\r\n          }\r\n          this.queryParam = {...queryTemp}\r\n        }\r\n        let dynamicTemp = {}\r\n        if(this.param){\r\n          Object.keys(this.param).map(key=>{\r\n            let str = this.param[key]\r\n            if(key in this.queryParam){\r\n              if(str && str.startsWith(\"'\") && str.endsWith(\"'\")){\r\n                str = str.substring(1,str.length-1)\r\n              }\r\n              //如果查询条件包含参数 设置值\r\n              this.queryParam[key]=str\r\n            }\r\n            dynamicTemp[key] = this.param[key]\r\n          })\r\n        }\r\n        this.dynamicParam = {...dynamicTemp}\r\n      },\r\n      loadData(arg) {\r\n        if (arg == 1) {\r\n          this.table.pagination.current = 1\r\n        }\r\n        let params = this.getQueryParams();//查询条件\r\n        this.table.loading = true\r\n        let url = `${this.url.getData}${this.cgRpConfigId}`\r\n        //缓存key\r\n        let groupIdKey\r\n        if (this.groupId) {\r\n          groupIdKey = this.groupId + url + JSON.stringify(params)\r\n        }\r\n        httpGroupRequest(() => getAction(url, params), groupIdKey).then(res => {\r\n          this.table.loading = false\r\n          // console.log(\"daa\",res)\r\n          let data = res.result\r\n          if (data) {\r\n            this.table.pagination.total = Number(data.total)\r\n            this.table.dataSource = data.records\r\n          } else {\r\n            this.table.pagination.total = 0\r\n            this.table.dataSource = []\r\n          }\r\n        })\r\n      },\r\n      getQueryParams() {\r\n        let paramTarget = {}\r\n        if(this.dynamicParam){\r\n          //处理自定义参数\r\n         Object.keys(this.dynamicParam).map(key=>{\r\n           paramTarget['self_'+key] = this.dynamicParam[key]\r\n         })\r\n        }\r\n        let param = Object.assign(paramTarget, this.queryParam, this.iSorter);\r\n        param.pageNo = this.table.pagination.current;\r\n        param.pageSize = this.table.pagination.pageSize;\r\n        return filterObj(param);\r\n      },\r\n      handleChangeInTableSelect(selectedRowKeys, selectionRows) {\r\n        //update-begin-author:taoyan date:2020902 for:【issue】开源online的几个问题 LOWCOD-844\r\n        if(!selectedRowKeys || selectedRowKeys.length==0){\r\n          this.table.selectionRows = []\r\n        }else if(selectedRowKeys.length == selectionRows.length){\r\n          this.table.selectionRows = selectionRows\r\n        }else{\r\n          //当两者长度不一的时候 需要判断\r\n          let keys = this.table.selectedRowKeys\r\n          let rows = this.table.selectionRows;\r\n          //这个循环 添加新的记录\r\n          for(let i=0;i<selectionRows.length;i++){\r\n            let combineKey = this.combineRowKey(selectionRows[i])\r\n            if(keys.indexOf(combineKey)<0){\r\n              //如果 原来的key 不包含当前记录 push\r\n              rows.push(selectionRows[i])\r\n            }\r\n          }\r\n          //这个循环 移除取消选中的数据\r\n          this.table.selectionRows = rows.filter(item=>{\r\n            let combineKey = this.combineRowKey(item)\r\n            return selectedRowKeys.indexOf(combineKey)>=0\r\n          })\r\n        }\r\n        //update-end-author:taoyan date:2020902 for:【issue】开源online的几个问题 LOWCOD-844\r\n        this.table.selectedRowKeys = selectedRowKeys\r\n      },\r\n      handleChangeInTable(pagination, filters, sorter) {\r\n        //分页、排序、筛选变化时触发\r\n        if (Object.keys(sorter).length > 0) {\r\n          this.iSorter = {\r\n            column: sorter.field,\r\n            order: 'ascend' === sorter.order ? 'asc' : 'desc'\r\n          }\r\n          // 排序字段受控\r\n          this.table.columns.forEach(col => {\r\n            if (col.dataIndex === sorter.field) {\r\n              this.$set(col, 'sortOrder',sorter.order)\r\n            } else {\r\n              this.$set(col, 'sortOrder', false)\r\n            }\r\n          })\r\n        }\r\n        this.table.pagination = pagination\r\n        this.loadData()\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      handleSubmit() {\r\n        if(!this.multi){\r\n          if(this.table.selectionRows && this.table.selectionRows.length>1){\r\n            this.$message.warning(\"请选择一条记录\")\r\n            return false\r\n          }\r\n        }\r\n        if(!this.table.selectionRows || this.table.selectionRows.length==0){\r\n          this.$message.warning(\"请选择一条记录\")\r\n          return false\r\n        }\r\n        this.$emit('ok', this.table.selectionRows);\r\n        this.close()\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.onClearSelected()\r\n      },\r\n      show(){\r\n        this.visible = true\r\n        this.loadColumnsInfo()\r\n      },\r\n      handleToggleSearch(){\r\n        this.toggleSearchStatus = !this.toggleSearchStatus;\r\n      },\r\n      searchByquery(){\r\n        this.loadData(1);\r\n      },\r\n      onlyReload(){\r\n        this.loadData();\r\n      },\r\n      searchReset(){\r\n        Object.keys(this.queryParam).forEach(key=>{\r\n          this.queryParam[key]=\"\"\r\n        })\r\n        this.loadData(1);\r\n      },\r\n      onClearSelected(){\r\n        this.table.selectedRowKeys = []\r\n        this.table.selectionRows = []\r\n      },\r\n      combineRowKey(record){\r\n        let res = ''\r\n         Object.keys(record).forEach(key=>{\r\n           //update-begin---author:liusq   Date:20210203  for：pop选择器列主键问题 issues/I29P9Q------------\r\n           if(key=='id'){\r\n             res=record[key]+res\r\n           }else{\r\n             res+=record[key]\r\n           }\r\n           //update-end---author:liusq     Date:20210203  for：pop选择器列主键问题 issues/I29P9Q------------\r\n         })\r\n        // update-begin---author:taoyan   Date:20211025 for：jpopup 表格key重复BUG /issues/3121\r\n        res = md5(res)\r\n        /*if(res.length>50){\r\n          res = res.substring(0,50)\r\n        }*/\r\n        // update-end---author:taoyan   Date:20211025 for：jpopup 表格key重复BUG /issues/3121\r\n        return res\r\n      },\r\n\r\n      clickThenCheck(record){\r\n        return {\r\n          on: {\r\n            click: () => {\r\n              let rowKey = this.combineRowKey(record)\r\n              if(!this.table.selectedRowKeys || this.table.selectedRowKeys.length==0){\r\n                let arr1=[],arr2=[]\r\n                arr1.push(record)\r\n                arr2.push(rowKey)\r\n                this.table.selectedRowKeys=arr2\r\n                this.table.selectionRows=arr1\r\n              }else{\r\n                if(this.table.selectedRowKeys.indexOf(rowKey)<0){\r\n                  this.table.selectedRowKeys.push(rowKey)\r\n                  this.table.selectionRows.push(record)\r\n                }else{\r\n                  let rowKey_index = this.table.selectedRowKeys.indexOf(rowKey)\r\n                  this.table.selectedRowKeys.splice(rowKey_index,1);\r\n                  this.table.selectionRows.splice(rowKey_index,1);\r\n                }\r\n              }\r\n              // 判断是否允许多选，如果不允许多选，就只存储最后一个选中的行\r\n              if (!this.multi && this.table.selectedRowKeys.length > 1) {\r\n                this.table.selectionRows = [this.table.selectionRows.pop()]\r\n                this.table.selectedRowKeys = [this.table.selectedRowKeys.pop()]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      //防止字典中有垃圾数据\r\n      initDictOptionData(dictOptions){\r\n        let obj = { }\r\n        Object.keys(dictOptions).map(k=>{\r\n          obj[k] = dictOptions[k].filter(item=>{\r\n            return item!=null\r\n          });\r\n        });\r\n        this.dictOptions  = obj\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/jeecg/modal"}]}