{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\mixins\\JVxeCellMixins.js","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\mixins\\JVxeCellMixins.js","mtime":1661074531197},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1657458632572}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:/a/ant-design-vue-jeecg/node_modules/@babel/runtime/regenerator\";\n\nvar _interceptor;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport PropTypes from 'ant-design-vue/es/_util/vue-types';\nimport { filterDictText } from '@/components/dict/JDictSelectUtil';\nimport { getEnhancedMixins, JVXERenderType, replaceProps } from '@/components/jeecg/JVxeTable/utils/cellUtils'; // noinspection JSUnusedLocalSymbols\n\nexport default {\n  inject: {\n    getParentContainer: {\n      default: function _default() {\n        return function (node) {\n          return node.parentNode;\n        };\n      }\n    }\n  },\n  props: {\n    value: PropTypes.any,\n    row: PropTypes.object,\n    column: PropTypes.object,\n    // 组件参数\n    params: PropTypes.object,\n    // 渲染选项\n    renderOptions: PropTypes.object,\n    // 渲染类型\n    renderType: PropTypes.string.def('default')\n  },\n  data: function data() {\n    return {\n      innerValue: null\n    };\n  },\n  computed: {\n    caseId: function caseId() {\n      return this.renderOptions.caseId;\n    },\n    originColumn: function originColumn() {\n      return this.column.own;\n    },\n    $type: function $type() {\n      return this.originColumn.$type;\n    },\n    rows: function rows() {\n      return this.params.data;\n    },\n    fullDataLength: function fullDataLength() {\n      return this.params.$table.tableFullData.length;\n    },\n    rowIndex: function rowIndex() {\n      return this.params.rowIndex;\n    },\n    columnIndex: function columnIndex() {\n      return this.params.columnIndex;\n    },\n    cellProps: function cellProps() {\n      var col = this.originColumn,\n          renderOptions = this.renderOptions;\n      var props = {}; // 输入占位符\n\n      props['placeholder'] = replaceProps(col, col.placeholder); // 解析props\n\n      if (_typeof(col.props) === 'object') {\n        Object.keys(col.props).forEach(function (key) {\n          props[key] = replaceProps(col, col.props[key]);\n        });\n      } // 判断是否是禁用的列\n\n\n      props['disabled'] = typeof col['disabled'] === 'boolean' ? col['disabled'] : props['disabled']; // TODO 判断是否是禁用的行\n      // if (props['disabled'] !== true) {\n      //   props['disabled'] = ((this.disabledRowIds || []).indexOf(row.id) !== -1)\n      // }\n      // 判断是否禁用所有组件\n\n      if (renderOptions.disabled === true) {\n        props['disabled'] = true;\n      } // update-begin-author:taoyan date:20211011 for: online表单，附表用户选择器{\"multiSelect\":false}不生效，单表可以生效 #3036\n\n\n      var jsonStr = col['fieldExtendJson'];\n\n      if (jsonStr) {\n        var fieldExtendJson = JSON.parse(jsonStr);\n\n        if (fieldExtendJson && fieldExtendJson['multiSelect'] == false) {\n          props['multi'] = false;\n        }\n      } // update-end-author:taoyan date:20211011 for: online表单，附表用户选择器{\"multiSelect\":false}不生效，单表可以生效 #3036\n\n\n      return props;\n    }\n  },\n  watch: {\n    $type: {\n      immediate: true,\n      handler: function handler($type) {\n        this.enhanced = getEnhancedMixins($type);\n        this.listeners = getListeners.call(this);\n      }\n    },\n    value: {\n      immediate: true,\n      handler: function handler(val) {\n        var _this = this;\n\n        var value = val; // 验证值格式\n\n        var originValue = this.row[this.column.property];\n        var getValue = this.enhanced.getValue.call(this, originValue);\n\n        if (originValue !== getValue) {\n          // 值格式不正确，重新赋值\n          value = getValue;\n          vModel.call(this, value);\n        }\n\n        this.innerValue = this.enhanced.setValue.call(this, value); // 判断是否启用翻译\n\n        if (this.renderType === JVXERenderType.spaner && this.enhanced.translate.enabled) {\n          var res = this.enhanced.translate.handler.call(this, value); // 异步翻译，目前仅【多级联动】使用\n\n          if (res instanceof Promise) {\n            res.then(function (value) {\n              return _this.innerValue = value;\n            });\n          } else {\n            this.innerValue = res;\n          }\n        }\n      }\n    }\n  },\n  created: function created() {},\n  methods: {\n    /** 通用处理change事件 */\n    handleChangeCommon: function handleChangeCommon(value) {\n      var handle = this.enhanced.getValue.call(this, value);\n      this.trigger('change', {\n        value: handle\n      }); // 触发valueChange事件\n\n      this.parentTrigger('valueChange', {\n        type: this.$type,\n        value: handle,\n        oldValue: this.value,\n        col: this.originColumn,\n        rowIndex: this.params.rowIndex,\n        columnIndex: this.params.columnIndex\n      });\n    },\n\n    /** 通用处理blur事件 */\n    handleBlurCommon: function handleBlurCommon(value) {\n      this.trigger('blur', {\n        value: value\n      });\n    },\n\n    /**\r\n     *  如果事件存在的话，就触发\r\n     * @param name 事件名\r\n     * @param event 事件参数\r\n     * @param args 其他附带参数\r\n     */\n    trigger: function trigger(name, event) {\n      var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var listener = this.listeners[name];\n\n      if (typeof listener === 'function') {\n        if (_typeof(event) === 'object') {\n          event = this.packageEvent(name, event);\n        }\n\n        listener.apply(void 0, [event].concat(_toConsumableArray(args)));\n      }\n    },\n    parentTrigger: function parentTrigger(name, event) {\n      var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      args.unshift(this.packageEvent(name, event));\n      this.trigger('trigger', name, args);\n    },\n    packageEvent: function packageEvent(name) {\n      var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      event.row = this.row;\n      event.column = this.column; //online增强参数兼容\n\n      event.column['key'] = this.column['property'];\n      event.cellTarget = this;\n\n      if (!event.type) {\n        event.type = name;\n      }\n\n      if (!event.cellType) {\n        event.cellType = this.$type;\n      } // 是否校验表单，默认为true\n\n\n      if (typeof event.validate !== 'boolean') {\n        event.validate = true;\n      }\n\n      return event;\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n\n  /**\r\n   * 【自定义增强】用于实现一些增强事件\r\n   * 【注】这里只是定义接口，具体功能需要到各个组件内实现（也有部分功能实现）\r\n   * 【注】该属性不是Vue官方属性，是JVxeTable组件自定义的\r\n   *      所以方法内的 this 指向并不是当前组件，而是方法自身，\r\n   *      也就是说并不能 this 打点调实例里的任何方法\r\n   */\n  enhanced: {\n    // 注册参数（详见：https://xuliangzhan_admin.gitee.io/vxe-table/#/table/renderer/edit）\n    installOptions: {\n      // 自动聚焦的 class 类名\n      autofocus: ''\n    },\n    // 事件拦截器（用于兼容）\n    interceptor: (_interceptor = {}, _defineProperty(_interceptor, 'event.clearActived', function eventClearActived(params, event, target) {\n      return true;\n    }), _defineProperty(_interceptor, 'event.clearActived.className', function eventClearActivedClassName(params, event, target) {\n      return true;\n    }), _interceptor),\n    // 【功能开关】\n    switches: {\n      // 是否使用 editRender 模式（仅当前组件，并非全局）\n      // 如果设为true，则表头上方会出现一个可编辑的图标\n      editRender: true,\n      // false = 组件触发后可视）；true = 组件一直可视\n      visible: false\n    },\n    // 【切面增强】切面事件处理，一般在某些方法执行后同步执行\n    aopEvents: {\n      // 单元格被激活编辑时会触发该事件\n      editActived: function editActived() {},\n      // 单元格编辑状态下被关闭时会触发该事件\n      editClosed: function editClosed() {}\n    },\n    // 【翻译增强】可以实现例如select组件保存的value，但是span模式下需要显示成text\n    translate: {\n      // 是否启用翻译\n      enabled: false,\n\n      /**\r\n       * 【翻译处理方法】如果handler留空，则使用默认的翻译方法\r\n       * (this指向当前组件)\r\n       *\r\n       * @param value 需要翻译的值\r\n       * @returns{*} 返回翻译后的数据\r\n       */\n      handler: function handler(value) {\n        // 默认翻译方法\n        return filterDictText(this.column.own.options, value);\n      }\n    },\n\n    /**\r\n     * 【获取值增强】组件抛出的值\r\n     * (this指向当前组件)\r\n     *\r\n     * @param value 保存到数据库里的值\r\n     * @returns{*} 返回处理后的值\r\n     */\n    getValue: function getValue(value) {\n      return value;\n    },\n\n    /**\r\n     * 【设置值增强】设置给组件的值\r\n     * (this指向当前组件)\r\n     *\r\n     * @param value 组件触发的值\r\n     * @returns{*} 返回处理后的值\r\n     */\n    setValue: function setValue(value) {\n      return value;\n    },\n\n    /**\r\n     * 【新增行增强】在用户点击新增时触发的事件，返回新行的默认值\r\n     *\r\n     * @param row 行数据\r\n     * @param column 列配置，.own 是用户配置的参数\r\n     * @param $table vxe 实例\r\n     * @param renderOptions 渲染选项\r\n     * @param params 可以在这里获取 $table\r\n     *\r\n     * @returns 返回新值\r\n     */\n    createValue: function createValue(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          $table = _ref.$table,\n          renderOptions = _ref.renderOptions,\n          params = _ref.params;\n      return column.own.defaultValue;\n    }\n  }\n};\n\nfunction getListeners() {\n  var _this2 = this;\n\n  var listeners = Object.assign({}, this.renderOptions.listeners || {});\n\n  if (!listeners.change) {\n    listeners.change = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                vModel.call(_this2, event.value);\n                _context.next = 3;\n                return _this2.$nextTick();\n\n              case 3:\n                // 处理 change 事件相关逻辑（例如校验）\n                _this2.params.$table.updateStatus(_this2.params);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n\n  return listeners;\n}\n\nexport function vModel(value, row, property) {\n  if (!row) {\n    row = this.row;\n  }\n\n  if (!property) {\n    property = this.column.property;\n  }\n\n  this.$set(row, property, value);\n}\n/** 模拟触发事件 */\n\nexport function dispatchEvent(_ref3, className, handler) {\n  var cell = _ref3.cell,\n      $event = _ref3.$event;\n\n  // alwaysEdit 下不模拟触发事件，否者会导致触发两次\n  if (this && this.alwaysEdit) {\n    return;\n  }\n\n  window.setTimeout(function () {\n    var element = cell.getElementsByClassName(className);\n\n    if (element && element.length > 0) {\n      if (typeof handler === 'function') {\n        handler(element[0]);\n      } else {\n        // 模拟触发点击事件\n        if ($event) {\n          element[0].dispatchEvent($event);\n        }\n      }\n    }\n  }, 10);\n}",{"version":3,"sources":["D:/a/ant-design-vue-jeecg/src/components/jeecg/JVxeTable/mixins/JVxeCellMixins.js"],"names":["PropTypes","filterDictText","getEnhancedMixins","JVXERenderType","replaceProps","inject","getParentContainer","default","node","parentNode","props","value","any","row","object","column","params","renderOptions","renderType","string","def","data","innerValue","computed","caseId","originColumn","own","$type","rows","fullDataLength","$table","tableFullData","length","rowIndex","columnIndex","cellProps","col","placeholder","Object","keys","forEach","key","disabled","jsonStr","fieldExtendJson","JSON","parse","watch","immediate","handler","enhanced","listeners","getListeners","call","val","originValue","property","getValue","vModel","setValue","spaner","translate","enabled","res","Promise","then","created","methods","handleChangeCommon","handle","trigger","parentTrigger","type","oldValue","handleBlurCommon","name","event","args","listener","packageEvent","unshift","cellTarget","cellType","validate","model","prop","installOptions","autofocus","interceptor","target","switches","editRender","visible","aopEvents","editActived","editClosed","options","createValue","defaultValue","assign","change","$nextTick","updateStatus","$set","dispatchEvent","className","cell","$event","alwaysEdit","window","setTimeout","element","getElementsByClassName"],"mappings":"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","sourcesContent":["import PropTypes from 'ant-design-vue/es/_util/vue-types'\r\nimport { filterDictText } from '@/components/dict/JDictSelectUtil'\r\nimport { getEnhancedMixins, JVXERenderType, replaceProps } from '@/components/jeecg/JVxeTable/utils/cellUtils'\r\n\r\n// noinspection JSUnusedLocalSymbols\r\nexport default {\r\n  inject: {\r\n    getParentContainer: {default: () => ((node) => node.parentNode)},\r\n  },\r\n  props: {\r\n    value: PropTypes.any,\r\n    row: PropTypes.object,\r\n    column: PropTypes.object,\r\n    // 组件参数\r\n    params: PropTypes.object,\r\n    // 渲染选项\r\n    renderOptions: PropTypes.object,\r\n    // 渲染类型\r\n    renderType: PropTypes.string.def('default'),\r\n  },\r\n  data() {\r\n    return {\r\n      innerValue: null,\r\n    }\r\n  },\r\n  computed: {\r\n    caseId() {\r\n      return this.renderOptions.caseId\r\n    },\r\n    originColumn() {\r\n      return this.column.own\r\n    },\r\n    $type() {\r\n      return this.originColumn.$type\r\n    },\r\n    rows() {\r\n      return this.params.data\r\n    },\r\n    fullDataLength() {\r\n      return this.params.$table.tableFullData.length\r\n    },\r\n    rowIndex() {\r\n      return this.params.rowIndex\r\n    },\r\n    columnIndex() {\r\n      return this.params.columnIndex\r\n    },\r\n    cellProps() {\r\n      let {originColumn: col, renderOptions} = this\r\n\r\n      let props = {}\r\n\r\n      // 输入占位符\r\n      props['placeholder'] = replaceProps(col, col.placeholder)\r\n\r\n      // 解析props\r\n      if (typeof col.props === 'object') {\r\n        Object.keys(col.props).forEach(key => {\r\n          props[key] = replaceProps(col, col.props[key])\r\n        })\r\n      }\r\n\r\n      // 判断是否是禁用的列\r\n      props['disabled'] = (typeof col['disabled'] === 'boolean' ? col['disabled'] : props['disabled'])\r\n\r\n      // TODO 判断是否是禁用的行\r\n      // if (props['disabled'] !== true) {\r\n      //   props['disabled'] = ((this.disabledRowIds || []).indexOf(row.id) !== -1)\r\n      // }\r\n\r\n      // 判断是否禁用所有组件\r\n      if (renderOptions.disabled === true) {\r\n        props['disabled'] = true\r\n      }\r\n\r\n      // update-begin-author:taoyan date:20211011 for: online表单，附表用户选择器{\"multiSelect\":false}不生效，单表可以生效 #3036\r\n      let jsonStr = col['fieldExtendJson']\r\n      if(jsonStr){\r\n        let fieldExtendJson = JSON.parse(jsonStr)\r\n        if(fieldExtendJson && fieldExtendJson['multiSelect']==false){\r\n          props['multi'] = false\r\n        }\r\n      }\r\n      // update-end-author:taoyan date:20211011 for: online表单，附表用户选择器{\"multiSelect\":false}不生效，单表可以生效 #3036\r\n\r\n      return props\r\n    },\r\n  },\r\n  watch: {\r\n    $type: {\r\n      immediate: true,\r\n      handler($type) {\r\n        this.enhanced = getEnhancedMixins($type)\r\n        this.listeners = getListeners.call(this)\r\n      },\r\n    },\r\n    value: {\r\n      immediate: true,\r\n      handler(val) {\r\n        let value = val\r\n\r\n        // 验证值格式\r\n        let originValue = this.row[this.column.property]\r\n        let getValue = this.enhanced.getValue.call(this, originValue)\r\n        if (originValue !== getValue) {\r\n          // 值格式不正确，重新赋值\r\n          value = getValue\r\n          vModel.call(this, value)\r\n        }\r\n\r\n        this.innerValue = this.enhanced.setValue.call(this, value)\r\n\r\n        // 判断是否启用翻译\r\n        if (this.renderType === JVXERenderType.spaner && this.enhanced.translate.enabled) {\r\n          let res = this.enhanced.translate.handler.call(this, value)\r\n          // 异步翻译，目前仅【多级联动】使用\r\n          if (res instanceof Promise) {\r\n            res.then(value => this.innerValue = value)\r\n          } else {\r\n            this.innerValue = res\r\n          }\r\n        }\r\n      },\r\n    },\r\n  },\r\n  created() {\r\n  },\r\n  methods: {\r\n\r\n    /** 通用处理change事件 */\r\n    handleChangeCommon(value) {\r\n      let handle = this.enhanced.getValue.call(this, value)\r\n      this.trigger('change', {value: handle})\r\n      // 触发valueChange事件\r\n      this.parentTrigger('valueChange', {\r\n        type: this.$type,\r\n        value: handle,\r\n        oldValue: this.value,\r\n        col: this.originColumn,\r\n        rowIndex: this.params.rowIndex,\r\n        columnIndex: this.params.columnIndex,\r\n      })\r\n    },\r\n    /** 通用处理blur事件 */\r\n    handleBlurCommon(value) {\r\n      this.trigger('blur', {value})\r\n    },\r\n\r\n    /**\r\n     *  如果事件存在的话，就触发\r\n     * @param name 事件名\r\n     * @param event 事件参数\r\n     * @param args 其他附带参数\r\n     */\r\n    trigger(name, event, args = []) {\r\n      let listener = this.listeners[name]\r\n      if (typeof listener === 'function') {\r\n        if (typeof event === 'object') {\r\n          event = this.packageEvent(name, event)\r\n        }\r\n        listener(event, ...args)\r\n      }\r\n    },\r\n    parentTrigger(name, event, args = []) {\r\n      args.unshift(this.packageEvent(name, event))\r\n      this.trigger('trigger', name, args)\r\n    },\r\n    packageEvent(name, event = {}) {\r\n      event.row = this.row\r\n      event.column = this.column\r\n      //online增强参数兼容\r\n      event.column['key'] = this.column['property']\r\n      event.cellTarget = this\r\n      if (!event.type) {\r\n        event.type = name\r\n      }\r\n      if (!event.cellType) {\r\n        event.cellType = this.$type\r\n      }\r\n      // 是否校验表单，默认为true\r\n      if (typeof event.validate !== 'boolean') {\r\n        event.validate = true\r\n      }\r\n      return event\r\n    },\r\n\r\n  },\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change'\r\n  },\r\n  /**\r\n   * 【自定义增强】用于实现一些增强事件\r\n   * 【注】这里只是定义接口，具体功能需要到各个组件内实现（也有部分功能实现）\r\n   * 【注】该属性不是Vue官方属性，是JVxeTable组件自定义的\r\n   *      所以方法内的 this 指向并不是当前组件，而是方法自身，\r\n   *      也就是说并不能 this 打点调实例里的任何方法\r\n   */\r\n  enhanced: {\r\n    // 注册参数（详见：https://xuliangzhan_admin.gitee.io/vxe-table/#/table/renderer/edit）\r\n    installOptions: {\r\n      // 自动聚焦的 class 类名\r\n      autofocus: '',\r\n    },\r\n    // 事件拦截器（用于兼容）\r\n    interceptor: {\r\n      // 已实现：event.clearActived\r\n      // 说明：比如点击了某个组件的弹出层面板之后，此时被激活单元格不应该被自动关闭，通过返回 false 可以阻止默认的行为。\r\n      ['event.clearActived'](params, event, target) {\r\n        return true\r\n      },\r\n      // 自定义：event.clearActived.className\r\n      // 说明：比原生的多了一个参数：className，用于判断点击的元素的样式名（递归到顶层）\r\n      ['event.clearActived.className'](params, event, target) {\r\n        return true\r\n      },\r\n    },\r\n    // 【功能开关】\r\n    switches: {\r\n      // 是否使用 editRender 模式（仅当前组件，并非全局）\r\n      // 如果设为true，则表头上方会出现一个可编辑的图标\r\n      editRender: true,\r\n      // false = 组件触发后可视）；true = 组件一直可视\r\n      visible: false,\r\n    },\r\n    // 【切面增强】切面事件处理，一般在某些方法执行后同步执行\r\n    aopEvents: {\r\n      // 单元格被激活编辑时会触发该事件\r\n      editActived() {\r\n      },\r\n      // 单元格编辑状态下被关闭时会触发该事件\r\n      editClosed() {\r\n      },\r\n    },\r\n    // 【翻译增强】可以实现例如select组件保存的value，但是span模式下需要显示成text\r\n    translate: {\r\n      // 是否启用翻译\r\n      enabled: false,\r\n      /**\r\n       * 【翻译处理方法】如果handler留空，则使用默认的翻译方法\r\n       * (this指向当前组件)\r\n       *\r\n       * @param value 需要翻译的值\r\n       * @returns{*} 返回翻译后的数据\r\n       */\r\n      handler(value,) {\r\n        // 默认翻译方法\r\n        return filterDictText(this.column.own.options, value)\r\n      },\r\n    },\r\n    /**\r\n     * 【获取值增强】组件抛出的值\r\n     * (this指向当前组件)\r\n     *\r\n     * @param value 保存到数据库里的值\r\n     * @returns{*} 返回处理后的值\r\n     */\r\n    getValue(value) {\r\n      return value\r\n    },\r\n    /**\r\n     * 【设置值增强】设置给组件的值\r\n     * (this指向当前组件)\r\n     *\r\n     * @param value 组件触发的值\r\n     * @returns{*} 返回处理后的值\r\n     */\r\n    setValue(value) {\r\n      return value\r\n    },\r\n    /**\r\n     * 【新增行增强】在用户点击新增时触发的事件，返回新行的默认值\r\n     *\r\n     * @param row 行数据\r\n     * @param column 列配置，.own 是用户配置的参数\r\n     * @param $table vxe 实例\r\n     * @param renderOptions 渲染选项\r\n     * @param params 可以在这里获取 $table\r\n     *\r\n     * @returns 返回新值\r\n     */\r\n    createValue({row, column, $table, renderOptions, params}) {\r\n      return column.own.defaultValue\r\n    },\r\n  }\r\n}\r\n\r\nfunction getListeners() {\r\n  let listeners = Object.assign({}, (this.renderOptions.listeners || {}))\r\n  if (!listeners.change) {\r\n    listeners.change = async (event) => {\r\n      vModel.call(this, event.value)\r\n      await this.$nextTick()\r\n      // 处理 change 事件相关逻辑（例如校验）\r\n      this.params.$table.updateStatus(this.params)\r\n    }\r\n  }\r\n  return listeners\r\n}\r\n\r\nexport function vModel(value, row, property) {\r\n  if (!row) {\r\n    row = this.row\r\n  }\r\n  if (!property) {\r\n    property = this.column.property\r\n  }\r\n  this.$set(row, property, value)\r\n}\r\n\r\n/** 模拟触发事件 */\r\nexport function dispatchEvent({cell, $event}, className, handler) {\r\n  // alwaysEdit 下不模拟触发事件，否者会导致触发两次\r\n  if (this && this.alwaysEdit) {\r\n    return\r\n  }\r\n  window.setTimeout(() => {\r\n    let element = cell.getElementsByClassName(className)\r\n    if (element && element.length > 0) {\r\n      if (typeof handler === 'function') {\r\n        handler(element[0])\r\n      } else {\r\n        // 模拟触发点击事件\r\n        if($event){\r\n          element[0].dispatchEvent($event)\r\n        }\r\n      }\r\n    }\r\n  }, 10)\r\n}"]}]}