{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\jeecg\\JVxeDemo\\demo\\SocketReload.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\jeecg\\JVxeDemo\\demo\\SocketReload.vue","mtime":1661074531268},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction } from '@api/manage';\nimport { JVXETypes } from '@/components/jeecg/JVxeTable'; // 无痕刷新示例\n\nexport default {\n  name: 'SocketReload',\n  data: function data() {\n    return {\n      loading: false,\n      dataSource: [],\n      columns: [{\n        key: 'num',\n        title: '序号',\n        width: '80px'\n      }, {\n        key: 'ship_name',\n        title: '船名',\n        width: '180px',\n        type: JVXETypes.input\n      }, {\n        key: 'call',\n        title: '呼叫',\n        width: '80px',\n        type: JVXETypes.input\n      }, {\n        key: 'len',\n        title: '长',\n        width: '80px',\n        type: JVXETypes.input\n      }, {\n        key: 'ton',\n        title: '吨',\n        width: '120px',\n        type: JVXETypes.input\n      }, {\n        key: 'payer',\n        title: '付款方',\n        width: '120px',\n        type: JVXETypes.input\n      }, {\n        key: 'count',\n        title: '数',\n        width: '40px'\n      }, {\n        key: 'company',\n        title: '公司',\n        minWidth: '180px',\n        type: JVXETypes.input\n      }, {\n        key: 'trend',\n        title: '动向',\n        width: '120px',\n        type: JVXETypes.input\n      }],\n      // 查询url地址\n      url: {\n        getData: '/mock/vxe/getData'\n      },\n      // 是否启用日历刷新效果\n      reloadEffect: false\n    };\n  },\n  created: function created() {\n    this.loadData();\n  },\n  methods: {\n    // 加载数据\n    loadData: function loadData() {\n      var _this = this;\n\n      var formData = {\n        pageNo: 1,\n        pageSize: 200\n      };\n      this.loading = true;\n      getAction(this.url.getData, formData).then(function (res) {\n        if (res.success) {\n          _this.dataSource = res.result.records;\n        } else {\n          _this.$error({\n            title: '主表查询失败',\n            content: res.message\n          });\n        }\n      }).finally(function () {\n        _this.loading = false;\n      });\n    },\n    // 单元格编辑完成之后触发的事件\n    handleEditClosed: function handleEditClosed(event) {\n      var _this2 = this;\n\n      var $table = event.$table,\n          row = event.row,\n          column = event.column;\n      var field = column.property;\n      var cellValue = row[field]; // 判断单元格值是否被修改\n\n      if ($table.isUpdateByRow(row, field)) {\n        // 校验当前行\n        $table.validate(row).then(function (errMap) {\n          // 校验通过\n          if (!errMap) {\n            // 【模拟保存】（此处需要替换成真实的请求）\n            var hideLoading = _this2.$message.loading(\"\\u6B63\\u5728\\u4FDD\\u5B58\\\"\".concat(column.title, \"\\\"\"), 0);\n\n            setTimeout(function () {\n              hideLoading();\n\n              _this2.$message.success(\"\\\"\".concat(column.title, \"\\\"\\u4FDD\\u5B58\\u6210\\u529F\\uFF01\")); // 局部更新单元格为已保存状态\n\n\n              $table.reloadRow(row, null, field); // 发送更新消息\n\n              _this2.$refs.table.socketSendUpdateRow(row);\n            }, 555);\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["SocketReload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-card title=\"无痕刷新示例\" :bordered=\"false\">\r\n\r\n    <div style=\"margin-bottom: 8px;\">\r\n      <span>启用数据变动特效：</span>\r\n      <a-switch v-model=\"reloadEffect\"/>\r\n    </div>\r\n\r\n    <!--\r\n      【即时保存大体思路】：\r\n      1. 该功能依赖于【即时保存】功能，请先看即时保存示例\r\n      2. 必须要有 socket-reload 属性，且设为 true\r\n      3. 必须要有 socket-key 属性，该属性为当前表格的唯一标识，\r\n         系统会自动更新所有 socket-key 相同的表格\r\n      4. 在局部保存 edit-closed 事件中，\r\n         保存成功后调用 socketSendUpdateRow 方法，将当前 row 传递过去即可 （见第 108 行）\r\n    -->\r\n    <j-vxe-table\r\n      ref=\"table\"\r\n      row-number\r\n      row-selection\r\n\r\n      keep-source\r\n      socket-reload\r\n      socket-key=\"demo-socket-reload\"\r\n      :reload-effect=\"reloadEffect\"\r\n\r\n      :height=\"340\"\r\n      :loading=\"loading\"\r\n      :columns=\"columns\"\r\n      :dataSource=\"dataSource\"\r\n      @edit-closed=\"handleEditClosed\"\r\n    />\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@api/manage'\r\n  import { JVXETypes } from '@/components/jeecg/JVxeTable'\r\n\r\n  // 无痕刷新示例\r\n  export default {\r\n    name: 'SocketReload',\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        dataSource: [],\r\n        columns: [\r\n          {key: 'num', title: '序号', width: '80px'},\r\n          {key: 'ship_name', title: '船名', width: '180px', type: JVXETypes.input},\r\n          {key: 'call', title: '呼叫', width: '80px', type: JVXETypes.input},\r\n          {key: 'len', title: '长', width: '80px', type: JVXETypes.input},\r\n          {key: 'ton', title: '吨', width: '120px', type: JVXETypes.input},\r\n          {key: 'payer', title: '付款方', width: '120px', type: JVXETypes.input},\r\n          {key: 'count', title: '数', width: '40px'},\r\n          {key: 'company', title: '公司', minWidth: '180px', type: JVXETypes.input},\r\n          {key: 'trend', title: '动向', width: '120px', type: JVXETypes.input},\r\n        ],\r\n        // 查询url地址\r\n        url: {\r\n          getData: '/mock/vxe/getData',\r\n        },\r\n        // 是否启用日历刷新效果\r\n        reloadEffect: false,\r\n      }\r\n    },\r\n    created() {\r\n      this.loadData()\r\n    },\r\n    methods: {\r\n      // 加载数据\r\n      loadData() {\r\n        let formData = {pageNo: 1, pageSize: 200}\r\n        this.loading = true\r\n        getAction(this.url.getData, formData).then(res => {\r\n          if (res.success) {\r\n            this.dataSource = res.result.records\r\n          } else {\r\n            this.$error({title: '主表查询失败', content: res.message})\r\n          }\r\n        }).finally(() => {\r\n          this.loading = false\r\n        })\r\n      },\r\n\r\n      // 单元格编辑完成之后触发的事件\r\n      handleEditClosed(event) {\r\n        let {$table, row, column} = event\r\n\r\n        let field = column.property\r\n        let cellValue = row[field]\r\n        // 判断单元格值是否被修改\r\n        if ($table.isUpdateByRow(row, field)) {\r\n          // 校验当前行\r\n          $table.validate(row).then((errMap) => {\r\n            // 校验通过\r\n            if (!errMap) {\r\n              // 【模拟保存】（此处需要替换成真实的请求）\r\n              let hideLoading = this.$message.loading(`正在保存\"${column.title}\"`, 0)\r\n              setTimeout(() => {\r\n                hideLoading()\r\n                this.$message.success(`\"${column.title}\"保存成功！`)\r\n                // 局部更新单元格为已保存状态\r\n                $table.reloadRow(row, null, field)\r\n                // 发送更新消息\r\n                this.$refs.table.socketSendUpdateRow(row)\r\n              }, 555)\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/jeecg/JVxeDemo/demo"}]}