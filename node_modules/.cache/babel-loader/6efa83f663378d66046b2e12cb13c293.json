{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JInput.vue","mtime":1661074531178},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\nvar JINPUT_QUERY_LIKE = 'like';\nvar JINPUT_QUERY_NE = 'ne';\nvar JINPUT_QUERY_GE = 'ge'; //大于等于\n\nvar JINPUT_QUERY_LE = 'le'; //小于等于\n\nexport default {\n  name: 'JInput',\n  props: {\n    value: {\n      type: String,\n      required: false\n    },\n    type: {\n      type: String,\n      required: false,\n      default: JINPUT_QUERY_LIKE\n    },\n    placeholder: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    trim: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler() {\n        this.initVal();\n      }\n    },\n    // update-begin author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\n    type: function type() {\n      this.backValue({\n        target: {\n          value: this.inputVal\n        }\n      });\n    } // update-end author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\n\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  data: function data() {\n    return {\n      inputVal: ''\n    };\n  },\n  methods: {\n    initVal: function initVal() {\n      if (!this.value) {\n        this.inputVal = '';\n      } else {\n        var text = this.value;\n\n        switch (this.type) {\n          case JINPUT_QUERY_LIKE:\n            //修复路由传参的值传送到jinput框被前后各截取了一位 #1336\n            if (text.indexOf(\"*\") != -1) {\n              text = text.substring(1, text.length - 1);\n            }\n\n            break;\n\n          case JINPUT_QUERY_NE:\n            text = text.substring(1);\n            break;\n\n          case JINPUT_QUERY_GE:\n            text = text.substring(2);\n            break;\n\n          case JINPUT_QUERY_LE:\n            text = text.substring(2);\n            break;\n\n          default:\n        }\n\n        this.inputVal = text;\n      }\n    },\n    backValue: function backValue(e) {\n      var text = e.target.value;\n\n      if (text && this.trim === true) {\n        text = text.trim();\n      }\n\n      switch (this.type) {\n        case JINPUT_QUERY_LIKE:\n          text = \"*\" + text + \"*\";\n          break;\n\n        case JINPUT_QUERY_NE:\n          text = \"!\" + text;\n          break;\n\n        case JINPUT_QUERY_GE:\n          text = \">=\" + text;\n          break;\n\n        case JINPUT_QUERY_LE:\n          text = \"<=\" + text;\n          break;\n\n        default:\n      }\n\n      this.$emit(\"change\", text);\n    }\n  }\n};",{"version":3,"sources":["JInput.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-input :placeholder=\"placeholder\" :value=\"inputVal\" @input=\"backValue\"></a-input>\r\n</template>\r\n\r\n<script>\r\n  const JINPUT_QUERY_LIKE = 'like';\r\n  const JINPUT_QUERY_NE = 'ne';\r\n  const JINPUT_QUERY_GE = 'ge'; //大于等于\r\n  const JINPUT_QUERY_LE = 'le'; //小于等于\r\n  \r\n  export default {\r\n    name: 'JInput',\r\n    props:{\r\n      value:{\r\n        type:String,\r\n        required:false\r\n      },\r\n      type:{\r\n        type:String,\r\n        required:false,\r\n        default:JINPUT_QUERY_LIKE\r\n      },\r\n      placeholder:{\r\n        type:String,\r\n        required:false,\r\n        default:''\r\n      },\r\n      trim:{\r\n        type: Boolean,\r\n        required: false,\r\n        default:false\r\n      }\r\n    },\r\n    watch:{\r\n      value:{\r\n        immediate:true,\r\n        handler:function(){\r\n          this.initVal();\r\n        }\r\n      },\r\n      // update-begin author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\r\n      type() {\r\n        this.backValue({ target: { value: this.inputVal } })\r\n      },\r\n      // update-end author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    },\r\n    data(){\r\n      return {\r\n        inputVal:''\r\n      }\r\n    },\r\n    methods:{\r\n      initVal(){\r\n        if(!this.value){\r\n          this.inputVal = ''\r\n        }else{\r\n          let text = this.value\r\n          switch (this.type) {\r\n            case JINPUT_QUERY_LIKE:\r\n              //修复路由传参的值传送到jinput框被前后各截取了一位 #1336\r\n              if(text.indexOf(\"*\") != -1){\r\n                text = text.substring(1,text.length-1);\r\n              }\r\n              break;\r\n            case JINPUT_QUERY_NE:\r\n              text = text.substring(1);\r\n              break;\r\n            case JINPUT_QUERY_GE:\r\n              text = text.substring(2);\r\n              break;\r\n            case JINPUT_QUERY_LE:\r\n              text = text.substring(2);\r\n              break;\r\n            default:\r\n          }\r\n          this.inputVal = text\r\n        }\r\n      },\r\n      backValue(e){\r\n        let text = e.target.value\r\n        if(text && this.trim===true){\r\n          text = text.trim()\r\n        }\r\n        switch (this.type) {\r\n          case JINPUT_QUERY_LIKE:\r\n            text = \"*\"+text+\"*\";\r\n            break;\r\n          case JINPUT_QUERY_NE:\r\n            text = \"!\"+text;\r\n            break;\r\n          case JINPUT_QUERY_GE:\r\n            text = \">=\"+text;\r\n            break;\r\n          case JINPUT_QUERY_LE:\r\n            text = \"<=\"+text;\r\n            break;\r\n          default:\r\n        }\r\n        this.$emit(\"change\",text)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/jeecg"}]}