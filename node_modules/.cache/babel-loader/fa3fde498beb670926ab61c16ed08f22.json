{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysCategoryModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysCategoryModal.vue","mtime":1661074531316},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction, getAction } from '@/api/manage';\nimport JTreeSelect from '@/components/jeecg/JTreeSelect';\nexport default {\n  name: \"SysCategoryModal\",\n  components: {\n    JTreeSelect: JTreeSelect\n  },\n  data: function data() {\n    return {\n      title: \"操作\",\n      width: 800,\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        pid: {},\n        name: [{\n          required: true,\n          message: '请输入类型名称!'\n        }]\n      },\n      url: {\n        add: \"/sys/category/add\",\n        edit: \"/sys/category/edit\",\n        checkCode: \"/sys/category/checkCode\"\n      },\n      expandedRowKeys: [],\n      pidField: \"pid\",\n      subExpandedKeys: []\n    };\n  },\n  created: function created() {},\n  computed: {\n    disabled: function disabled() {\n      return this.model.id ? true : false;\n    }\n  },\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      this.model = Object.assign({}, record);\n      this.visible = true;\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    },\n    handleOk: function handleOk() {\n      var _this = this;\n\n      var that = this; // 触发表单验证\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this.model.id) {\n            httpurl += _this.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this.url.edit;\n            method = 'put';\n          }\n\n          httpAction(httpurl, _this.model, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message); // close的时候清空了表单的值 导致model为空 修改值在列表页没有变 此处需要复制一下model\n\n              that.submitSuccess(_objectSpread({}, _this.model));\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    submitSuccess: function submitSuccess(formData) {\n      if (!formData.id) {\n        var treeData = this.$refs.treeSelect.getCurrTreeData();\n        this.expandedRowKeys = [];\n        this.getExpandKeysByPid(formData[this.pidField], treeData, treeData);\n\n        if (formData.pid && this.expandedRowKeys.length == 0) {\n          this.expandedRowKeys = this.subExpandedKeys;\n        }\n\n        this.$emit('ok', formData, this.expandedRowKeys.reverse());\n      } else {\n        this.$emit('ok', formData);\n      }\n    },\n    getExpandKeysByPid: function getExpandKeysByPid(pid, arr, all) {\n      if (pid && arr && arr.length > 0) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i].key == pid) {\n            this.expandedRowKeys.push(arr[i].key);\n            this.getExpandKeysByPid(arr[i]['parentId'], all, all);\n          } else {\n            this.getExpandKeysByPid(pid, arr[i].children, all);\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["SysCategoryModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"width\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    :destroyOnClose=\"true\"\r\n    cancelText=\"关闭\">\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\r\n\r\n        <a-form-model-item label=\"父级节点\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"pid\">\r\n          <j-tree-select\r\n            ref=\"treeSelect\"\r\n            placeholder=\"请选择父级节点\"\r\n            v-model=\"model.pid\"\r\n            dict=\"sys_category,name,id\"\r\n            pidField=\"pid\"\r\n            pidValue=\"0\"\r\n           :disabled=\"disabled\">\r\n          </j-tree-select>\r\n        </a-form-model-item>\r\n\r\n        <a-form-model-item label=\"分类名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"name\">\r\n          <a-input v-model=\"model.name\" placeholder=\"请输入分类名称\"></a-input>\r\n        </a-form-model-item>\r\n\r\n      </a-form-model>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { httpAction,getAction } from '@/api/manage'\r\n  import JTreeSelect from '@/components/jeecg/JTreeSelect'\r\n\r\n  export default {\r\n    name: \"SysCategoryModal\",\r\n    components: {\r\n      JTreeSelect\r\n    },\r\n    data () {\r\n      return {\r\n        title:\"操作\",\r\n        width:800,\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n\r\n        confirmLoading: false,\r\n        validatorRules:{\r\n          pid:{},\r\n          name: [{ required: true, message: '请输入类型名称!' }]\r\n        },\r\n        url: {\r\n          add: \"/sys/category/add\",\r\n          edit: \"/sys/category/edit\",\r\n          checkCode:\"/sys/category/checkCode\",\r\n        },\r\n        expandedRowKeys:[],\r\n        pidField:\"pid\",\r\n        subExpandedKeys:[]\r\n\r\n      }\r\n    },\r\n    created () {\r\n    },\r\n    computed : {\r\n      disabled() {\r\n          return this.model.id?true : false;\r\n      }\r\n    },\r\n    methods: {\r\n      add () {\r\n        this.edit({});\r\n      },\r\n      edit (record) {\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.$refs.form.resetFields();\r\n      },\r\n      handleOk () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.$refs.form.validate(valid => {\r\n          if (valid) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(!this.model.id){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n               method = 'put';\r\n            }\r\n            httpAction(httpurl,this.model,method).then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                // close的时候清空了表单的值 导致model为空 修改值在列表页没有变 此处需要复制一下model\r\n                that.submitSuccess({...this.model})\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n          }else{\r\n            return false;\r\n          }\r\n\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      submitSuccess(formData){\r\n        if(!formData.id){\r\n          let treeData = this.$refs.treeSelect.getCurrTreeData()\r\n          this.expandedRowKeys=[]\r\n          this.getExpandKeysByPid(formData[this.pidField],treeData,treeData)\r\n          if(formData.pid && this.expandedRowKeys.length==0){\r\n            this.expandedRowKeys = this.subExpandedKeys;\r\n          }\r\n          this.$emit('ok',formData,this.expandedRowKeys.reverse());\r\n        }else{\r\n          this.$emit('ok',formData);\r\n      }\r\n      },\r\n      getExpandKeysByPid(pid,arr,all){\r\n        if(pid && arr && arr.length>0){\r\n          for(let i=0;i<arr.length;i++){\r\n            if(arr[i].key==pid){\r\n              this.expandedRowKeys.push(arr[i].key)\r\n              this.getExpandKeysByPid(arr[i]['parentId'],all,all)\r\n            }else{\r\n              this.getExpandKeysByPid(pid,arr[i].children,all)\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/views/system/modules"}]}