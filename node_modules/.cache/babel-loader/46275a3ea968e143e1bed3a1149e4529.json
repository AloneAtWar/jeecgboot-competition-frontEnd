{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeInputCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeInputCell.vue","mtime":1661074531191},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { JVXETypes } from '@/components/jeecg/JVxeTable';\nimport JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins';\nvar NumberRegExp = /^-?\\d+\\.?\\d*$/;\nexport default {\n  name: 'JVxeInputCell',\n  mixins: [JVxeCellMixins],\n  methods: {\n    /** 处理change事件 */\n    handleChange: function handleChange(event) {\n      var $type = this.$type;\n      var target = event.target;\n      var value = target.value,\n          selectionStart = target.selectionStart;\n      var change = true;\n\n      if ($type === JVXETypes.inputNumber) {\n        // 判断输入的值是否匹配数字正则表达式，不匹配就还原\n        if (!NumberRegExp.test(value) && value !== '' && value !== '-') {\n          change = false;\n          value = this.innerValue;\n          target.value = value || '';\n\n          if (typeof selectionStart === 'number') {\n            target.selectionStart = selectionStart - 1;\n            target.selectionEnd = selectionStart - 1;\n          }\n        }\n      } // 触发事件，存储输入的值\n\n\n      if (change) {\n        this.handleChangeCommon(value);\n      }\n\n      if ($type === JVXETypes.inputNumber) {// this.recalcOneStatisticsColumn(col.key)\n      }\n    },\n\n    /** 处理blur失去焦点事件 */\n    handleBlur: function handleBlur(event) {\n      var $type = this.$type;\n      var target = event.target; // 判断输入的值是否匹配数字正则表达式，不匹配就置空\n\n      if ($type === JVXETypes.inputNumber) {\n        if (!NumberRegExp.test(target.value)) {\n          target.value = '';\n        } else {\n          target.value = Number.parseFloat(target.value);\n        }\n\n        this.handleChangeCommon(target.value);\n      }\n\n      this.handleBlurCommon(target.value);\n    }\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    installOptions: {\n      // 自动聚焦的 class 类名\n      autofocus: '.ant-input'\n    },\n    getValue: function getValue(value) {\n      if (this.$type === JVXETypes.inputNumber && typeof value === 'string') {\n        if (NumberRegExp.test(value)) {\n          return Number.parseFloat(value);\n        }\n      }\n\n      return value;\n    }\n  }\n};",{"version":3,"sources":["JVxeInputCell.vue"],"names":[],"mappings":";;;;;;;;;;AAWA,SAAA,SAAA,QAAA,8BAAA;AACA,OAAA,cAAA,MAAA,oDAAA;AAEA,IAAA,YAAA,GAAA,eAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,MAAA,EAAA,CAAA,cAAA,CAFA;AAGA,EAAA,OAAA,EAAA;AAEA;AACA,IAAA,YAHA,wBAGA,KAHA,EAGA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UAEA,MAFA,GAEA,KAFA,CAEA,MAFA;AAAA,UAGA,KAHA,GAGA,MAHA,CAGA,KAHA;AAAA,UAGA,cAHA,GAGA,MAHA,CAGA,cAHA;AAIA,UAAA,MAAA,GAAA,IAAA;;AACA,UAAA,KAAA,KAAA,SAAA,CAAA,WAAA,EAAA;AACA;AACA,YAAA,CAAA,YAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,KAAA,KAAA,EAAA,IAAA,KAAA,KAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,KAAA;AACA,UAAA,KAAA,GAAA,KAAA,UAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,KAAA,IAAA,EAAA;;AACA,cAAA,OAAA,cAAA,KAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,cAAA,GAAA,cAAA,GAAA,CAAA;AACA,YAAA,MAAA,CAAA,YAAA,GAAA,cAAA,GAAA,CAAA;AACA;AACA;AACA,OAhBA,CAiBA;;;AACA,UAAA,MAAA,EAAA;AACA,aAAA,kBAAA,CAAA,KAAA;AACA;;AAEA,UAAA,KAAA,KAAA,SAAA,CAAA,WAAA,EAAA,CACA;AACA;AACA,KA5BA;;AA8BA;AACA,IAAA,UA/BA,sBA+BA,KA/BA,EA+BA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UAEA,MAFA,GAEA,KAFA,CAEA,MAFA,EAGA;;AACA,UAAA,KAAA,KAAA,SAAA,CAAA,WAAA,EAAA;AACA,YAAA,CAAA,YAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA,SAFA,MAEA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA;;AACA,aAAA,kBAAA,CAAA,MAAA,CAAA,KAAA;AACA;;AAEA,WAAA,gBAAA,CAAA,MAAA,CAAA,KAAA;AACA;AA7CA,GAHA;AAmDA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,cAAA,EAAA;AACA;AACA,MAAA,SAAA,EAAA;AAFA,KADA;AAKA,IAAA,QALA,oBAKA,KALA,EAKA;AACA,UAAA,KAAA,KAAA,KAAA,SAAA,CAAA,WAAA,IAAA,OAAA,KAAA,KAAA,QAAA,EAAA;AACA,YAAA,YAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,iBAAA,MAAA,CAAA,UAAA,CAAA,KAAA,CAAA;AACA;AACA;;AACA,aAAA,KAAA;AACA;AAZA;AApDA,CAAA","sourcesContent":["<template>\r\n  <a-input\r\n    ref=\"input\"\r\n    :value=\"innerValue\"\r\n    v-bind=\"cellProps\"\r\n    @blur=\"handleBlur\"\r\n    @change=\"handleChange\"\r\n  />\r\n</template>\r\n\r\n<script>\r\n  import { JVXETypes } from '@/components/jeecg/JVxeTable'\r\n  import JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\r\n\r\n  const NumberRegExp = /^-?\\d+\\.?\\d*$/\r\n  export default {\r\n    name: 'JVxeInputCell',\r\n    mixins: [JVxeCellMixins],\r\n    methods: {\r\n\r\n      /** 处理change事件 */\r\n      handleChange(event) {\r\n        let {$type} = this\r\n        let {target} = event\r\n        let {value, selectionStart} = target\r\n        let change = true\r\n        if ($type === JVXETypes.inputNumber) {\r\n          // 判断输入的值是否匹配数字正则表达式，不匹配就还原\r\n          if (!NumberRegExp.test(value) && (value !== '' && value !== '-')) {\r\n            change = false\r\n            value = this.innerValue\r\n            target.value = value || ''\r\n            if (typeof selectionStart === 'number') {\r\n              target.selectionStart = selectionStart - 1\r\n              target.selectionEnd = selectionStart - 1\r\n            }\r\n          }\r\n        }\r\n        // 触发事件，存储输入的值\r\n        if (change) {\r\n          this.handleChangeCommon(value)\r\n        }\r\n\r\n        if ($type === JVXETypes.inputNumber) {\r\n          // this.recalcOneStatisticsColumn(col.key)\r\n        }\r\n      },\r\n\r\n      /** 处理blur失去焦点事件 */\r\n      handleBlur(event) {\r\n        let {$type} = this\r\n        let {target} = event\r\n        // 判断输入的值是否匹配数字正则表达式，不匹配就置空\r\n        if ($type === JVXETypes.inputNumber) {\r\n          if (!NumberRegExp.test(target.value)) {\r\n            target.value = ''\r\n          } else {\r\n            target.value = Number.parseFloat(target.value)\r\n          }\r\n          this.handleChangeCommon(target.value)\r\n        }\r\n\r\n        this.handleBlurCommon(target.value)\r\n      },\r\n\r\n    },\r\n    // 【组件增强】注释详见：JVxeCellMixins.js\r\n    enhanced: {\r\n      installOptions: {\r\n        // 自动聚焦的 class 类名\r\n        autofocus: '.ant-input',\r\n      },\r\n      getValue(value) {\r\n        if (this.$type === JVXETypes.inputNumber && typeof value === 'string') {\r\n          if (NumberRegExp.test(value)) {\r\n            return Number.parseFloat(value)\r\n          }\r\n        }\r\n        return value\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/jeecg/JVxeTable/components/cells"}]}