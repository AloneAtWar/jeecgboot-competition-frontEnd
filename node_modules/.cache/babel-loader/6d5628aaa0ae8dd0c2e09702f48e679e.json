{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysPositionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysPositionModal.vue","mtime":1661074531319},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { httpAction } from '@/api/manage';\nimport { duplicateCheck } from '@/api/api';\nimport JDictSelectTag from '@/components/dict/JDictSelectTag';\nvar validatorCodeTimer = null;\nexport default {\n  name: 'SysPositionModal',\n  components: {\n    JDictSelectTag: JDictSelectTag\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        code: [{\n          required: true,\n          message: '请输入职务编码'\n        }, {\n          validator: function validator(rule, value, callback) {\n            // 函数消抖的简单实现，防止一段时间内发送多次请求\n            if (validatorCodeTimer) {\n              // 停止上次开启的定时器\n              clearTimeout(validatorCodeTimer);\n            }\n\n            validatorCodeTimer = setTimeout(function () {\n              duplicateCheck({\n                tableName: 'sys_position',\n                fieldName: 'code',\n                fieldVal: value,\n                dataId: _this.model.id\n              }).then(function (res) {\n                if (res.success) {\n                  callback();\n                } else {\n                  callback(res.message);\n                }\n              }).catch(console.error);\n            }, 300);\n          }\n        }],\n        name: [{\n          required: true,\n          message: '请输入职务名称'\n        }],\n        postRank: [{\n          required: true,\n          message: '请选择职级'\n        }]\n      },\n      url: {\n        add: '/sys/position/add',\n        edit: '/sys/position/edit'\n      },\n      readOnly: false\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      this.model = Object.assign({}, record);\n      this.visible = true;\n\n      if (record.id) {\n        this.readOnly = true;\n      } else {\n        this.readOnly = false;\n      }\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          httpAction(httpurl, _this2.model, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    }\n  }\n};",{"version":3,"sources":["SysPositionModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :maskClosable=\"false\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\r\n\r\n        <a-form-model-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          prop=\"code\"\r\n          required\r\n          label=\"职务编码\">\r\n          <a-input placeholder=\"请输入职务编码\" v-model=\"model.code\" :read-only=\"readOnly\"/>\r\n        </a-form-model-item>\r\n        <a-form-model-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          prop=\"name\"\r\n          required\r\n          label=\"职务名称\">\r\n          <a-input placeholder=\"请输入职务名称\" v-model=\"model.name\"/>\r\n        </a-form-model-item>\r\n        <a-form-model-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          prop=\"postRank\"\r\n          required\r\n          label=\"职级\"\r\n        >\r\n          <j-dict-select-tag\r\n            placeholder=\"请选择职级\"\r\n            dictCode=\"position_rank\"\r\n            v-model=\"model.postRank\"\r\n          />\r\n        </a-form-model-item>\r\n\r\n      </a-form-model>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import pick from 'lodash.pick'\r\n  import { httpAction } from '@/api/manage'\r\n  import { duplicateCheck } from '@/api/api'\r\n  import JDictSelectTag from '@/components/dict/JDictSelectTag'\r\n\r\n  let validatorCodeTimer = null\r\n\r\n  export default {\r\n    name: 'SysPositionModal',\r\n    components: { JDictSelectTag },\r\n    data() {\r\n      return {\r\n        title: '操作',\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        confirmLoading: false,\r\n        validatorRules: {\r\n          code: [\r\n              { required: true, message: '请输入职务编码' },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  // 函数消抖的简单实现，防止一段时间内发送多次请求\r\n                  if (validatorCodeTimer) {\r\n                    // 停止上次开启的定时器\r\n                    clearTimeout(validatorCodeTimer)\r\n                  }\r\n                  validatorCodeTimer = setTimeout(() => {\r\n                    duplicateCheck({\r\n                      tableName: 'sys_position',\r\n                      fieldName: 'code',\r\n                      fieldVal: value,\r\n                      dataId: this.model.id\r\n                    }).then((res) => {\r\n                      if (res.success) {\r\n                        callback()\r\n                      } else {\r\n                        callback(res.message)\r\n                      }\r\n                    }).catch(console.error)\r\n                  }, 300)\r\n                }\r\n              }\r\n            ],\r\n          name: [{ required: true, message: '请输入职务名称' }] ,\r\n          postRank:  [{ required: true, message: '请选择职级' }] ,\r\n        },\r\n        url: {\r\n          add: '/sys/position/add',\r\n          edit: '/sys/position/edit',\r\n        },\r\n        readOnly:false\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      add() {\r\n        this.edit({})\r\n      },\r\n      edit(record) {\r\n        this.model = Object.assign({}, record)\r\n        this.visible = true\r\n        if(record.id){\r\n          this.readOnly=true\r\n        }else{\r\n          this.readOnly=false\r\n        }\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n        this.$refs.form.resetFields();\r\n      },\r\n      handleOk() {\r\n        const that = this\r\n        // 触发表单验证\r\n        this.$refs.form.validate(valid => {\r\n          if (valid) {\r\n            that.confirmLoading = true\r\n            let httpurl = ''\r\n            let method = ''\r\n            if (!this.model.id) {\r\n              httpurl += this.url.add\r\n              method = 'post'\r\n            } else {\r\n              httpurl += this.url.edit\r\n              method = 'put'\r\n            }\r\n\r\n            httpAction(httpurl, this.model, method).then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message)\r\n                that.$emit('ok')\r\n              } else {\r\n                that.$message.warning(res.message)\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false\r\n              that.close()\r\n            })\r\n          }else{\r\n            return false;\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/system/modules"}]}