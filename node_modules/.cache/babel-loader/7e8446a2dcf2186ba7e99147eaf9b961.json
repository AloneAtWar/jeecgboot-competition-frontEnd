{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\QuartzJobModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\QuartzJobModal.vue","mtime":1661074531314},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction } from '@/api/manage'; // import JCron from \"@/components/jeecg/JCron\";\n\nimport cronValidator from \"@/components/jeecg/JEasyCron/validator\";\nexport default {\n  name: \"QuartzJobModal\",\n  components: {// JCron,\n  },\n  data: function data() {\n    return {\n      title: \"操作\",\n      buttonStyle: 'solid',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      cron: {\n        label: '',\n        value: ''\n      },\n      confirmLoading: false,\n      validatorRules: {\n        cronExpression: [{\n          required: true,\n          message: '请输入cron表达式!'\n        }, {\n          validator: cronValidator\n        }],\n        jobClassName: [{\n          required: true,\n          message: '请输入任务类名!'\n        }]\n      },\n      url: {\n        add: \"/sys/quartzJob/add\",\n        edit: \"/sys/quartzJob/edit\"\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      // 统一设置默认值\n      this.edit({\n        cronExpression: '* * * * * ? *',\n        status: 0\n      });\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.$refs.form.resetFields();\n\n        _this.model = Object.assign({}, record);\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.$refs.form.validate(function (ok, err) {\n        if (ok) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          console.log('提交参数', _this2.model);\n          httpAction(httpurl, _this2.model, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n              that.close();\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    }\n  }\n};",{"version":3,"sources":["QuartzJobModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    okText=\"保存并安排任务\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\r\n\r\n        <a-form-model-item :labelCol=\"labelCol\"  :wrapperCol=\"wrapperCol\" label=\"任务类名\" prop=\"jobClassName\" hasFeedback >\r\n          <a-input placeholder=\"请输入任务类名\" v-model=\"model.jobClassName\" />\r\n        </a-form-model-item>\r\n        <a-form-model-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"Cron表达式\" prop=\"cronExpression\">\r\n          <!-- <j-cron v-model=\"model.cronExpression\"/>-->\r\n          <j-easy-cron v-model=\"model.cronExpression\" />\r\n        </a-form-model-item>\r\n        <a-form-model-item  :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"参数\" prop=\"parameter\" >\r\n          <a-textarea placeholder=\"请输入参数\" :rows=\"5\" v-model=\"model.parameter\" />\r\n        </a-form-model-item>\r\n        <a-form-model-item :labelCol=\"labelCol\"  :wrapperCol=\"wrapperCol\" label=\"描述\" prop=\"description\">\r\n          <a-textarea placeholder=\"请输入描述\" :rows=\"3\" v-model=\"model.description\" />\r\n        </a-form-model-item>\r\n        <a-form-model-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"  label=\"状态\" prop=\"status\">\r\n          <j-dict-select-tag type=\"radioButton\" v-model=\"model.status\" dictCode=\"quartz_status\"/>\r\n        </a-form-model-item>\r\n      </a-form-model>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { httpAction } from '@/api/manage'\r\n  // import JCron from \"@/components/jeecg/JCron\";\r\n  import cronValidator from \"@/components/jeecg/JEasyCron/validator\";\r\n\r\n  export default {\r\n    name: \"QuartzJobModal\",\r\n    components: {\r\n      // JCron,\r\n    },\r\n    data () {\r\n      return {\r\n        title:\"操作\",\r\n        buttonStyle: 'solid',\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        cron: {\r\n          label: '',\r\n          value: ''\r\n        },\r\n        confirmLoading: false,\r\n        validatorRules: {\r\n          cronExpression: [\r\n            {required: true, message: '请输入cron表达式!'},\r\n            {validator: cronValidator,}\r\n          ],\r\n          jobClassName: [{required: true, message: '请输入任务类名!'}]\r\n        },\r\n        url: {\r\n          add: \"/sys/quartzJob/add\",\r\n          edit: \"/sys/quartzJob/edit\",\r\n        },\r\n      }\r\n    },\r\n    created () {\r\n    },\r\n    methods: {\r\n      add() {\r\n        // 统一设置默认值\r\n        this.edit({\r\n          cronExpression: '* * * * * ? *',\r\n          status: 0,\r\n        })\r\n      },\r\n      edit (record) {\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          this.$refs.form.resetFields()\r\n          this.model = Object.assign({}, record)\r\n        })\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.$refs.form.validate((ok, err) => {\r\n          if (ok) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(!this.model.id){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n              method = 'put';\r\n            }\r\n\r\n            console.log('提交参数',this.model)\r\n            httpAction(httpurl,this.model,method).then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n                that.close();\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n            })\r\n\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/system/modules"}]}