{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\thirdApp\\JThirdAppButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\thirdApp\\JThirdAppButton.vue","mtime":1661074531209},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:/a/ant-design-vue-jeecg/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction } from '@/api/manage';\nimport { cloneObject } from '@/utils/util';\nimport JThirdAppDropdown from './JThirdAppDropdown';\nvar backEndUrl = {\n  // 获取启用的第三方App\n  getEnabledType: '/sys/thirdApp/getEnabledType',\n  // 企业微信\n  wechatEnterprise: {\n    user: '/sys/thirdApp/sync/wechatEnterprise/user',\n    depart: '/sys/thirdApp/sync/wechatEnterprise/depart'\n  },\n  // 钉钉\n  dingtalk: {\n    user: '/sys/thirdApp/sync/dingtalk/user',\n    depart: '/sys/thirdApp/sync/dingtalk/depart'\n  }\n};\nexport default {\n  name: 'JThirdAppButton',\n  components: {\n    JThirdAppDropdown: JThirdAppDropdown\n  },\n  props: {\n    // 同步类型，可以是 user、depart\n    bizType: {\n      type: String,\n      required: true\n    },\n    // 是否允许同步到第三方APP\n    syncToApp: Boolean,\n    // 是否允许第三方APP同步到本地\n    syncToLocal: Boolean,\n    // 选择的行\n    selectedRowKeys: Array\n  },\n  data: function data() {\n    return {\n      enabledTypes: {},\n      attrs: {\n        dingtalk: {}\n      }\n    };\n  },\n  computed: {\n    bindAttrs: function bindAttrs() {\n      return {\n        syncToApp: this.syncToApp,\n        syncToLocal: this.syncToLocal\n      };\n    },\n    bindEvents: function bindEvents() {\n      return {\n        'to-app': this.onToApp,\n        'to-local': this.onToLocal\n      };\n    }\n  },\n  created: function created() {\n    this.loadEnabledTypes();\n  },\n  methods: {\n    handleMenuClick: function handleMenuClick() {\n      console.log(arguments);\n    },\n    onToApp: function onToApp(e) {\n      this.doSync(e.type, '/toApp');\n    },\n    onToLocal: function onToLocal(e) {\n      this.doSync(e.type, '/toLocal');\n    },\n    // 获取启用的第三方App\n    loadEnabledTypes: function () {\n      var _loadEnabledTypes2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _loadEnabledTypes();\n\n              case 2:\n                this.enabledTypes = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadEnabledTypes() {\n        return _loadEnabledTypes2.apply(this, arguments);\n      }\n\n      return loadEnabledTypes;\n    }(),\n    // 开始同步第三方App\n    doSync: function doSync(type, direction) {\n      var _this = this;\n\n      var urls = backEndUrl[type];\n\n      if (!(urls && urls[this.bizType])) {\n        console.warn('配置出错');\n        return;\n      }\n\n      var url = urls[this.bizType] + direction;\n      var selectedRowKeys = this.selectedRowKeys;\n      var content = '确定要开始同步全部数据吗？可能花费较长时间！';\n\n      if (Array.isArray(selectedRowKeys) && selectedRowKeys.length > 0) {\n        content = \"\\u786E\\u5B9A\\u8981\\u5F00\\u59CB\\u540C\\u6B65\\u8FD9 \".concat(selectedRowKeys.length, \" \\u9879\\u5417\\uFF1F\");\n      } else {\n        selectedRowKeys = [];\n      }\n\n      return new Promise(function (resolve, reject) {\n        var model = _this.$confirm({\n          title: '同步',\n          content: content,\n          onOk: function onOk() {\n            model.update({\n              keyboard: false,\n              okText: '同步中…',\n              cancelButtonProps: {\n                props: {\n                  disabled: true\n                }\n              }\n            });\n            return getAction(url, {\n              ids: selectedRowKeys.join(',')\n            }).then(function (res) {\n              var options = null;\n\n              if (res.result) {\n                options = {\n                  width: 600,\n                  title: res.message,\n                  content: function content(h) {\n                    var nodes;\n                    var successInfo = [\"\\u6210\\u529F\\u4FE1\\u606F\\u5982\\u4E0B\\uFF1A\", _this.renderTextarea(h, res.result.successInfo.map(function (v, i) {\n                      return \"\".concat(i + 1, \". \").concat(v);\n                    }).join('\\n'))];\n\n                    if (res.success) {\n                      nodes = [].concat(successInfo, [h('br'), \"\\u65E0\\u5931\\u8D25\\u4FE1\\u606F\\uFF01\"]);\n                    } else {\n                      nodes = [\"\\u5931\\u8D25\\u4FE1\\u606F\\u5982\\u4E0B\\uFF1A\", _this.renderTextarea(h, res.result.failInfo.map(function (v, i) {\n                        return \"\".concat(i + 1, \". \").concat(v);\n                      }).join('\\n')), h('br')].concat(successInfo);\n                    }\n\n                    return nodes;\n                  }\n                };\n              }\n\n              if (res.success) {\n                if (options != null) {\n                  _this.$success(options);\n                } else {\n                  _this.$message.success(res.message);\n                }\n\n                _this.$emit('sync-ok');\n              } else {\n                if (options != null) {\n                  _this.$warning(options);\n                } else {\n                  _this.$message.warning(res.message);\n                }\n\n                _this.$emit('sync-error');\n              }\n            }).catch(function () {\n              return model.destroy();\n            }).finally(function () {\n              resolve();\n\n              _this.$emit('sync-finally', {\n                type: type,\n                direction: direction,\n                isToApp: direction === '/toApp',\n                isToLocal: direction === '/toLocal'\n              });\n            });\n          },\n          onCancel: function onCancel() {\n            resolve();\n          }\n        });\n      });\n    },\n    renderTextarea: function renderTextarea(h, value) {\n      return h('a-textarea', {\n        props: {\n          value: value,\n          readOnly: true,\n          autosize: {\n            minRows: 5,\n            maxRows: 10\n          }\n        },\n        style: {\n          // 关闭textarea的自动换行，使其可以左右滚动\n          whiteSpace: 'pre',\n          overflow: 'auto'\n        }\n      });\n    }\n  }\n}; // 启用了哪些第三方App（在此缓存）\n\nvar enabledTypes = null; // 获取启用的第三方App\n\nfunction _loadEnabledTypes() {\n  return _loadEnabledTypes3.apply(this, arguments);\n}\n\nfunction _loadEnabledTypes3() {\n  _loadEnabledTypes3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _yield$getAction, success, result;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(enabledTypes != null)) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", cloneObject(enabledTypes));\n\n          case 4:\n            _context2.next = 6;\n            return getAction(backEndUrl.getEnabledType);\n\n          case 6:\n            _yield$getAction = _context2.sent;\n            success = _yield$getAction.success;\n            result = _yield$getAction.result;\n\n            if (!success) {\n              _context2.next = 14;\n              break;\n            }\n\n            // 在此缓存\n            enabledTypes = cloneObject(result);\n            return _context2.abrupt(\"return\", result);\n\n          case 14:\n            console.warn('getEnabledType查询失败：', res);\n\n          case 15:\n            return _context2.abrupt(\"return\", {});\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadEnabledTypes3.apply(this, arguments);\n}\n\nexport { _loadEnabledTypes as loadEnabledTypes };",{"version":3,"sources":["JThirdAppButton.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <span v-if=\"syncToApp || syncToLocal\">\r\n    <j-third-app-dropdown v-if=\"enabledTypes.wechatEnterprise\" type=\"wechatEnterprise\" name=\"企微\" v-bind=\"bindAttrs\" v-on=\"bindEvents\"/>\r\n    <j-third-app-dropdown v-if=\"enabledTypes.dingtalk\" type=\"dingtalk\" name=\"钉钉\" v-bind=\"bindAttrs\" v-on=\"bindEvents\"/>\r\n  </span>\r\n  <span v-else>未设置任何同步方向</span>\r\n</template>\r\n\r\n<script>\r\nimport { getAction } from '@/api/manage'\r\nimport { cloneObject } from '@/utils/util'\r\nimport JThirdAppDropdown from './JThirdAppDropdown'\r\n\r\nconst backEndUrl = {\r\n  // 获取启用的第三方App\r\n  getEnabledType: '/sys/thirdApp/getEnabledType',\r\n  // 企业微信\r\n  wechatEnterprise: {\r\n    user: '/sys/thirdApp/sync/wechatEnterprise/user',\r\n    depart: '/sys/thirdApp/sync/wechatEnterprise/depart',\r\n  },\r\n  // 钉钉\r\n  dingtalk: {\r\n    user: '/sys/thirdApp/sync/dingtalk/user',\r\n    depart: '/sys/thirdApp/sync/dingtalk/depart',\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'JThirdAppButton',\r\n  components: {JThirdAppDropdown},\r\n  props: {\r\n    // 同步类型，可以是 user、depart\r\n    bizType: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    // 是否允许同步到第三方APP\r\n    syncToApp: Boolean,\r\n    // 是否允许第三方APP同步到本地\r\n    syncToLocal: Boolean,\r\n    // 选择的行\r\n    selectedRowKeys: Array,\r\n  },\r\n  data() {\r\n    return {\r\n      enabledTypes: {},\r\n      attrs: {\r\n        dingtalk: {},\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    bindAttrs() {\r\n      return {\r\n        syncToApp: this.syncToApp,\r\n        syncToLocal: this.syncToLocal\r\n      }\r\n    },\r\n    bindEvents() {\r\n      return {\r\n        'to-app': this.onToApp,\r\n        'to-local': this.onToLocal,\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.loadEnabledTypes()\r\n  },\r\n  methods: {\r\n    handleMenuClick() {\r\n      console.log(arguments)\r\n    },\r\n    onToApp(e) {\r\n      this.doSync(e.type, '/toApp')\r\n    },\r\n    onToLocal(e) {\r\n      this.doSync(e.type, '/toLocal')\r\n    },\r\n    // 获取启用的第三方App\r\n    async loadEnabledTypes() {\r\n      this.enabledTypes = await loadEnabledTypes()\r\n    },\r\n    // 开始同步第三方App\r\n    doSync(type, direction) {\r\n      let urls = backEndUrl[type]\r\n      if (!(urls && urls[this.bizType])) {\r\n        console.warn('配置出错')\r\n        return\r\n      }\r\n      let url = urls[this.bizType] + direction\r\n\r\n      let selectedRowKeys = this.selectedRowKeys\r\n      let content = '确定要开始同步全部数据吗？可能花费较长时间！'\r\n      if (Array.isArray(selectedRowKeys) && selectedRowKeys.length > 0) {\r\n        content = `确定要开始同步这 ${selectedRowKeys.length} 项吗？`\r\n      } else {\r\n        selectedRowKeys = []\r\n      }\r\n      return new Promise((resolve, reject) => {\r\n        let model = this.$confirm({\r\n          title: '同步',\r\n          content,\r\n          onOk: () => {\r\n            model.update({\r\n              keyboard: false,\r\n              okText: '同步中…',\r\n              cancelButtonProps: {props: {disabled: true}}\r\n            })\r\n            return getAction(url, {\r\n              ids: selectedRowKeys.join(',')\r\n            }).then(res => {\r\n              let options = null\r\n              if (res.result) {\r\n                options = {\r\n                  width: 600,\r\n                  title: res.message,\r\n                  content: (h) => {\r\n                    let nodes\r\n                    let successInfo = [\r\n                      `成功信息如下：`,\r\n                      this.renderTextarea(h, res.result.successInfo.map((v, i) => `${i + 1}. ${v}`).join('\\n')),\r\n                    ]\r\n                    if (res.success) {\r\n                      nodes = [\r\n                        ...successInfo,\r\n                        h('br'),\r\n                        `无失败信息！`,\r\n                      ]\r\n                    } else {\r\n                      nodes = [\r\n                        `失败信息如下：`,\r\n                        this.renderTextarea(h, res.result.failInfo.map((v, i) => `${i + 1}. ${v}`).join('\\n')),\r\n                        h('br'),\r\n                        ...successInfo,\r\n                      ]\r\n                    }\r\n                    return nodes\r\n                  }\r\n                }\r\n              }\r\n              if (res.success) {\r\n                if (options != null) {\r\n                  this.$success(options)\r\n                } else {\r\n                  this.$message.success(res.message)\r\n                }\r\n                this.$emit('sync-ok')\r\n              } else {\r\n                if (options != null) {\r\n                  this.$warning(options)\r\n                } else {\r\n                  this.$message.warning(res.message)\r\n                }\r\n                this.$emit('sync-error')\r\n              }\r\n            }).catch(() => model.destroy()).finally(() => {\r\n              resolve()\r\n              this.$emit('sync-finally', {\r\n                type,\r\n                direction,\r\n                isToApp: direction === '/toApp',\r\n                isToLocal: direction === '/toLocal',\r\n              })\r\n            })\r\n          },\r\n          onCancel() {\r\n            resolve()\r\n          },\r\n        })\r\n      })\r\n    },\r\n    renderTextarea(h, value) {\r\n      return h('a-textarea', {\r\n        props: {\r\n          value: value,\r\n          readOnly: true,\r\n          autosize: {minRows: 5, maxRows: 10},\r\n        },\r\n        style: {\r\n          // 关闭textarea的自动换行，使其可以左右滚动\r\n          whiteSpace: 'pre',\r\n          overflow: 'auto',\r\n        }\r\n      })\r\n    }\r\n  },\r\n}\r\n\r\n// 启用了哪些第三方App（在此缓存）\r\nlet enabledTypes = null\r\n\r\n// 获取启用的第三方App\r\nexport async function loadEnabledTypes() {\r\n  // 获取缓存\r\n  if (enabledTypes != null) {\r\n    return cloneObject(enabledTypes)\r\n  } else {\r\n    let {success, result} = await getAction(backEndUrl.getEnabledType)\r\n    if (success) {\r\n      // 在此缓存\r\n      enabledTypes = cloneObject(result)\r\n      return result\r\n    } else {\r\n      console.warn('getEnabledType查询失败：', res)\r\n    }\r\n  }\r\n  return {}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/jeecgbiz/thirdApp"}]}