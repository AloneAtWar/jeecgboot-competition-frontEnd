{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\jeecg\\modules\\JeecgOrderModalForJVexTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\jeecg\\modules\\JeecgOrderModalForJVexTable.vue","mtime":1661074531280},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JEditableTable from '@/components/jeecg/JEditableTable';\nimport { VALIDATE_FAILED, getRefPromise, validateFormModelAndTables } from '@/components/jeecg/JVxeTable/utils/vxeUtils';\nimport { httpAction, getAction } from '@/api/manage';\nimport { JVXETypes } from '@/components/jeecg/JVxeTable';\nimport JDate from '@/components/jeecg/JDate';\nexport default {\n  name: 'JeecgOrderModalForJvexTable',\n  components: {\n    JDate: JDate,\n    JEditableTable: JEditableTable\n  },\n  data: function data() {\n    return {\n      title: '操作',\n      visible: false,\n      confirmLoading: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 24 - 6\n        }\n      },\n      activeKey: '1',\n      // 客户信息\n      table1: {\n        loading: false,\n        dataSource: [],\n        columns: [{\n          title: '客户名',\n          key: 'name',\n          width: '24%',\n          type: JVXETypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }]\n        }, {\n          title: '性别',\n          key: 'sex',\n          width: '18%',\n          type: JVXETypes.select,\n          options: [// 下拉选项\n          {\n            title: '男',\n            value: '1'\n          }, {\n            title: '女',\n            value: '2'\n          }],\n          defaultValue: '',\n          placeholder: '请选择${title}'\n        }, {\n          title: '身份证号',\n          key: 'idcard',\n          width: '24%',\n          type: JVXETypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            pattern: '^\\\\d{6}(18|19|20)?\\\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\\\d|3[01])\\\\d{3}(\\\\d|[xX])$',\n            message: '${title}格式不正确'\n          }]\n        }, {\n          title: '手机号',\n          key: 'telphone',\n          width: '24%',\n          type: JVXETypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            pattern: '^1(3|4|5|7|8)\\\\d{9}$',\n            message: '${title}格式不正确'\n          }]\n        }]\n      },\n      // 机票信息\n      table2: {\n        loading: false,\n        dataSource: [],\n        columns: [{\n          title: '航班号',\n          key: 'ticketCode',\n          width: '40%',\n          type: JVXETypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }]\n        }, {\n          title: '航班时间',\n          key: 'tickectDate',\n          width: '30%',\n          type: JVXETypes.date,\n          placeholder: '请选择${title}',\n          defaultValue: ''\n        }]\n      },\n      url: {\n        add: '/test/jeecgOrderMain/add',\n        edit: '/test/jeecgOrderMain/edit',\n        orderCustomerList: '/test/jeecgOrderMain/queryOrderCustomerListByMainId',\n        orderTicketList: '/test/jeecgOrderMain/queryOrderTicketListByMainId'\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    // 获取所有的editableTable实例\n    getAllTable: function getAllTable() {\n      return Promise.all([getRefPromise(this, 'editableTable1'), getRefPromise(this, 'editableTable2')]);\n    },\n    add: function add() {\n      // 默认新增一条数据\n      this.getAllTable().then(function (editableTables) {//editableTables[0].add()\n        //editableTables[1].add()\n      });\n      this.edit({});\n    },\n    edit: function edit(record) {\n      this.visible = true;\n      this.activeKey = '1';\n      this.model = Object.assign({}, record); // 加载子表数据\n\n      if (this.model.id) {\n        var params = {\n          id: this.model.id\n        };\n        this.requestTableData(this.url.orderCustomerList, params, this.table1);\n        this.requestTableData(this.url.orderTicketList, params, this.table2);\n      }\n    },\n    close: function close() {\n      var _this = this;\n\n      this.visible = false;\n      this.getAllTable().then(function (editableTables) {\n        _this.table1.dataSource = [];\n        _this.table2.dataSource = [];\n      });\n      this.$emit('close');\n    },\n\n    /** 查询某个tab的数据 */\n    requestTableData: function requestTableData(url, params, tab) {\n      tab.loading = true;\n      getAction(url, params).then(function (res) {\n        tab.dataSource = res.result || [];\n      }).finally(function () {\n        tab.loading = false;\n      });\n    },\n    handleOk: function handleOk() {\n      this.validateFields();\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n\n    /** ATab 选项卡切换事件 */\n    handleChangeTabs: function handleChangeTabs(key) {\n      getRefPromise(this, \"editableTable\".concat(key)).then(function (editableTable) {\n        editableTable.resetScrollTop();\n      });\n    },\n\n    /** 触发表单验证 */\n    validateFields: function validateFields() {\n      var _this2 = this;\n\n      this.getAllTable().then(function (tables) {\n        /** 一次性验证主表和所有的次表 */\n        return validateFormModelAndTables(_this2.$refs.form, _this2.model, tables);\n      }).then(function (allValues) {\n        var formData = _this2.classifyIntoFormData(allValues); // 发起请求\n\n\n        return _this2.requestAddOrEdit(formData);\n      }).catch(function (e) {\n        if (e.error === VALIDATE_FAILED) {\n          // 如果有未通过表单验证的子表，就自动跳转到它所在的tab\n          _this2.activeKey = e.index == null ? _this2.activeKey : (e.index + 1).toString();\n        } else {\n          console.error(e);\n        }\n      });\n    },\n\n    /** 整理成formData */\n    classifyIntoFormData: function classifyIntoFormData(allValues) {\n      var orderMain = Object.assign(this.model, allValues.formValue);\n      return _objectSpread(_objectSpread({}, orderMain), {}, {\n        // 展开\n        jeecgOrderCustomerList: allValues.tablesValue[0].tableData,\n        jeecgOrderTicketList: allValues.tablesValue[1].tableData\n      });\n    },\n\n    /** 发起新增或修改的请求 */\n    requestAddOrEdit: function requestAddOrEdit(formData) {\n      var _this3 = this;\n\n      var url = this.url.add,\n          method = 'post';\n\n      if (this.model.id) {\n        url = this.url.edit;\n        method = 'put';\n      }\n\n      this.confirmLoading = true;\n      httpAction(url, formData, method).then(function (res) {\n        if (res.success) {\n          _this3.$message.success(res.message);\n\n          _this3.$emit('ok');\n\n          _this3.close();\n        } else {\n          _this3.$message.warning(res.message);\n        }\n      }).finally(function () {\n        _this3.confirmLoading = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["JeecgOrderModalForJVexTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"1200\"\r\n    :visible=\"visible\"\r\n    :destroyOnClose=\"true\"\r\n    :maskClosable=\"false\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form-model ref=\"form\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\"  :model=\"model\" >\r\n        <!-- 主表单区域 -->\r\n        <a-row class=\"form-row\" :gutter=\"0\">\r\n          <a-col :lg=\"8\">\r\n            <a-form-model-item  label=\"订单号\" prop=\"orderCode\" :rules=\"[{ required: true, message: '请输入订单号!' }]\">\r\n              <a-input placeholder=\"请输入订单号\" v-model=\"model.orderCode\"/>\r\n            </a-form-model-item>\r\n          </a-col>\r\n          <a-col :lg=\"8\">\r\n            <a-form-model-item  label=\"订单类型\">\r\n              <a-select placeholder=\"请选择订单类型\" v-model=\"model.ctype\">\r\n                <a-select-option value=\"1\">国内订单</a-select-option>\r\n                <a-select-option value=\"2\">国际订单</a-select-option>\r\n              </a-select>\r\n            </a-form-model-item>\r\n          </a-col>\r\n          <a-col :lg=\"8\">\r\n            <a-form-model-item  label=\"订单日期\">\r\n              <a-date-picker showTime valueFormat=\"YYYY-MM-DD HH:mm:ss\" style=\"width: 100%\" v-model=\"model.orderDate\"/>\r\n            </a-form-model-item>\r\n          </a-col>\r\n        </a-row>\r\n        <a-row class=\"form-row\" :gutter=\"0\">\r\n          <a-col :lg=\"8\">\r\n            <a-form-model-item  label=\"订单金额\">\r\n              <a-input-number placeholder=\"请输入订单金额\" style=\"width: 100%\" v-model=\"model.orderMoney\"/>\r\n            </a-form-model-item>\r\n          </a-col>\r\n          <a-col :lg=\"8\">\r\n            <a-form-model-item  label=\"订单备注\">\r\n              <a-input placeholder=\"请输入订单备注\" v-model=\"model.content\"/>\r\n            </a-form-model-item>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form-model>\r\n\r\n      <!-- 子表单区域 -->\r\n      <a-tabs v-model=\"activeKey\" @change=\"handleChangeTabs\">\r\n        <a-tab-pane tab=\"客户信息\" key=\"1\" :forceRender=\"true\">\r\n          <j-vxe-table\r\n            ref=\"editableTable1\"\r\n            toolbar\r\n            row-number\r\n            row-selection\r\n            keep-source\r\n            :height=\"300\"\r\n            :loading=\"table1.loading\"\r\n            :dataSource=\"table1.dataSource\"\r\n            :columns=\"table1.columns\"\r\n            style=\"margin-top: 8px;\"/>\r\n\r\n        </a-tab-pane>\r\n\r\n        <a-tab-pane tab=\"机票信息\" key=\"2\" :forceRender=\"true\">\r\n          <j-vxe-table\r\n            ref=\"editableTable2\"\r\n            toolbar\r\n            row-number\r\n            row-selection\r\n            keep-source\r\n            :height=\"300\"\r\n            :loading=\"table2.loading\"\r\n            :dataSource=\"table2.dataSource\"\r\n            :columns=\"table2.columns\"\r\n            style=\"margin-top: 8px;\"/>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n\r\n  import JEditableTable from '@/components/jeecg/JEditableTable'\r\n  import { VALIDATE_FAILED, getRefPromise, validateFormModelAndTables } from '@/components/jeecg/JVxeTable/utils/vxeUtils'\r\n  import { httpAction, getAction } from '@/api/manage'\r\n  import { JVXETypes } from '@/components/jeecg/JVxeTable'\r\n  import JDate from '@/components/jeecg/JDate'\r\n\r\n  export default {\r\n    name: 'JeecgOrderModalForJvexTable',\r\n    components: {\r\n      JDate, JEditableTable\r\n    },\r\n    data() {\r\n      return {\r\n        title: '操作',\r\n        visible: false,\r\n        confirmLoading: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 6 }\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 24 - 6 }\r\n        },\r\n        activeKey: '1',\r\n        // 客户信息\r\n        table1: {\r\n          loading: false,\r\n          dataSource: [],\r\n          columns: [\r\n            {\r\n              title: '客户名',\r\n              key: 'name',\r\n              width: '24%',\r\n              type: JVXETypes.input,\r\n              defaultValue: '',\r\n              placeholder: '请输入${title}',\r\n              validateRules: [{ required: true, message: '${title}不能为空' }]\r\n            },\r\n            {\r\n              title: '性别',\r\n              key: 'sex',\r\n              width: '18%',\r\n              type: JVXETypes.select,\r\n              options: [ // 下拉选项\r\n                { title: '男', value: '1' },\r\n                { title: '女', value: '2' }\r\n              ],\r\n              defaultValue: '',\r\n              placeholder: '请选择${title}'\r\n            },\r\n            {\r\n              title: '身份证号',\r\n              key: 'idcard',\r\n              width: '24%',\r\n              type: JVXETypes.input,\r\n              defaultValue: '',\r\n              placeholder: '请输入${title}',\r\n              validateRules: [{\r\n                pattern: '^\\\\d{6}(18|19|20)?\\\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\\\d|3[01])\\\\d{3}(\\\\d|[xX])$',\r\n                message: '${title}格式不正确'\r\n              }]\r\n            },\r\n            {\r\n              title: '手机号',\r\n              key: 'telphone',\r\n              width: '24%',\r\n              type: JVXETypes.input,\r\n              defaultValue: '',\r\n              placeholder: '请输入${title}',\r\n              validateRules: [{\r\n                pattern: '^1(3|4|5|7|8)\\\\d{9}$',\r\n                message: '${title}格式不正确'\r\n              }]\r\n            }\r\n          ]\r\n        },\r\n        // 机票信息\r\n        table2: {\r\n          loading: false,\r\n          dataSource: [],\r\n          columns: [\r\n            {\r\n              title: '航班号',\r\n              key: 'ticketCode',\r\n              width: '40%',\r\n              type: JVXETypes.input,\r\n              defaultValue: '',\r\n              placeholder: '请输入${title}',\r\n              validateRules: [{ required: true, message: '${title}不能为空' }]\r\n            },\r\n            {\r\n              title: '航班时间',\r\n              key: 'tickectDate',\r\n              width: '30%',\r\n              type: JVXETypes.date,\r\n              placeholder: '请选择${title}',\r\n              defaultValue: ''\r\n            }\r\n          ]\r\n        },\r\n        url: {\r\n          add: '/test/jeecgOrderMain/add',\r\n          edit: '/test/jeecgOrderMain/edit',\r\n          orderCustomerList: '/test/jeecgOrderMain/queryOrderCustomerListByMainId',\r\n          orderTicketList: '/test/jeecgOrderMain/queryOrderTicketListByMainId'\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n\r\n      // 获取所有的editableTable实例\r\n      getAllTable() {\r\n        return Promise.all([\r\n          getRefPromise(this, 'editableTable1'),\r\n          getRefPromise(this, 'editableTable2')\r\n        ])\r\n      },\r\n\r\n      add() {\r\n        // 默认新增一条数据\r\n        this.getAllTable().then(editableTables => {\r\n          //editableTables[0].add()\r\n          //editableTables[1].add()\r\n        })\r\n        this.edit({})\r\n      },\r\n      edit(record) {\r\n        this.visible = true\r\n        this.activeKey = '1'\r\n        this.model = Object.assign({}, record)\r\n        // 加载子表数据\r\n        if (this.model.id) {\r\n          let params = { id: this.model.id }\r\n          this.requestTableData(this.url.orderCustomerList, params, this.table1)\r\n          this.requestTableData(this.url.orderTicketList, params, this.table2)\r\n        }\r\n\r\n      },\r\n      close() {\r\n        this.visible = false\r\n        this.getAllTable().then(editableTables => {\r\n          this.table1.dataSource=[];\r\n          this.table2.dataSource=[];\r\n        })\r\n        this.$emit('close')\r\n      },\r\n      /** 查询某个tab的数据 */\r\n      requestTableData(url, params, tab) {\r\n        tab.loading = true\r\n        getAction(url, params).then(res => {\r\n          tab.dataSource = res.result || []\r\n        }).finally(() => {\r\n          tab.loading = false\r\n        })\r\n      },\r\n      handleOk() {\r\n        this.validateFields()\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      /** ATab 选项卡切换事件 */\r\n      handleChangeTabs(key) {\r\n        getRefPromise(this, `editableTable${key}`).then(editableTable => {\r\n          editableTable.resetScrollTop()\r\n        })\r\n      },\r\n\r\n      /** 触发表单验证 */\r\n      validateFields() {\r\n        this.getAllTable().then(tables => {\r\n          /** 一次性验证主表和所有的次表 */\r\n          return validateFormModelAndTables(this.$refs.form,this.model, tables)\r\n        }).then(allValues => {\r\n          let formData = this.classifyIntoFormData(allValues)\r\n          // 发起请求\r\n          return this.requestAddOrEdit(formData)\r\n        }).catch(e => {\r\n          if (e.error === VALIDATE_FAILED) {\r\n            // 如果有未通过表单验证的子表，就自动跳转到它所在的tab\r\n            this.activeKey = e.index == null ? this.activeKey : (e.index + 1).toString()\r\n          } else {\r\n            console.error(e)\r\n          }\r\n        })\r\n      },\r\n      /** 整理成formData */\r\n      classifyIntoFormData(allValues) {\r\n        let orderMain = Object.assign(this.model, allValues.formValue)\r\n        return {\r\n          ...orderMain, // 展开\r\n          jeecgOrderCustomerList: allValues.tablesValue[0].tableData,\r\n          jeecgOrderTicketList: allValues.tablesValue[1].tableData\r\n        }\r\n      },\r\n      /** 发起新增或修改的请求 */\r\n      requestAddOrEdit(formData) {\r\n        let url = this.url.add, method = 'post'\r\n        if (this.model.id) {\r\n          url = this.url.edit\r\n          method = 'put'\r\n        }\r\n        this.confirmLoading = true\r\n        httpAction(url, formData, method).then((res) => {\r\n          if (res.success) {\r\n            this.$message.success(res.message)\r\n            this.$emit('ok')\r\n            this.close()\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.confirmLoading = false\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/views/jeecg/modules"}]}