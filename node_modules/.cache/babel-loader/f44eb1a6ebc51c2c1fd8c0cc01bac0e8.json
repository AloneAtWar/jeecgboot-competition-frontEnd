{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\user\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\user\\Login.vue","mtime":1661074531323},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport { ACCESS_TOKEN, ENCRYPTED_STRING } from '@/store/mutation-types';\nimport ThirdLogin from './third/ThirdLogin';\nimport LoginSelectTenant from './LoginSelectTenant';\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha';\nimport { getEncryptedString } from '@/utils/encryption/aesEncrypt';\nimport { timeFix } from '@/utils/util';\nimport LoginAccount from './LoginAccount';\nimport LoginPhone from './LoginPhone';\nexport default {\n  components: {\n    LoginSelectTenant: LoginSelectTenant,\n    TwoStepCaptcha: TwoStepCaptcha,\n    ThirdLogin: ThirdLogin,\n    LoginAccount: LoginAccount,\n    LoginPhone: LoginPhone\n  },\n  data: function data() {\n    return {\n      customActiveKey: 'tab1',\n      rememberMe: true,\n      loginBtn: false,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      encryptedString: {\n        key: \"\",\n        iv: \"\"\n      }\n    };\n  },\n  created: function created() {\n    Vue.ls.remove(ACCESS_TOKEN);\n    this.getRouterData();\n    this.rememberMe = true;\n  },\n  methods: {\n    handleTabClick: function handleTabClick(key) {\n      this.customActiveKey = key;\n    },\n    handleRememberMeChange: function handleRememberMeChange(e) {\n      this.rememberMe = e.target.checked;\n    },\n\n    /**跳转到登录页面的参数-账号获取*/\n    getRouterData: function getRouterData() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        var temp = _this.$route.params.username || _this.$route.query.username || '';\n\n        if (temp) {\n          _this.$refs.alogin.acceptUsername(temp);\n        }\n      });\n    },\n    //登录\n    handleSubmit: function handleSubmit() {\n      this.loginBtn = true;\n\n      if (this.customActiveKey === 'tab1') {\n        // 使用账户密码登录\n        this.$refs.alogin.handleLogin(this.rememberMe);\n      } else {\n        //手机号码登录\n        this.$refs.plogin.handleLogin(this.rememberMe);\n      }\n    },\n    // 校验失败\n    validateFail: function validateFail() {\n      this.loginBtn = false;\n    },\n    // 登录后台成功\n    requestSuccess: function requestSuccess(loginResult) {\n      this.$refs.loginSelect.show(loginResult);\n    },\n    //登录后台失败\n    requestFailed: function requestFailed(err) {\n      var description = ((err.response || {}).data || {}).message || err.message || \"请求出现错误，请稍后再试\";\n      this.$notification['error']({\n        message: '登录失败',\n        description: description,\n        duration: 4\n      }); //账户密码登录错误后更新验证码\n\n      if (this.customActiveKey === 'tab1' && description.indexOf('密码错误') > 0) {\n        this.$refs.alogin.handleChangeCheckCode();\n      }\n\n      this.loginBtn = false;\n    },\n    loginSelectOk: function loginSelectOk() {\n      this.loginSuccess();\n    },\n    //登录成功\n    loginSuccess: function loginSuccess() {\n      this.$router.push({\n        path: \"/dashboard/analysis\"\n      }).catch(function () {\n        console.log('登录跳转首页出错,这个错误从哪里来的');\n      });\n      this.$notification.success({\n        message: '欢迎',\n        description: \"\".concat(timeFix(), \"\\uFF0C\\u6B22\\u8FCE\\u56DE\\u6765\")\n      });\n    },\n    stepCaptchaSuccess: function stepCaptchaSuccess() {\n      this.loginSuccess();\n    },\n    stepCaptchaCancel: function stepCaptchaCancel() {\n      var _this2 = this;\n\n      this.Logout().then(function () {\n        _this2.loginBtn = false;\n        _this2.stepCaptchaVisible = false;\n      });\n    },\n    //获取密码加密规则\n    getEncrypte: function getEncrypte() {\n      var _this3 = this;\n\n      var encryptedString = Vue.ls.get(ENCRYPTED_STRING);\n\n      if (encryptedString == null) {\n        getEncryptedString().then(function (data) {\n          _this3.encryptedString = data;\n        });\n      } else {\n        this.encryptedString = encryptedString;\n      }\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <a-form-model class=\"user-layout-login\" @keyup.enter.native=\"handleSubmit\">\r\n      <a-tabs :activeKey=\"customActiveKey\" :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"  @change=\"handleTabClick\">\r\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登录\">\r\n          <login-account ref=\"alogin\" @validateFail=\"validateFail\" @success=\"requestSuccess\" @fail=\"requestFailed\"></login-account>\r\n        </a-tab-pane>\r\n\r\n        <a-tab-pane key=\"tab2\" tab=\"手机号登录\">\r\n          <login-phone ref=\"plogin\" @validateFail=\"validateFail\" @success=\"requestSuccess\" @fail=\"requestFailed\"></login-phone>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n\r\n      <a-form-model-item>\r\n        <a-checkbox @change=\"handleRememberMeChange\" default-checked>自动登录</a-checkbox>\r\n        <router-link :to=\"{ name: 'alteration'}\" class=\"forge-password\" style=\"float: right;\">\r\n          忘记密码\r\n        </router-link>\r\n        <router-link :to=\"{ name: 'register'}\" class=\"forge-password\" style=\"float: right;margin-right: 10px\" >\r\n          注册账户\r\n        </router-link>\r\n      </a-form-model-item>\r\n\r\n      <a-form-item style=\"margin-top:24px\">\r\n        <a-button size=\"large\"  type=\"primary\"  htmlType=\"submit\"  class=\"login-button\"  :loading=\"loginBtn\"  @click.stop.prevent=\"handleSubmit\" :disabled=\"loginBtn\">确定\r\n        </a-button>\r\n      </a-form-item>\r\n\r\n    </a-form-model>\r\n\r\n    <two-step-captcha v-if=\"requiredTwoStepCaptcha\" :visible=\"stepCaptchaVisible\" @success=\"stepCaptchaSuccess\" @cancel=\"stepCaptchaCancel\"></two-step-captcha>\r\n    <login-select-tenant ref=\"loginSelect\" @success=\"loginSelectOk\"></login-select-tenant>\r\n    <third-login ref=\"thirdLogin\"></third-login>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport { ACCESS_TOKEN, ENCRYPTED_STRING } from '@/store/mutation-types'\r\nimport ThirdLogin from './third/ThirdLogin'\r\nimport LoginSelectTenant from './LoginSelectTenant'\r\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\r\nimport { getEncryptedString } from '@/utils/encryption/aesEncrypt'\r\nimport { timeFix } from '@/utils/util'\r\n\r\nimport LoginAccount from './LoginAccount'\r\nimport LoginPhone from './LoginPhone'\r\n\r\nexport default {\r\n    components: {\r\n      LoginSelectTenant,\r\n      TwoStepCaptcha,\r\n      ThirdLogin,\r\n      LoginAccount,\r\n      LoginPhone\r\n    },\r\n    data () {\r\n      return {\r\n        customActiveKey: 'tab1',\r\n        rememberMe: true,\r\n        loginBtn: false,\r\n        requiredTwoStepCaptcha: false,\r\n        stepCaptchaVisible: false,\r\n        encryptedString:{\r\n          key:\"\",\r\n          iv:\"\",\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n      Vue.ls.remove(ACCESS_TOKEN)\r\n      this.getRouterData();\r\n      this.rememberMe = true\r\n    },\r\n    methods:{\r\n      handleTabClick(key){\r\n        this.customActiveKey = key\r\n      },\r\n      handleRememberMeChange(e){\r\n        this.rememberMe = e.target.checked\r\n      },\r\n      /**跳转到登录页面的参数-账号获取*/\r\n      getRouterData(){\r\n        this.$nextTick(() => {\r\n          let temp = this.$route.params.username || this.$route.query.username || ''\r\n          if (temp) {\r\n            this.$refs.alogin.acceptUsername(temp)\r\n          }\r\n        })\r\n      },\r\n\r\n      //登录\r\n      handleSubmit () {\r\n        this.loginBtn = true;\r\n        if (this.customActiveKey === 'tab1') {\r\n          // 使用账户密码登录\r\n          this.$refs.alogin.handleLogin(this.rememberMe)\r\n        } else {\r\n          //手机号码登录\r\n          this.$refs.plogin.handleLogin(this.rememberMe)\r\n        }\r\n      },\r\n      // 校验失败\r\n      validateFail(){\r\n        this.loginBtn = false;\r\n      },\r\n      // 登录后台成功\r\n      requestSuccess(loginResult){\r\n        this.$refs.loginSelect.show(loginResult)\r\n      },\r\n      //登录后台失败\r\n      requestFailed (err) {\r\n        let description = ((err.response || {}).data || {}).message || err.message || \"请求出现错误，请稍后再试\"\r\n        this.$notification[ 'error' ]({\r\n          message: '登录失败',\r\n          description: description,\r\n          duration: 4,\r\n        });\r\n        //账户密码登录错误后更新验证码\r\n        if(this.customActiveKey === 'tab1' && description.indexOf('密码错误')>0){\r\n          this.$refs.alogin.handleChangeCheckCode()\r\n        }\r\n        this.loginBtn = false;\r\n      },\r\n      loginSelectOk(){\r\n        this.loginSuccess()\r\n      },\r\n      //登录成功\r\n      loginSuccess () {\r\n        this.$router.push({ path: \"/dashboard/analysis\" }).catch(()=>{\r\n          console.log('登录跳转首页出错,这个错误从哪里来的')\r\n        })\r\n        this.$notification.success({\r\n          message: '欢迎',\r\n          description: `${timeFix()}，欢迎回来`,\r\n        });\r\n      },\r\n\r\n      stepCaptchaSuccess () {\r\n        this.loginSuccess()\r\n      },\r\n      stepCaptchaCancel () {\r\n        this.Logout().then(() => {\r\n          this.loginBtn = false\r\n          this.stepCaptchaVisible = false\r\n        })\r\n      },\r\n      //获取密码加密规则\r\n      getEncrypte(){\r\n        var encryptedString = Vue.ls.get(ENCRYPTED_STRING);\r\n        if(encryptedString == null){\r\n          getEncryptedString().then((data) => {\r\n            this.encryptedString = data\r\n          });\r\n        }else{\r\n          this.encryptedString = encryptedString;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  .user-layout-login {\r\n    label {\r\n      font-size: 14px;\r\n    }\r\n  .getCaptcha {\r\n      display: block;\r\n      width: 100%;\r\n      height: 40px;\r\n    }\r\n\r\n  .forge-password {\r\n      font-size: 14px;\r\n    }\r\n\r\n    button.login-button {\r\n      padding: 0 15px;\r\n      font-size: 16px;\r\n      height: 40px;\r\n      width: 100%;\r\n    }\r\n\r\n  .user-login-other {\r\n      text-align: left;\r\n      margin-top: 24px;\r\n      line-height: 22px;\r\n\r\n    .item-icon {\r\n        font-size: 24px;\r\n        color: rgba(0,0,0,.2);\r\n        margin-left: 16px;\r\n        vertical-align: middle;\r\n        cursor: pointer;\r\n        transition: color .3s;\r\n\r\n      &:hover {\r\n          color: #1890ff;\r\n        }\r\n      }\r\n\r\n    .register {\r\n        float: right;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n<style>\r\n  .valid-error .ant-select-selection__placeholder{\r\n    color: #f5222d;\r\n  }\r\n</style>"],"sourceRoot":"src/views/user"}]}