{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\a\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\a\\ant-design-vue-jeecg\\src\\utils\\rules.js","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\utils\\rules.js","mtime":1661074531242},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1657458632572}],"contextDependencies":[],"result":["var validateMobile = function validateMobile(rule, value, callback) {\n  var reg = /^1(3|4|5|7|8)\\d{9}$/; //update-beign-author:taoyan date:20220316 for: VUEN-329【bug】为什么不是失去焦点的时候，触发手机号校验\n\n  if (!value && value !== '0') {\n    callback();\n  } else {\n    if (!reg.test(value)) {\n      callback('请输入正确手机号');\n    } else {\n      callback();\n    }\n  } //update-end-author:taoyan date:20220316 for: VUEN-329【bug】为什么不是失去焦点的时候，触发手机号校验\n\n};\n\nvar validateEn = function validateEn(rule, value, callback) {\n  var reg = /^[_a-zA-Z0-9]+$/;\n  var reg2 = /^.{4,18}$/; // 长度为6到18个字符\n\n  if (value !== '' && !reg.test(value)) {\n    callback('只允许字母、数字、下划线');\n  } else if (value !== '' && !reg2.test(value)) {\n    callback('长度6到18个字符');\n  } else {\n    callback();\n  }\n};\n\nexport var rules = {\n  mobile: [{\n    required: true,\n    message: '请输入手机号',\n    trigger: 'blur'\n  }, {\n    validator: validateMobile,\n    trigger: 'blur'\n  }],\n  mobile2: [{\n    validator: validateMobile,\n    trigger: 'blur'\n  }],\n  userName: [{\n    required: true,\n    message: '请输入用户名',\n    trigger: 'blur'\n  }, {\n    validator: validateEn\n  }],\n  email: [{\n    required: false,\n    type: 'email',\n    message: '邮箱格式不正确',\n    trigger: 'blur'\n  }],\n  // 验证自然数\n  naturalNumber: /^(([0-9]*[1-9][0-9]*)|(0+))$/,\n  naturalNumberMsg: '请输入自然数',\n  // 英文\n  english: /^.[A-Za-z]+$/,\n  englishMsg: '请输入英文字符',\n  // 座机\n  telephone: /^\\d{3}-\\d{7,8}|\\d{4}-\\d{7,8}$/,\n  telephoneMsg: '请输入正确的座机号',\n  // 银行卡号码\n  bankCard: /^[1-9]\\d{9,19}$/,\n  bankCardMsg: '请输入正确的银行卡号码',\n  // 证件号码\n  IDNumber: /^[a-z0-9A-Z]{0,50}$/,\n  IDNumberMsg: '请输入正确的证件号码',\n  // 身份证号码,包括15位和18位的\n  IDCard: /(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{7}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}$)/,\n  IDCardMsg: '请输入正确的身份证号码',\n  // QQ号码\n  qq: /^[1-9]\\d{4,11}$/,\n  qqMsg: '请输入正确的QQ号码',\n  // 网址, 仅支持http和https开头的\n  url: /^(http|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-.,@?^=%&:/~+#]*[\\w\\-@?^=%&/~+#])?$/,\n  urlMsg: '请输入以http和https开头的网址',\n  // 0到20位的英文字符和数字\n  enNum0to20: /^[a-z0-9A-Z]{0,20}$/,\n  enNum0to20Msg: '请输入20位以内的英文字符和数字',\n  // 2到100位的中英文字符和空格\n  cnEnSpace2to100: /^[a-zA-Z\\u4E00-\\u9FA5\\s*]{2,100}$/,\n  cnEnSpace2to100Msg: '请输入2到100位的中英文字符和空格',\n  // 数字和换行符\n  numLinefeed: /^[0-9\\n*]+$/,\n  numLinefeedMsg: '请输入数字和换行符',\n  // 255位以内的字符\n  char0to255: /^.{0,255}$/,\n  char0to255Msg: '请输入255位以内的字符',\n  required: function required(min, max) {\n    var rule = [{\n      required: true,\n      message: '',\n      trigger: 'blur'\n    }];\n\n    if (min) {\n      var r = {\n        min: min,\n        message: '最小长度' + min + '位字符'\n      };\n      rule.push(r);\n    }\n\n    if (max) {\n      var m = {\n        max: max,\n        message: '最大长度' + max + '位字符'\n      };\n      rule.push(m);\n    }\n\n    return rule;\n  },\n  select: function select() {\n    var rule = [{\n      required: true,\n      message: '',\n      trigger: 'change'\n    }];\n    return rule;\n  },\n  checked: function checked(min, max) {\n    var rule = [{\n      required: true,\n      type: 'array',\n      message: '',\n      trigger: 'change'\n    }];\n\n    if (min) {\n      var r = {\n        type: 'array',\n        min: min,\n        message: '最少选择' + min + '项'\n      };\n      rule.push(r);\n    }\n\n    if (max) {\n      var m = {\n        type: 'array',\n        max: max,\n        message: '最多选择' + max + '项'\n      };\n      rule.push(m);\n    }\n\n    return rule;\n  }\n};\n/**\r\n * @description 排序值验证，排序值不可以大于255\r\n */\n\nexport var validateOrder = function validateOrder(rule, value, callback) {\n  if (parseInt(value) > 255) {\n    return callback(new Error('排序值不可以大于255'));\n  } else {\n    callback();\n  }\n};",{"version":3,"sources":["D:/a/ant-design-vue-jeecg/src/utils/rules.js"],"names":["validateMobile","rule","value","callback","reg","test","validateEn","reg2","rules","mobile","required","message","trigger","validator","mobile2","userName","email","type","naturalNumber","naturalNumberMsg","english","englishMsg","telephone","telephoneMsg","bankCard","bankCardMsg","IDNumber","IDNumberMsg","IDCard","IDCardMsg","qq","qqMsg","url","urlMsg","enNum0to20","enNum0to20Msg","cnEnSpace2to100","cnEnSpace2to100Msg","numLinefeed","numLinefeedMsg","char0to255","char0to255Msg","min","max","r","push","m","select","checked","validateOrder","parseInt","Error"],"mappings":"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","sourcesContent":["const validateMobile = (rule, value, callback) => {\r\n  let reg = /^1(3|4|5|7|8)\\d{9}$/\r\n  //update-beign-author:taoyan date:20220316 for: VUEN-329【bug】为什么不是失去焦点的时候，触发手机号校验\r\n  if(!value && value!=='0'){\r\n    callback()\r\n  }else{\r\n    if (!reg.test(value)) {\r\n      callback('请输入正确手机号')\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n  //update-end-author:taoyan date:20220316 for: VUEN-329【bug】为什么不是失去焦点的时候，触发手机号校验\r\n  \r\n}\r\nconst validateEn = (rule, value, callback) => {\r\n  let reg = /^[_a-zA-Z0-9]+$/\r\n  let reg2 = /^.{4,18}$/\r\n  // 长度为6到18个字符\r\n  if (value !== '' && !reg.test(value)) {\r\n    callback('只允许字母、数字、下划线')\r\n  } else if (value !== '' && !reg2.test(value)) {\r\n    callback('长度6到18个字符')\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\nexport const rules = {\r\n  mobile: [{\r\n    required: true,\r\n    message: '请输入手机号',\r\n    trigger: 'blur'\r\n  }, { validator: validateMobile, trigger: 'blur' }],\r\n  mobile2: [{ validator: validateMobile, trigger: 'blur' }],\r\n  userName: [{\r\n    required: true, message: '请输入用户名', trigger: 'blur'\r\n  }, { validator: validateEn }],\r\n  email: [\r\n    { required: false, type: 'email', message: '邮箱格式不正确', trigger: 'blur' }\r\n  ],\r\n  // 验证自然数\r\n  naturalNumber: /^(([0-9]*[1-9][0-9]*)|(0+))$/,\r\n  naturalNumberMsg: '请输入自然数',\r\n  // 英文\r\n  english: /^.[A-Za-z]+$/,\r\n  englishMsg: '请输入英文字符',\r\n  // 座机\r\n  telephone: /^\\d{3}-\\d{7,8}|\\d{4}-\\d{7,8}$/,\r\n  telephoneMsg: '请输入正确的座机号',\r\n  // 银行卡号码\r\n  bankCard: /^[1-9]\\d{9,19}$/,\r\n  bankCardMsg: '请输入正确的银行卡号码',\r\n  // 证件号码\r\n  IDNumber: /^[a-z0-9A-Z]{0,50}$/,\r\n  IDNumberMsg: '请输入正确的证件号码',\r\n  // 身份证号码,包括15位和18位的\r\n  IDCard: /(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{7}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}$)/,\r\n  IDCardMsg: '请输入正确的身份证号码',\r\n  // QQ号码\r\n  qq: /^[1-9]\\d{4,11}$/,\r\n  qqMsg: '请输入正确的QQ号码',\r\n  // 网址, 仅支持http和https开头的\r\n  url: /^(http|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-.,@?^=%&:/~+#]*[\\w\\-@?^=%&/~+#])?$/,\r\n  urlMsg: '请输入以http和https开头的网址',\r\n  // 0到20位的英文字符和数字\r\n  enNum0to20: /^[a-z0-9A-Z]{0,20}$/,\r\n  enNum0to20Msg: '请输入20位以内的英文字符和数字',\r\n  // 2到100位的中英文字符和空格\r\n  cnEnSpace2to100: /^[a-zA-Z\\u4E00-\\u9FA5\\s*]{2,100}$/,\r\n  cnEnSpace2to100Msg: '请输入2到100位的中英文字符和空格',\r\n  // 数字和换行符\r\n  numLinefeed: /^[0-9\\n*]+$/,\r\n  numLinefeedMsg: '请输入数字和换行符',\r\n  // 255位以内的字符\r\n  char0to255: /^.{0,255}$/,\r\n  char0to255Msg: '请输入255位以内的字符',\r\n  required: function(min, max) {\r\n    let rule = [{ required: true, message: '', trigger: 'blur' }]\r\n    if (min) {\r\n      let r = { min: min, message: '最小长度' + min + '位字符' }\r\n      rule.push(r)\r\n    }\r\n    if (max) {\r\n      let m = { max: max, message: '最大长度' + max + '位字符' }\r\n      rule.push(m)\r\n    }\r\n    return rule\r\n  },\r\n  select: function() {\r\n    let rule = [{ required: true, message: '', trigger: 'change' }]\r\n    return rule\r\n  },\r\n  checked: function(min, max) {\r\n    let rule = [{ required: true, type: 'array', message: '', trigger: 'change' }]\r\n    if (min) {\r\n      let r = { type: 'array', min: min, message: '最少选择' + min + '项' }\r\n      rule.push(r)\r\n    }\r\n    if (max) {\r\n      let m = { type: 'array', max: max, message: '最多选择' + max + '项' }\r\n      rule.push(m)\r\n    }\r\n    return rule\r\n  }\r\n}\r\n/**\r\n * @description 排序值验证，排序值不可以大于255\r\n */\r\nexport const validateOrder = function(rule, value, callback) {\r\n  if (parseInt(value) > 255) {\r\n    return callback(new Error('排序值不可以大于255'))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\n\r\n\r\n\r\n"]}]}