{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptBaseInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptBaseInfo.vue","mtime":1661074531309},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { queryIdTree } from '@/api/api'\n\nexport default {\n  name: 'DeptBaseInfo',\n  components: {},\n  data() {\n    return {\n      departTree: [],\n      id: '',\n      model: {},\n      visible: false,\n      disable: true,\n      treeData: [],\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 3}\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16}\n      },\n    }\n  },\n  created() {\n    this.loadTreeData();\n  },\n  methods: {\n    loadTreeData() {\n      queryIdTree().then((res) => {\n        if (res.success) {\n          for (let i = 0; i < res.result.length; i++) {\n            let temp = res.result[i];\n            this.treeData.push(temp);\n          }\n        }\n\n      })\n    },\n    open(record) {\n      this.visible = true;\n      //update-begin---author:wangshuai ---date:20220211  for：[JTC-174]部门管理界面参考vue3的改改------------\n      this.model = Object.assign({}, record)\n      this.model.parentId = this.findTree(this.treeData,record.parentId);\n      this.model.orgCategory = this.orgCategoryText(record.orgCategory)\n      //update-end---author:wangshuai ---date:20220211  for：[JTC-174]部门管理界面参考vue3的改改------------\n      },\n    clearForm() {\n      this.treeData = [];\n    },\n    /**\n     * 通过父id查找部门名称\n     * @param treeList 树数组\n     * @param id 父id\n     * @return id对应的部门名称\n     */\n    findTree(treeList,id){\n      for (let i = 0; i < treeList.length; i++) {\n        let item = treeList[i];\n        //如果当前id和父id相同则返回部门名称\n        if (item.key == id) {\n          return item.title;\n        }\n        let children = item.children\n        //存在子部门进行递归查询\n        if(children){\n          let findResult = this.findTree(children, id);\n          //返回的数据不为空，结束递归，返回结果\n          if (findResult) {\n            return findResult\n          }\n        }\n      }\n    },\n    /**\n     * 将机构类型数值翻译成文本\n     * @param orgCategory 部门类别\n     * @return 部门类别对应的文本\n     */\n    orgCategoryText(orgCategory) {\n      if(orgCategory == 1){\n        return \"公司\";\n      }else if(orgCategory == 2){\n        return \"部门\";\n      }else{\n        return \"岗位\";\n      }\n    }\n  }\n}\n",{"version":3,"sources":["DeptBaseInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DeptBaseInfo.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <div :visible=\"visible\">\r\n    <a-descriptions size=\"small\" bordered :column=\"1\">\r\n      <a-descriptions-item label=\"机构名称\">{{model.departName}}</a-descriptions-item>\r\n      <a-descriptions-item label=\"上级部门\"><span>{{model.parentId}}</span></a-descriptions-item>\r\n      <a-descriptions-item label=\"机构编码\"><span>{{model.orgCode}}</span></a-descriptions-item>\r\n      <a-descriptions-item label=\"机构类型\"><span>{{model.orgCategory}}</span></a-descriptions-item>\r\n      <a-descriptions-item label=\"排序\"><span>{{model.departOrder}}</span></a-descriptions-item>\r\n      <a-descriptions-item label=\"手机号\"><span>{{model.mobile}}</span></a-descriptions-item>\r\n      <a-descriptions-item label=\"地址\"><span>{{model.address}}</span></a-descriptions-item>\r\n      <a-descriptions-item label=\"备注\"><span>{{model.memo}}</span></a-descriptions-item>\r\n    </a-descriptions>\r\n  </div>\r\n</template>\r\n<script>\r\n  import { queryIdTree } from '@/api/api'\r\n\r\n  export default {\r\n    name: 'DeptBaseInfo',\r\n    components: {},\r\n    data() {\r\n      return {\r\n        departTree: [],\r\n        id: '',\r\n        model: {},\r\n        visible: false,\r\n        disable: true,\r\n        treeData: [],\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 3}\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16}\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n      this.loadTreeData();\r\n    },\r\n    methods: {\r\n      loadTreeData() {\r\n        queryIdTree().then((res) => {\r\n          if (res.success) {\r\n            for (let i = 0; i < res.result.length; i++) {\r\n              let temp = res.result[i];\r\n              this.treeData.push(temp);\r\n            }\r\n          }\r\n\r\n        })\r\n      },\r\n      open(record) {\r\n        this.visible = true;\r\n        //update-begin---author:wangshuai ---date:20220211  for：[JTC-174]部门管理界面参考vue3的改改------------\r\n        this.model = Object.assign({}, record)\r\n        this.model.parentId = this.findTree(this.treeData,record.parentId);\r\n        this.model.orgCategory = this.orgCategoryText(record.orgCategory)\r\n        //update-end---author:wangshuai ---date:20220211  for：[JTC-174]部门管理界面参考vue3的改改------------\r\n        },\r\n      clearForm() {\r\n        this.treeData = [];\r\n      },\r\n      /**\r\n       * 通过父id查找部门名称\r\n       * @param treeList 树数组\r\n       * @param id 父id\r\n       * @return id对应的部门名称\r\n       */\r\n      findTree(treeList,id){\r\n        for (let i = 0; i < treeList.length; i++) {\r\n          let item = treeList[i];\r\n          //如果当前id和父id相同则返回部门名称\r\n          if (item.key == id) {\r\n            return item.title;\r\n          }\r\n          let children = item.children\r\n          //存在子部门进行递归查询\r\n          if(children){\r\n            let findResult = this.findTree(children, id);\r\n            //返回的数据不为空，结束递归，返回结果\r\n            if (findResult) {\r\n              return findResult\r\n            }\r\n          }\r\n        }\r\n      },\r\n      /**\r\n       * 将机构类型数值翻译成文本\r\n       * @param orgCategory 部门类别\r\n       * @return 部门类别对应的文本\r\n       */\r\n      orgCategoryText(orgCategory) {\r\n        if(orgCategory == 1){\r\n          return \"公司\";\r\n        }else if(orgCategory == 2){\r\n          return \"部门\";\r\n        }else{\r\n          return \"岗位\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style scoped lang=\"less\">\r\n  .ant-descriptions-view{\r\n    border: 1px solid #f0f0f0;\r\n  }\r\n  /deep/ .ant-descriptions-item-label{\r\n    width:180px\r\n  }\r\n  /deep/ .ant-descriptions-item-content span{\r\n    color:#000000d9;\r\n  }\r\n  /deep/ .ant-descriptions-bordered .ant-descriptions-row{\r\n    border-bottom: 1px solid #f0f0f0 !important;\r\n  }\r\n  /deep/ .ant-descriptions-bordered .ant-descriptions-item-label{\r\n    border-right:  1px solid #f0f0f0;\r\n  }\r\n</style>"]}]}