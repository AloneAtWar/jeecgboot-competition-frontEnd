{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysFillRuleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysFillRuleModal.vue","mtime":1661074531318},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { httpAction } from '@/api/manage'\nimport { validateDuplicateValue } from '@/utils/util'\n\nexport default {\n  name: 'SysFillRuleModal',\n  components: {},\n  data() {\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: { xs: { span: 24 }, sm: { span: 5 } },\n      wrapperCol: { xs: { span: 24 }, sm: { span: 16 } },\n\n      confirmLoading: false,\n      validatorRules: {\n        ruleName: [{ required: true, message: '规则名称不能为空' }],\n        ruleCode: [\n          { required: true, message: '规则Code不能为空' },\n          { validator: (rule, value, callback) => validateDuplicateValue('sys_fill_rule', 'rule_code', value, this.model.id, callback) }\n        ],\n        ruleClass: [{ required: true, message: '规则实现类不能为空' }],\n        ruleParams: [{\n          validator: (rule, value, callback) => {\n            //update-begin---author:wangshuai ---date:20220509  for：[VUEN-907]规则参数不是必填，如果为空不检验即可------------\n            if (!value) {\n              callback()\n            }\n            //update-end---author:wangshuai ---date:20220509  for：[VUEN-907]规则参数不是必填，如果为空不检验即可--------------\n\n            try {\n              let json = JSON.parse(value)\n              if (json instanceof Array) {\n                callback('只能传递JSON对象，不能传递JSON数组')\n              } else if (json instanceof Object) {\n                callback()\n              } else {\n                callback('请输入JSON字符串')\n              }\n            } catch {\n              callback('请输入JSON字符串')\n            }\n          }\n        }],\n      },\n      url: {\n        add: '/sys/fillRule/add',\n        edit: '/sys/fillRule/edit',\n      },\n    }\n  },\n  computed: {\n    disabledCode() {\n      return !!this.model.id\n    }\n  },\n  created() {\n  },\n  methods: {\n    add() {\n      this.edit({})\n    },\n    edit(record) {\n      this.visible = true\n      this.$nextTick(() => {\n        this.$refs.form.resetFields()\n        this.model = Object.assign({}, record)\n      })\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n    },\n    handleOk() {\n      const that = this\n      // 触发表单验证\n      this.$refs.form.validate((ok, err) => {\n        if (ok) {\n          that.confirmLoading = true\n          let httpUrl = this.url.add, method = 'post'\n          if (this.model.id) {\n            httpUrl = this.url.edit\n            method = 'put'\n          }\n\n          httpAction(httpUrl, this.model, method).then((res) => {\n            if (res.success) {\n              that.$message.success(res.message)\n              that.$emit('ok')\n              that.close()\n            } else {\n              that.$message.warning(res.message)\n            }\n          }).finally(() => {\n            that.confirmLoading = false\n          })\n        }\n      })\n    },\n    handleCancel() {\n      this.close()\n    }\n\n  }\n}\n",{"version":3,"sources":["SysFillRuleModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"SysFillRuleModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :maskClosable=\"false\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\r\n\r\n        <a-form-model-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"规则名称\" prop=\"ruleName\">\r\n          <a-input placeholder=\"请输入规则名称\" v-model=\"model.ruleName\"/>\r\n        </a-form-model-item>\r\n        <a-form-model-item :labelCol=\"labelCol\"  :wrapperCol=\"wrapperCol\" label=\"规则Code\"  prop=\"ruleCode\" >\r\n          <a-input placeholder=\"请输入规则Code\" :disabled=\"disabledCode\" v-model=\"model.ruleCode\"/>\r\n        </a-form-model-item>\r\n        <a-form-model-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"规则实现类\" prop=\"ruleClass\" >\r\n          <a-input placeholder=\"请输入规则实现类\" v-model=\"model.ruleClass\"/>\r\n        </a-form-model-item>\r\n        <a-form-model-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"规则参数\" prop=\"ruleParams\">\r\n          <a-textarea placeholder=\"请输入规则参数\" :rows=\"5\" v-model=\"model.ruleParams\"/>\r\n        </a-form-model-item>\r\n\r\n      </a-form-model>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { httpAction } from '@/api/manage'\r\n  import { validateDuplicateValue } from '@/utils/util'\r\n\r\n  export default {\r\n    name: 'SysFillRuleModal',\r\n    components: {},\r\n    data() {\r\n      return {\r\n        title: '操作',\r\n        visible: false,\r\n        model: {},\r\n        labelCol: { xs: { span: 24 }, sm: { span: 5 } },\r\n        wrapperCol: { xs: { span: 24 }, sm: { span: 16 } },\r\n\r\n        confirmLoading: false,\r\n        validatorRules: {\r\n          ruleName: [{ required: true, message: '规则名称不能为空' }],\r\n          ruleCode: [\r\n            { required: true, message: '规则Code不能为空' },\r\n            { validator: (rule, value, callback) => validateDuplicateValue('sys_fill_rule', 'rule_code', value, this.model.id, callback) }\r\n          ],\r\n          ruleClass: [{ required: true, message: '规则实现类不能为空' }],\r\n          ruleParams: [{\r\n            validator: (rule, value, callback) => {\r\n              //update-begin---author:wangshuai ---date:20220509  for：[VUEN-907]规则参数不是必填，如果为空不检验即可------------\r\n              if (!value) {\r\n                callback()\r\n              }\r\n              //update-end---author:wangshuai ---date:20220509  for：[VUEN-907]规则参数不是必填，如果为空不检验即可--------------\r\n\r\n              try {\r\n                let json = JSON.parse(value)\r\n                if (json instanceof Array) {\r\n                  callback('只能传递JSON对象，不能传递JSON数组')\r\n                } else if (json instanceof Object) {\r\n                  callback()\r\n                } else {\r\n                  callback('请输入JSON字符串')\r\n                }\r\n              } catch {\r\n                callback('请输入JSON字符串')\r\n              }\r\n            }\r\n          }],\r\n        },\r\n        url: {\r\n          add: '/sys/fillRule/add',\r\n          edit: '/sys/fillRule/edit',\r\n        },\r\n      }\r\n    },\r\n    computed: {\r\n      disabledCode() {\r\n        return !!this.model.id\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      add() {\r\n        this.edit({})\r\n      },\r\n      edit(record) {\r\n        this.visible = true\r\n        this.$nextTick(() => {\r\n          this.$refs.form.resetFields()\r\n          this.model = Object.assign({}, record)\r\n        })\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      handleOk() {\r\n        const that = this\r\n        // 触发表单验证\r\n        this.$refs.form.validate((ok, err) => {\r\n          if (ok) {\r\n            that.confirmLoading = true\r\n            let httpUrl = this.url.add, method = 'post'\r\n            if (this.model.id) {\r\n              httpUrl = this.url.edit\r\n              method = 'put'\r\n            }\r\n\r\n            httpAction(httpUrl, this.model, method).then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message)\r\n                that.$emit('ok')\r\n                that.close()\r\n              } else {\r\n                that.$message.warning(res.message)\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]}]}