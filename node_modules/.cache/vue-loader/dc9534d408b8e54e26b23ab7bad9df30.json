{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JSuperQuery.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JSuperQuery.vue","mtime":1661074531183},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nimport * as utils from '@/utils/util'\nimport { mixinDevice } from '@/utils/mixin'\nimport JDate from '@/components/jeecg/JDate.vue'\nimport JSelectDepart from '@/components/jeecgbiz/JSelectDepart'\nimport JSelectMultiUser from '@/components/jeecgbiz/JSelectMultiUser'\nimport JMultiSelectTag from '@/components/dict/JMultiSelectTag'\nimport JAreaLinkage from '@comp/jeecg/JAreaLinkage'\n\nexport default {\n  name: 'JSuperQuery',\n  mixins: [mixinDevice],\n  components: { JAreaLinkage, JMultiSelectTag, JDate, JSelectDepart, JSelectMultiUser },\n  props: {\n    /*\n     fieldList: [{\n        value:'',\n        text:'',\n        type:'',\n        dictCode:'' // 只要 dictCode 有值，无论 type 是什么，都显示为字典下拉框\n     }]\n     type:date datetime int number string\n    * */\n    fieldList: {\n      type: Array,\n      required: true\n    },\n    /*\n    * 这个回调函数接收一个数组参数 即查询条件\n    * */\n    callback: {\n      type: String,\n      required: false,\n      default: 'handleSuperQuery'\n    },\n\n    // 当前是否在加载中\n    loading: {\n      type: Boolean,\n      default: false\n    },\n\n    // 保存查询条件的唯一 code，通过该 code 区分\n    // 默认为 null，代表以当前路由全路径为区分Code\n    saveCode: {\n      type: String,\n      default: null\n    }\n\n  },\n  data() {\n    return {\n      moment,\n      fieldTreeData: [],\n\n      prompt: {\n        visible: false,\n        value: ''\n      },\n\n      visible: false,\n      queryParamsModel: [],\n      treeIcon: <a-icon type=\"file-text\"/>,\n      // 保存查询条件的treeData\n      saveTreeData: [],\n      // 保存查询条件的前缀名\n      saveCodeBefore: 'JSuperQuerySaved_',\n      // 查询类型，过滤条件匹配（and、or）\n      matchType: 'and',\n      superQueryFlag: false,\n    }\n  },\n  computed: {\n    izMobile() {\n      return this.device === 'mobile'\n    },\n    tooltipProps() {\n      return this.izMobile ? { visible: false } : {}\n    },\n    fullSaveCode() {\n      let saveCode = this.saveCode\n      if (saveCode == null || saveCode === '') {\n        saveCode = this.$route.fullPath\n      }\n      return this.saveCodeBefore + saveCode\n    },\n  },\n  watch: {\n    // 当 saveCode 变化时，重新查询已保存的条件\n    fullSaveCode: {\n      immediate: true,\n      handler() {\n        let list = this.$ls.get(this.fullSaveCode)\n        if (list instanceof Array) {\n          this.saveTreeData = list.map(i => this.renderSaveTreeData(i))\n        }\n      }\n    },\n    fieldList: {\n      deep: true,\n      immediate: true,\n      handler(val) {\n        let mainData = [], subData = []\n        val.forEach(item => {\n          let data = { ...item }\n          data.label = data.label || data.text\n          let hasChildren = (data.children instanceof Array)\n          data.disabled = hasChildren\n          data.selectable = !hasChildren\n          if (hasChildren) {\n            data.children = data.children.map(item2 => {\n              let child = { ...item2 }\n              child.label = child.label || child.text\n              child.label = data.label + '-' + child.label\n              // update--begin--author:sunjianlei-----date:20220121------for：【JTC-1167】【表单设计器】高级查询，一对一字段查询不好使\n              // 是否仅包含字段名，不需要拼接子表表名\n              if (!data.onlyFieldName) {\n                child.value = data.value + ',' + child.value\n              }\n              // update--end--author:sunjianlei-----date:20220121------for：【JTC-1167】【表单设计器】高级查询，一对一字段查询不好使\n              child.val = ''\n              return child\n            })\n            data.val = ''\n            subData.push(data)\n          } else {\n            mainData.push(data)\n          }\n        })\n        this.fieldTreeData = mainData.concat(subData)\n      }\n    }\n  },\n\n  methods: {\n    show() {\n      if (!this.queryParamsModel || this.queryParamsModel.length === 0) {\n        this.resetLine()\n      }\n      this.visible = true\n    },\n\n    getDictInfo(item) {\n      let str = ''\n      if(!item.dictTable){\n        str = item.dictCode\n      }else{\n        str = item.dictTable+','+item.dictText+','+item.dictCode\n      }\n      console.log('高级查询字典信息',str)\n      return str\n    },\n    handleOk() {\n      if (!this.isNullArray(this.queryParamsModel)) {\n        let event = {\n          matchType: this.matchType,\n          params: this.removeEmptyObject(this.queryParamsModel)\n        }\n        // 移动端模式下关闭弹窗\n        if (this.izMobile) {\n          this.visible = false\n        }\n        this.emitCallback(event)\n      } else {\n        this.$message.warn(\"不能查询空条件\")\n      }\n    },\n    emitCallback(event = {}, loadStatus = true) {\n      let { params = [], matchType = this.matchType } = event\n      this.superQueryFlag = (params && params.length > 0)\n      for (let param of params) {\n        if (Array.isArray(param.val)) {\n          param.val = param.val.join(',')\n        }\n      }\n      console.debug('---高级查询参数--->', { params, matchType })\n      this.$emit(this.callback, params, matchType, loadStatus)\n    },\n    handleCancel() {\n      this.close()\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n    },\n    handleAdd() {\n      this.addNewLine()\n    },\n    addNewLine() {\n      this.queryParamsModel.push({ rule: 'eq' })\n    },\n    resetLine() {\n      this.superQueryFlag = false\n      this.queryParamsModel = []\n      this.addNewLine()\n    },\n    handleDel(index) {\n      this.queryParamsModel.splice(index, 1)\n    },\n    handleSelected(node, item) {\n      let { type, dbType, options, dictCode, dictTable, dictText, customReturnField, popup } = node.dataRef\n      item['type'] = type\n      item['dbType'] = dbType\n      item['options'] = options\n      item['dictCode'] = dictCode\n      item['dictTable'] = dictTable\n      item['dictText'] = dictText\n      //update-begin-author:taoyan for: VUEN-242【online表单 高级查询】开关组件设置扩展参数为[0,1] 时，高级查询选择后查询仍然是Y/N\n      item['extendOption'] = node.dataRef.extendOption || ['Y', 'N']\n      //update-begin-author:taoyan for: VUEN-242【online表单 高级查询】开关组件设置扩展参数为[0,1] 时，高级查询选择后查询仍然是Y/N\n      item['customReturnField'] = customReturnField\n      if (popup) {\n        item['popup'] = popup\n      }\n      // 格式化字符串，一般用于高级查询的日期格式处理\n      if (node.dataRef.formatStr) {\n        item['formatStr'] = node.dataRef.formatStr\n      }\n      this.$set(item, 'val', undefined)\n    },\n    handleOpen() {\n      this.show()\n    },\n    handleOutReset(loadStaus=true) {\n      this.resetLine()\n      this.emitCallback({}, loadStaus)\n    },\n    handleReset() {\n      this.resetLine()\n      this.emitCallback({}, true)\n    },\n    handleSave() {\n      let queryParams = this.removeEmptyObject(this.queryParamsModel)\n      if (this.isNullArray(queryParams)) {\n        this.$message.warning('空条件不能保存')\n      } else {\n        this.prompt.value = ''\n        this.prompt.visible = true\n      }\n    },\n    handlePromptOk() {\n      let { value } = this.prompt\n      if(!value){\n        this.$message.warning('保存名称不能为空')\n        return\n      }\n      // 取出查询条件\n      let records = this.removeEmptyObject(this.queryParamsModel)\n      // 判断有没有重名的\n      let filterList = this.saveTreeData.filter(i => i.originTitle === value)\n      if (filterList.length > 0) {\n        this.$confirm({\n          content: `${value} 已存在，是否覆盖？`,\n          onOk: () => {\n            this.prompt.visible = false\n            filterList[0].records = records\n            this.saveToLocalStore()\n            this.$message.success('保存成功')\n          }\n        })\n      } else {\n        // 没有重名的，直接添加\n        this.prompt.visible = false\n        // 添加到树列表中\n        this.saveTreeData.push(this.renderSaveTreeData({\n          title: value,\n          matchType: this.matchType,\n          records: records\n        }))\n        // 保存到 LocalStore\n        this.saveToLocalStore()\n        this.$message.success('保存成功')\n      }\n    },\n    handleTreeSelect(idx, event) {\n      if (event.selectedNodes[0]) {\n        let { matchType, records } = event.selectedNodes[0].data.props\n        // 将保存的matchType取出，兼容旧数据，如果没有保存就还是使用原来的\n        this.matchType = matchType || this.matchType\n        this.queryParamsModel = utils.cloneObject(records)\n      }\n    },\n    handleRemoveSaveTreeItem(event, vNode) {\n      // 阻止事件冒泡\n      event.stopPropagation()\n\n      this.$confirm({\n        content: '是否删除当前查询？',\n        onOk: () => {\n          let { eventKey } = vNode\n          this.saveTreeData.splice(Number.parseInt(eventKey.substring(2)), 1)\n          this.saveToLocalStore()\n        },\n      })\n    },\n\n    // 将查询保存到 LocalStore 里\n    saveToLocalStore() {\n      let saveValue = this.saveTreeData.map(({ originTitle, matchType, records }) => ({ title: originTitle, matchType, records }))\n      this.$ls.set(this.fullSaveCode, saveValue)\n    },\n\n    isNullArray(array) {\n      //判断是不是空数组对象\n      if (!array || array.length === 0) {\n        return true\n      }\n      if (array.length === 1) {\n        let obj = array[0]\n        if (!obj.field || (obj.val == null || obj.val === '') || !obj.rule) {\n          return true\n        }\n      }\n      return false\n    },\n    // 去掉数组中的空对象\n    removeEmptyObject(arr) {\n      let array = utils.cloneObject(arr)\n      for (let i = 0; i < array.length; i++) {\n        let item = array[i]\n        if (item == null || Object.keys(item).length <= 0) {\n          array.splice(i--, 1)\n        } else {\n          if (Array.isArray(item.options)) {\n            // 如果有字典属性，就不需要保存 options 了\n            //update-begin-author:taoyan date:20200819 for:【开源问题】 高级查询 下拉框作为并且选项很多多多 LOWCOD-779\n            delete item.options\n            //update-end-author:taoyan date:20200819 for:【开源问题】 高级查询 下拉框作为并且选项很多多多 LOWCOD-779\n          }\n        }\n      }\n      return array\n    },\n\n    /** 渲染保存查询条件的 title（加个删除按钮） */\n    renderSaveTreeData(item) {\n      item.icon = this.treeIcon\n      item.originTitle = item['title']\n      item.title = (arg1, arg2) => {\n        let vNode\n        // 兼容旧版的Antdv\n        if (arg1.dataRef) {\n          vNode = arg1\n        } else if (arg2.dataRef) {\n          vNode = arg2\n        } else {\n          return <span style=\"color:red;\">Antdv版本不支持</span>\n        }\n        let {originTitle} = vNode.dataRef\n        return (\n          <div class=\"j-history-tree-title\">\n            <span>{originTitle}</span>\n\n            <div class=\"j-history-tree-title-closer\" onClick={e => this.handleRemoveSaveTreeItem(e, vNode)}>\n              <a-icon type=\"close-circle\"/>\n            </div>\n          </div>\n        )\n      }\n      return item\n    },\n\n    /** 判断是否允许多选 */\n    allowMultiple(item) {\n      return item.rule === 'in'\n    },\n\n    handleRuleChange(item, newValue) {\n      let oldValue = item.rule\n      this.$set(item, 'rule', newValue)\n      // 上一个规则是否是 in，且type是字典或下拉\n      if (oldValue === 'in') {\n        if (item.dictCode || item.options instanceof Array) {\n          let value = item.val\n          if (typeof item.val === 'string') {\n            value = item.val.split(',')[0]\n          } else if (Array.isArray(item.val)) {\n            value = item.val[0]\n          }\n          this.$set(item, 'val', value)\n        }\n      }\n    },\n\n    handleChangeJPopup(item, e, values) {\n      item.val = values[item.popup['destFields']]\n    },\n\n  }\n}\n",{"version":3,"sources":["JSuperQuery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"JSuperQuery.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n<div class=\"j-super-query-box\">\r\n\r\n  <slot name=\"button\" :isActive=\"superQueryFlag\" :isMobile=\"izMobile\" :open=\"handleOpen\" :reset=\"handleReset\">\r\n    <a-tooltip v-if=\"superQueryFlag\" v-bind=\"tooltipProps\" :mouseLeaveDelay=\"0.2\">\r\n      <!-- begin 不知道为什么不加上这段代码就无法生效 -->\r\n      <span v-show=\"false\">{{tooltipProps}}</span>\r\n      <!-- end 不知道为什么不加上这段代码就无法生效 -->\r\n      <template slot=\"title\">\r\n        <span>已有高级查询条件生效</span>\r\n        <a-divider type=\"vertical\"/>\r\n        <a @click=\"handleReset\">清空</a>\r\n      </template>\r\n      <a-button-group>\r\n        <a-button type=\"primary\" @click=\"handleOpen\">\r\n          <a-icon type=\"appstore\" theme=\"twoTone\" spin/>\r\n          <span>高级查询</span>\r\n        </a-button>\r\n        <a-button v-if=\"izMobile\" type=\"primary\" icon=\"delete\" @click=\"handleReset\"/>\r\n      </a-button-group>\r\n    </a-tooltip>\r\n    <a-button v-else type=\"primary\" icon=\"filter\" @click=\"handleOpen\">高级查询</a-button>\r\n  </slot>\r\n\r\n  <j-modal\r\n    title=\"高级查询构造器\"\r\n    :width=\"1000\"\r\n    :visible=\"visible\"\r\n    @cancel=\"handleCancel\"\r\n    :mask=\"false\"\r\n    :fullscreen=\"izMobile\"\r\n    draggable\r\n    class=\"j-super-query-modal\"\r\n    style=\"top:5%;max-height: 95%;\"\r\n  >\r\n\r\n    <template slot=\"footer\">\r\n      <div style=\"float: left\">\r\n        <a-button :loading=\"loading\" @click=\"handleReset\">重置</a-button>\r\n        <a-button :loading=\"loading\" @click=\"handleSave\">保存查询条件</a-button>\r\n      </div>\r\n      <a-button :loading=\"loading\" @click=\"handleCancel\">关闭</a-button>\r\n      <a-button :loading=\"loading\" type=\"primary\" @click=\"handleOk\">查询</a-button>\r\n    </template>\r\n\r\n    <a-spin :spinning=\"loading\">\r\n      <a-row>\r\n        <a-col :sm=\"24\" :md=\"24-5\">\r\n\r\n          <a-empty v-if=\"queryParamsModel.length === 0\" style=\"margin-bottom: 12px;\">\r\n            <div slot=\"description\">\r\n              <span>没有任何查询条件</span>\r\n              <a-divider type=\"vertical\"/>\r\n              <a @click=\"handleAdd\">点击新增</a>\r\n            </div>\r\n          </a-empty>\r\n\r\n          <a-form v-else layout=\"inline\">\r\n\r\n            <a-row style=\"margin-bottom: 12px;\">\r\n              <a-col :md=\"12\" :xs=\"24\">\r\n                <a-form-item label=\"过滤条件匹配\" :labelCol=\"{md: 6,xs:24}\" :wrapperCol=\"{md: 18,xs:24}\" style=\"width: 100%;\">\r\n                  <a-select v-model=\"matchType\" :getPopupContainer=\"node=>node.parentNode\" style=\"width: 100%;\">\r\n                    <a-select-option value=\"and\">AND（所有条件都要求匹配）</a-select-option>\r\n                    <a-select-option value=\"or\">OR（条件中的任意一个匹配）</a-select-option>\r\n                  </a-select>\r\n                </a-form-item>\r\n              </a-col>\r\n            </a-row>\r\n\r\n            <a-row type=\"flex\" style=\"margin-bottom:10px\" :gutter=\"16\" v-for=\"(item, index) in queryParamsModel\" :key=\"index\">\r\n\r\n              <a-col :md=\"8\" :xs=\"24\" style=\"margin-bottom: 12px;\">\r\n                <a-tree-select\r\n                  showSearch\r\n                  v-model=\"item.field\"\r\n                  :treeData=\"fieldTreeData\"\r\n                  :dropdownStyle=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n                  placeholder=\"选择查询字段\"\r\n                  allowClear\r\n                  treeDefaultExpandAll\r\n                  :getPopupContainer=\"node=>node.parentNode\"\r\n                  style=\"width: 100%\"\r\n                  @select=\"(val,option)=>handleSelected(option,item)\"\r\n                >\r\n                </a-tree-select>\r\n              </a-col>\r\n\r\n              <a-col :md=\"4\" :xs=\"24\" style=\"margin-bottom: 12px;\">\r\n                <a-select placeholder=\"匹配规则\" :value=\"item.rule\" :getPopupContainer=\"node=>node.parentNode\" @change=\"handleRuleChange(item,$event)\">\r\n                  <a-select-option value=\"eq\">等于</a-select-option>\r\n                  <a-select-option value=\"like\">包含</a-select-option>\r\n                  <a-select-option value=\"right_like\">以..开始</a-select-option>\r\n                  <a-select-option value=\"left_like\">以..结尾</a-select-option>\r\n                  <a-select-option value=\"in\">在...中</a-select-option>\r\n                  <a-select-option value=\"ne\">不等于</a-select-option>\r\n                  <a-select-option value=\"gt\">大于</a-select-option>\r\n                  <a-select-option value=\"ge\">大于等于</a-select-option>\r\n                  <a-select-option value=\"lt\">小于</a-select-option>\r\n                  <a-select-option value=\"le\">小于等于</a-select-option>\r\n                </a-select>\r\n              </a-col>\r\n\r\n              <a-col :md=\"8\" :xs=\"24\" style=\"margin-bottom: 12px;\">\r\n                <!-- 下拉搜索 -->\r\n                <j-search-select-tag v-if=\"item.type==='sel_search'\" v-model=\"item.val\" :dict=\"getDictInfo(item)\" placeholder=\"请选择\"/>\r\n                <!-- 下拉框 -->\r\n                <j-search-select-tag v-else-if=\"item.type==='list' && item.dictTable\" v-model=\"item.val\" :dict=\"getDictInfo(item)\" placeholder=\"请选择\"/>\r\n                <!-- 下拉多选 -->\r\n                <template v-else-if=\"item.type==='list_multi'\">\r\n                  <j-multi-select-tag v-if=\"item.options\" v-model=\"item.val\" :options=\"item.options\" placeholder=\"请选择\"/>\r\n                  <j-multi-select-tag v-else v-model=\"item.val\" :dictCode=\"getDictInfo(item)\" placeholder=\"请选择\"/>\r\n                </template>\r\n\r\n                <template v-else-if=\"item.dictCode\">\r\n                  <template v-if=\"item.type === 'table-dict'\">\r\n                    <j-popup\r\n                      v-model=\"item.val\"\r\n                      :code=\"item.dictTable\"\r\n                      :field=\"item.dictCode\"\r\n                      :orgFields=\"item.dictCode\"\r\n                      :destFields=\"item.dictCode\"\r\n                      :multi=\"true\"\r\n                    ></j-popup>\r\n                  </template>\r\n                  <template v-else>\r\n                    <j-multi-select-tag v-show=\"allowMultiple(item)\" v-model=\"item.val\" :dictCode=\"item.dictCode\" placeholder=\"请选择\"/>\r\n                    <j-dict-select-tag v-show=\"!allowMultiple(item)\" v-model=\"item.val\" :dictCode=\"item.dictCode\" placeholder=\"请选择\"/>\r\n                  </template>\r\n                </template>\r\n                <j-popup\r\n                  v-else-if=\"item.type === 'popup'\"\r\n                  :value=\"item.val\"\r\n                  v-bind=\"item.popup\"\r\n                  group-id=\"superQuery\"\r\n                  @input=\"(e,v)=>handleChangeJPopup(item,e,v)\"\r\n                  :multi=\"true\"/>\r\n                <j-select-multi-user\r\n                  v-else-if=\"item.type === 'select-user' || item.type === 'sel_user'\"\r\n                  v-model=\"item.val\"\r\n                  :buttons=\"false\"\r\n                  :multiple=\"allowMultiple(item)\"\r\n                  placeholder=\"请选择用户\"\r\n                  :returnKeys=\"['id', item.customReturnField || 'username']\"\r\n                />\r\n                <j-select-depart\r\n                  v-else-if=\"item.type === 'select-depart' || item.type === 'sel_depart'\"\r\n                  v-model=\"item.val\"\r\n                  :multi=\"allowMultiple(item)\"\r\n                  placeholder=\"请选择部门\"\r\n                  :customReturnField=\"item.customReturnField || 'id'\"\r\n                />\r\n                <a-select\r\n                  v-else-if=\"item.options instanceof Array\"\r\n                  v-model=\"item.val\"\r\n                  :options=\"item.options\"\r\n                  allowClear\r\n                  placeholder=\"请选择\"\r\n                  :mode=\"allowMultiple(item)?'multiple':''\"\r\n                />\r\n                <j-area-linkage v-model=\"item.val\" v-else-if=\"item.type==='area-linkage' || item.type==='pca'\" style=\"width: 100%\"/>\r\n                <j-date v-else-if=\" item.type=='date' \" v-model=\"item.val\" placeholder=\"请选择日期\" style=\"width: 100%\"></j-date>\r\n                <j-date v-else-if=\" item.type=='datetime' \" v-model=\"item.val\" placeholder=\"请选择时间\" :show-time=\"true\" date-format=\"YYYY-MM-DD HH:mm:ss\" style=\"width: 100%\"></j-date>\r\n                <a-time-picker v-else-if=\"item.type==='time'\" :value=\"item.val ? moment(item.val,'HH:mm:ss') : null\" format=\"HH:mm:ss\" style=\"width: 100%\" @change=\"(time,value)=>item.val=value\"/>\r\n                <a-input-number v-else-if=\" item.type=='int'||item.type=='number' \" style=\"width: 100%\" placeholder=\"请输入数值\" v-model=\"item.val\"/>\r\n                <a-select v-else-if=\"item.type=='switch'\" placeholder=\"请选择\" v-model=\"item.val\">\r\n                  <!-- update-begin-author:taoyan for: VUEN-242【online表单 高级查询】开关组件设置扩展参数为[0,1] 时，高级查询选择后查询仍然是Y/N -->\r\n                  <a-select-option :value=\"item.extendOption[0]\">是</a-select-option>\r\n                  <a-select-option :value=\"item.extendOption[1]\">否</a-select-option>\r\n                  <!-- update-end-author:taoyan for: VUEN-242【online表单 高级查询】开关组件设置扩展参数为[0,1] 时，高级查询选择后查询仍然是Y/N -->\r\n                </a-select>\r\n                <a-input v-else v-model=\"item.val\" placeholder=\"请输入值\"/>\r\n              </a-col>\r\n\r\n              <a-col :md=\"4\" :xs=\"0\" style=\"margin-bottom: 12px;\">\r\n                <a-button @click=\"handleAdd\" icon=\"plus\"></a-button>&nbsp;\r\n                <a-button @click=\"handleDel( index )\" icon=\"minus\"></a-button>\r\n              </a-col>\r\n\r\n              <a-col :md=\"0\" :xs=\"24\" style=\"margin-bottom: 12px;text-align: right;\">\r\n                <a-button @click=\"handleAdd\" icon=\"plus\"></a-button>&nbsp;\r\n                <a-button @click=\"handleDel( index )\" icon=\"minus\"></a-button>\r\n              </a-col>\r\n\r\n            </a-row>\r\n\r\n          </a-form>\r\n        </a-col>\r\n        <a-col :sm=\"24\" :md=\"5\">\r\n          <!-- 查询记录 -->\r\n\r\n          <a-card class=\"j-super-query-history-card\" :bordered=\"true\">\r\n            <div slot=\"title\">\r\n              保存的查询\r\n            </div>\r\n\r\n            <a-empty v-if=\"saveTreeData.length === 0\" class=\"j-super-query-history-empty\" description=\"没有保存任何查询\"/>\r\n            <a-tree\r\n              v-else\r\n              class=\"j-super-query-history-tree\"\r\n              showIcon\r\n              :treeData=\"saveTreeData\"\r\n              :selectedKeys=\"[]\"\r\n              @select=\"handleTreeSelect\"\r\n            >\r\n            </a-tree>\r\n          </a-card>\r\n\r\n\r\n        </a-col>\r\n      </a-row>\r\n\r\n\r\n    </a-spin>\r\n\r\n    <a-modal title=\"请输入保存的名称\" :visible=\"prompt.visible\" @cancel=\"prompt.visible=false\" @ok=\"handlePromptOk\">\r\n      <a-input v-model=\"prompt.value\"></a-input>\r\n    </a-modal>\r\n\r\n  </j-modal>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  import moment from 'moment'\r\n  import * as utils from '@/utils/util'\r\n  import { mixinDevice } from '@/utils/mixin'\r\n  import JDate from '@/components/jeecg/JDate.vue'\r\n  import JSelectDepart from '@/components/jeecgbiz/JSelectDepart'\r\n  import JSelectMultiUser from '@/components/jeecgbiz/JSelectMultiUser'\r\n  import JMultiSelectTag from '@/components/dict/JMultiSelectTag'\r\n  import JAreaLinkage from '@comp/jeecg/JAreaLinkage'\r\n\r\n  export default {\r\n    name: 'JSuperQuery',\r\n    mixins: [mixinDevice],\r\n    components: { JAreaLinkage, JMultiSelectTag, JDate, JSelectDepart, JSelectMultiUser },\r\n    props: {\r\n      /*\r\n       fieldList: [{\r\n          value:'',\r\n          text:'',\r\n          type:'',\r\n          dictCode:'' // 只要 dictCode 有值，无论 type 是什么，都显示为字典下拉框\r\n       }]\r\n       type:date datetime int number string\r\n      * */\r\n      fieldList: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      /*\r\n      * 这个回调函数接收一个数组参数 即查询条件\r\n      * */\r\n      callback: {\r\n        type: String,\r\n        required: false,\r\n        default: 'handleSuperQuery'\r\n      },\r\n\r\n      // 当前是否在加载中\r\n      loading: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n\r\n      // 保存查询条件的唯一 code，通过该 code 区分\r\n      // 默认为 null，代表以当前路由全路径为区分Code\r\n      saveCode: {\r\n        type: String,\r\n        default: null\r\n      }\r\n\r\n    },\r\n    data() {\r\n      return {\r\n        moment,\r\n        fieldTreeData: [],\r\n\r\n        prompt: {\r\n          visible: false,\r\n          value: ''\r\n        },\r\n\r\n        visible: false,\r\n        queryParamsModel: [],\r\n        treeIcon: <a-icon type=\"file-text\"/>,\r\n        // 保存查询条件的treeData\r\n        saveTreeData: [],\r\n        // 保存查询条件的前缀名\r\n        saveCodeBefore: 'JSuperQuerySaved_',\r\n        // 查询类型，过滤条件匹配（and、or）\r\n        matchType: 'and',\r\n        superQueryFlag: false,\r\n      }\r\n    },\r\n    computed: {\r\n      izMobile() {\r\n        return this.device === 'mobile'\r\n      },\r\n      tooltipProps() {\r\n        return this.izMobile ? { visible: false } : {}\r\n      },\r\n      fullSaveCode() {\r\n        let saveCode = this.saveCode\r\n        if (saveCode == null || saveCode === '') {\r\n          saveCode = this.$route.fullPath\r\n        }\r\n        return this.saveCodeBefore + saveCode\r\n      },\r\n    },\r\n    watch: {\r\n      // 当 saveCode 变化时，重新查询已保存的条件\r\n      fullSaveCode: {\r\n        immediate: true,\r\n        handler() {\r\n          let list = this.$ls.get(this.fullSaveCode)\r\n          if (list instanceof Array) {\r\n            this.saveTreeData = list.map(i => this.renderSaveTreeData(i))\r\n          }\r\n        }\r\n      },\r\n      fieldList: {\r\n        deep: true,\r\n        immediate: true,\r\n        handler(val) {\r\n          let mainData = [], subData = []\r\n          val.forEach(item => {\r\n            let data = { ...item }\r\n            data.label = data.label || data.text\r\n            let hasChildren = (data.children instanceof Array)\r\n            data.disabled = hasChildren\r\n            data.selectable = !hasChildren\r\n            if (hasChildren) {\r\n              data.children = data.children.map(item2 => {\r\n                let child = { ...item2 }\r\n                child.label = child.label || child.text\r\n                child.label = data.label + '-' + child.label\r\n                // update--begin--author:sunjianlei-----date:20220121------for：【JTC-1167】【表单设计器】高级查询，一对一字段查询不好使\r\n                // 是否仅包含字段名，不需要拼接子表表名\r\n                if (!data.onlyFieldName) {\r\n                  child.value = data.value + ',' + child.value\r\n                }\r\n                // update--end--author:sunjianlei-----date:20220121------for：【JTC-1167】【表单设计器】高级查询，一对一字段查询不好使\r\n                child.val = ''\r\n                return child\r\n              })\r\n              data.val = ''\r\n              subData.push(data)\r\n            } else {\r\n              mainData.push(data)\r\n            }\r\n          })\r\n          this.fieldTreeData = mainData.concat(subData)\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      show() {\r\n        if (!this.queryParamsModel || this.queryParamsModel.length === 0) {\r\n          this.resetLine()\r\n        }\r\n        this.visible = true\r\n      },\r\n\r\n      getDictInfo(item) {\r\n        let str = ''\r\n        if(!item.dictTable){\r\n          str = item.dictCode\r\n        }else{\r\n          str = item.dictTable+','+item.dictText+','+item.dictCode\r\n        }\r\n        console.log('高级查询字典信息',str)\r\n        return str\r\n      },\r\n      handleOk() {\r\n        if (!this.isNullArray(this.queryParamsModel)) {\r\n          let event = {\r\n            matchType: this.matchType,\r\n            params: this.removeEmptyObject(this.queryParamsModel)\r\n          }\r\n          // 移动端模式下关闭弹窗\r\n          if (this.izMobile) {\r\n            this.visible = false\r\n          }\r\n          this.emitCallback(event)\r\n        } else {\r\n          this.$message.warn(\"不能查询空条件\")\r\n        }\r\n      },\r\n      emitCallback(event = {}, loadStatus = true) {\r\n        let { params = [], matchType = this.matchType } = event\r\n        this.superQueryFlag = (params && params.length > 0)\r\n        for (let param of params) {\r\n          if (Array.isArray(param.val)) {\r\n            param.val = param.val.join(',')\r\n          }\r\n        }\r\n        console.debug('---高级查询参数--->', { params, matchType })\r\n        this.$emit(this.callback, params, matchType, loadStatus)\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      handleAdd() {\r\n        this.addNewLine()\r\n      },\r\n      addNewLine() {\r\n        this.queryParamsModel.push({ rule: 'eq' })\r\n      },\r\n      resetLine() {\r\n        this.superQueryFlag = false\r\n        this.queryParamsModel = []\r\n        this.addNewLine()\r\n      },\r\n      handleDel(index) {\r\n        this.queryParamsModel.splice(index, 1)\r\n      },\r\n      handleSelected(node, item) {\r\n        let { type, dbType, options, dictCode, dictTable, dictText, customReturnField, popup } = node.dataRef\r\n        item['type'] = type\r\n        item['dbType'] = dbType\r\n        item['options'] = options\r\n        item['dictCode'] = dictCode\r\n        item['dictTable'] = dictTable\r\n        item['dictText'] = dictText\r\n        //update-begin-author:taoyan for: VUEN-242【online表单 高级查询】开关组件设置扩展参数为[0,1] 时，高级查询选择后查询仍然是Y/N\r\n        item['extendOption'] = node.dataRef.extendOption || ['Y', 'N']\r\n        //update-begin-author:taoyan for: VUEN-242【online表单 高级查询】开关组件设置扩展参数为[0,1] 时，高级查询选择后查询仍然是Y/N\r\n        item['customReturnField'] = customReturnField\r\n        if (popup) {\r\n          item['popup'] = popup\r\n        }\r\n        // 格式化字符串，一般用于高级查询的日期格式处理\r\n        if (node.dataRef.formatStr) {\r\n          item['formatStr'] = node.dataRef.formatStr\r\n        }\r\n        this.$set(item, 'val', undefined)\r\n      },\r\n      handleOpen() {\r\n        this.show()\r\n      },\r\n      handleOutReset(loadStaus=true) {\r\n        this.resetLine()\r\n        this.emitCallback({}, loadStaus)\r\n      },\r\n      handleReset() {\r\n        this.resetLine()\r\n        this.emitCallback({}, true)\r\n      },\r\n      handleSave() {\r\n        let queryParams = this.removeEmptyObject(this.queryParamsModel)\r\n        if (this.isNullArray(queryParams)) {\r\n          this.$message.warning('空条件不能保存')\r\n        } else {\r\n          this.prompt.value = ''\r\n          this.prompt.visible = true\r\n        }\r\n      },\r\n      handlePromptOk() {\r\n        let { value } = this.prompt\r\n        if(!value){\r\n          this.$message.warning('保存名称不能为空')\r\n          return\r\n        }\r\n        // 取出查询条件\r\n        let records = this.removeEmptyObject(this.queryParamsModel)\r\n        // 判断有没有重名的\r\n        let filterList = this.saveTreeData.filter(i => i.originTitle === value)\r\n        if (filterList.length > 0) {\r\n          this.$confirm({\r\n            content: `${value} 已存在，是否覆盖？`,\r\n            onOk: () => {\r\n              this.prompt.visible = false\r\n              filterList[0].records = records\r\n              this.saveToLocalStore()\r\n              this.$message.success('保存成功')\r\n            }\r\n          })\r\n        } else {\r\n          // 没有重名的，直接添加\r\n          this.prompt.visible = false\r\n          // 添加到树列表中\r\n          this.saveTreeData.push(this.renderSaveTreeData({\r\n            title: value,\r\n            matchType: this.matchType,\r\n            records: records\r\n          }))\r\n          // 保存到 LocalStore\r\n          this.saveToLocalStore()\r\n          this.$message.success('保存成功')\r\n        }\r\n      },\r\n      handleTreeSelect(idx, event) {\r\n        if (event.selectedNodes[0]) {\r\n          let { matchType, records } = event.selectedNodes[0].data.props\r\n          // 将保存的matchType取出，兼容旧数据，如果没有保存就还是使用原来的\r\n          this.matchType = matchType || this.matchType\r\n          this.queryParamsModel = utils.cloneObject(records)\r\n        }\r\n      },\r\n      handleRemoveSaveTreeItem(event, vNode) {\r\n        // 阻止事件冒泡\r\n        event.stopPropagation()\r\n\r\n        this.$confirm({\r\n          content: '是否删除当前查询？',\r\n          onOk: () => {\r\n            let { eventKey } = vNode\r\n            this.saveTreeData.splice(Number.parseInt(eventKey.substring(2)), 1)\r\n            this.saveToLocalStore()\r\n          },\r\n        })\r\n      },\r\n\r\n      // 将查询保存到 LocalStore 里\r\n      saveToLocalStore() {\r\n        let saveValue = this.saveTreeData.map(({ originTitle, matchType, records }) => ({ title: originTitle, matchType, records }))\r\n        this.$ls.set(this.fullSaveCode, saveValue)\r\n      },\r\n\r\n      isNullArray(array) {\r\n        //判断是不是空数组对象\r\n        if (!array || array.length === 0) {\r\n          return true\r\n        }\r\n        if (array.length === 1) {\r\n          let obj = array[0]\r\n          if (!obj.field || (obj.val == null || obj.val === '') || !obj.rule) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      },\r\n      // 去掉数组中的空对象\r\n      removeEmptyObject(arr) {\r\n        let array = utils.cloneObject(arr)\r\n        for (let i = 0; i < array.length; i++) {\r\n          let item = array[i]\r\n          if (item == null || Object.keys(item).length <= 0) {\r\n            array.splice(i--, 1)\r\n          } else {\r\n            if (Array.isArray(item.options)) {\r\n              // 如果有字典属性，就不需要保存 options 了\r\n              //update-begin-author:taoyan date:20200819 for:【开源问题】 高级查询 下拉框作为并且选项很多多多 LOWCOD-779\r\n              delete item.options\r\n              //update-end-author:taoyan date:20200819 for:【开源问题】 高级查询 下拉框作为并且选项很多多多 LOWCOD-779\r\n            }\r\n          }\r\n        }\r\n        return array\r\n      },\r\n\r\n      /** 渲染保存查询条件的 title（加个删除按钮） */\r\n      renderSaveTreeData(item) {\r\n        item.icon = this.treeIcon\r\n        item.originTitle = item['title']\r\n        item.title = (arg1, arg2) => {\r\n          let vNode\r\n          // 兼容旧版的Antdv\r\n          if (arg1.dataRef) {\r\n            vNode = arg1\r\n          } else if (arg2.dataRef) {\r\n            vNode = arg2\r\n          } else {\r\n            return <span style=\"color:red;\">Antdv版本不支持</span>\r\n          }\r\n          let {originTitle} = vNode.dataRef\r\n          return (\r\n            <div class=\"j-history-tree-title\">\r\n              <span>{originTitle}</span>\r\n\r\n              <div class=\"j-history-tree-title-closer\" onClick={e => this.handleRemoveSaveTreeItem(e, vNode)}>\r\n                <a-icon type=\"close-circle\"/>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n        return item\r\n      },\r\n\r\n      /** 判断是否允许多选 */\r\n      allowMultiple(item) {\r\n        return item.rule === 'in'\r\n      },\r\n\r\n      handleRuleChange(item, newValue) {\r\n        let oldValue = item.rule\r\n        this.$set(item, 'rule', newValue)\r\n        // 上一个规则是否是 in，且type是字典或下拉\r\n        if (oldValue === 'in') {\r\n          if (item.dictCode || item.options instanceof Array) {\r\n            let value = item.val\r\n            if (typeof item.val === 'string') {\r\n              value = item.val.split(',')[0]\r\n            } else if (Array.isArray(item.val)) {\r\n              value = item.val[0]\r\n            }\r\n            this.$set(item, 'val', value)\r\n          }\r\n        }\r\n      },\r\n\r\n      handleChangeJPopup(item, e, values) {\r\n        item.val = values[item.popup['destFields']]\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n  .j-super-query-box {\r\n    display: inline-block;\r\n  }\r\n\r\n  .j-super-query-modal {\r\n\r\n    .j-super-query-history-card {\r\n      /deep/ .ant-card-body,\r\n      /deep/ .ant-card-head-title {\r\n        padding: 0;\r\n      }\r\n\r\n      /deep/ .ant-card-head {\r\n        padding: 4px 8px;\r\n        min-height: initial;\r\n      }\r\n    }\r\n\r\n    .j-super-query-history-empty {\r\n      /deep/ .ant-empty-image {\r\n        height: 80px;\r\n        line-height: 80px;\r\n        margin-bottom: 0;\r\n      }\r\n\r\n      /deep/ img {\r\n        width: 80px;\r\n        height: 65px;\r\n      }\r\n\r\n      /deep/ .ant-empty-description {\r\n        color: #afafaf;\r\n        margin: 8px 0;\r\n      }\r\n    }\r\n\r\n    .j-super-query-history-tree {\r\n\r\n      .j-history-tree-title {\r\n        width: calc(100% - 24px);\r\n        position: relative;\r\n        display: inline-block;\r\n\r\n        &-closer {\r\n          color: #999999;\r\n          position: absolute;\r\n          top: 0;\r\n          right: 0;\r\n          width: 24px;\r\n          height: 24px;\r\n          text-align: center;\r\n          opacity: 0;\r\n          transition: opacity 0.3s, color 0.3s;\r\n\r\n          &:hover {\r\n            color: #666666;\r\n          }\r\n\r\n          &:active {\r\n            color: #333333;\r\n          }\r\n        }\r\n\r\n        &:hover {\r\n          .j-history-tree-title-closer {\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      /deep/ .ant-tree-switcher {\r\n        display: none;\r\n      }\r\n\r\n      /deep/ .ant-tree-node-content-wrapper {\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n</style>"]}]}