{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DictItemModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DictItemModal.vue","mtime":1661074531311},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport {addDictItem, editDictItem} from '@/api/api'\nimport { getAction } from '@api/manage'\n\nexport default {\n  name: \"DictItemModal\",\n  data() {\n    return {\n      title: \"操作\",\n      visible: false,\n      visibleCheck: true,\n      model: {},\n      dictId: \"\",\n      status: 1,\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 5},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n      confirmLoading: false,\n      validatorRules: {\n        itemText:  [{required: true, message: '请输入名称!'}],\n        itemValue:  [{required: true, message: '请输入数据值!'},{validator: this.validateItemValue}],\n      },\n    }\n  },\n  created() {\n  },\n  methods: {\n    add(dictId) {\n      this.dictId = dictId;\n      //初始化默认值\n      this.edit({sortOrder:1,status:1});\n    },\n    edit(record) {\n      if (record.id) {\n        this.dictId = record.dictId;\n      }\n      this.status = record.status;\n      this.visibleCheck = (record.status == 1) ? true : false;\n      this.model = Object.assign({}, record);\n      this.model.dictId = this.dictId;\n      this.model.status = this.status;\n      this.visible = true;\n    },\n    onChose(checked) {\n      if (checked) {\n        this.status = 1;\n        this.visibleCheck = true;\n      } else {\n        this.status = 0;\n        this.visibleCheck = false;\n      }\n    },\n    // 确定\n    handleOk() {\n      const that = this;\n      // 触发表单验证\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          that.confirmLoading = true;\n          this.model.itemText = (this.model.itemText || '').trim()\n          this.model.itemValue = (this.model.itemValue || '').trim()\n          this.model.description = (this.model.description || '').trim()\n          this.model.status = this.status;\n          let obj;\n          if (!this.model.id) {\n            obj = addDictItem(this.model);\n          } else {\n            obj = editDictItem(this.model);\n          }\n          obj.then((res) => {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n        }else{\n          return false;\n        }\n      })\n    },\n    // 关闭\n    handleCancel() {\n      this.close();\n    },\n    close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    },\n    validateItemValue(rule, value, callback){\n      let param = {\n        itemValue:value,\n        dictId:this.dictId,\n      }\n      if(this.model.id){\n        param.id = this.model.id\n      }\n      if(value){\n        let reg=new RegExp(\"[`~!@#$^&*()=|{}'.<>《》/?！￥（）—【】‘；：”“。，、？]\")\n        if(reg.test(value)){\n          callback(\"数据值不能包含特殊字符！\")\n        }else{\n          //update--begin--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n          getAction(\"/sys/dictItem/dictItemCheck\",param).then((res)=>{\n            if(res.success){\n              callback()\n            }else{\n              callback(res.message);\n            }\n          });\n          //update--end--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n        }\n      }else{\n        callback()\n      }\n    }\n  }\n}\n",{"version":3,"sources":["DictItemModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DictItemModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\"\r\n  >\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form-model  ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\r\n\r\n        <a-form-model-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          prop=\"itemText\"\r\n          label=\"名称\">\r\n          <a-input placeholder=\"请输入名称\" v-model=\"model.itemText\"/>\r\n        </a-form-model-item>\r\n\r\n        <a-form-model-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          prop=\"itemValue\"\r\n          label=\"数据值\">\r\n          <a-input placeholder=\"请输入数据值\" v-model=\"model.itemValue\" />\r\n        </a-form-model-item>\r\n\r\n        <a-form-model-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"描述\">\r\n          <a-input v-model=\"model.description\" />\r\n        </a-form-model-item>\r\n\r\n        <a-form-model-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"排序值\">\r\n          <a-input-number :min=\"1\" v-model=\"model.sortOrder\" />\r\n          值越小越靠前\r\n        </a-form-model-item>\r\n\r\n        <a-form-model-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"是否启用\"\r\n          hasFeedback>\r\n          <a-switch checkedChildren=\"启用\" unCheckedChildren=\"禁用\" @change=\"onChose\" v-model=\"visibleCheck\"/>\r\n        </a-form-model-item>\r\n\r\n      </a-form-model>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import pick from 'lodash.pick'\r\n  import {addDictItem, editDictItem} from '@/api/api'\r\n  import { getAction } from '@api/manage'\r\n\r\n  export default {\r\n    name: \"DictItemModal\",\r\n    data() {\r\n      return {\r\n        title: \"操作\",\r\n        visible: false,\r\n        visibleCheck: true,\r\n        model: {},\r\n        dictId: \"\",\r\n        status: 1,\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        confirmLoading: false,\r\n        validatorRules: {\r\n          itemText:  [{required: true, message: '请输入名称!'}],\r\n          itemValue:  [{required: true, message: '请输入数据值!'},{validator: this.validateItemValue}],\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      add(dictId) {\r\n        this.dictId = dictId;\r\n        //初始化默认值\r\n        this.edit({sortOrder:1,status:1});\r\n      },\r\n      edit(record) {\r\n        if (record.id) {\r\n          this.dictId = record.dictId;\r\n        }\r\n        this.status = record.status;\r\n        this.visibleCheck = (record.status == 1) ? true : false;\r\n        this.model = Object.assign({}, record);\r\n        this.model.dictId = this.dictId;\r\n        this.model.status = this.status;\r\n        this.visible = true;\r\n      },\r\n      onChose(checked) {\r\n        if (checked) {\r\n          this.status = 1;\r\n          this.visibleCheck = true;\r\n        } else {\r\n          this.status = 0;\r\n          this.visibleCheck = false;\r\n        }\r\n      },\r\n      // 确定\r\n      handleOk() {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.$refs.form.validate(valid => {\r\n          if (valid) {\r\n            that.confirmLoading = true;\r\n            this.model.itemText = (this.model.itemText || '').trim()\r\n            this.model.itemValue = (this.model.itemValue || '').trim()\r\n            this.model.description = (this.model.description || '').trim()\r\n            this.model.status = this.status;\r\n            let obj;\r\n            if (!this.model.id) {\r\n              obj = addDictItem(this.model);\r\n            } else {\r\n              obj = editDictItem(this.model);\r\n            }\r\n            obj.then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              } else {\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n          }else{\r\n            return false;\r\n          }\r\n        })\r\n      },\r\n      // 关闭\r\n      handleCancel() {\r\n        this.close();\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.$refs.form.resetFields();\r\n      },\r\n      validateItemValue(rule, value, callback){\r\n        let param = {\r\n          itemValue:value,\r\n          dictId:this.dictId,\r\n        }\r\n        if(this.model.id){\r\n          param.id = this.model.id\r\n        }\r\n        if(value){\r\n          let reg=new RegExp(\"[`~!@#$^&*()=|{}'.<>《》/?！￥（）—【】‘；：”“。，、？]\")\r\n          if(reg.test(value)){\r\n            callback(\"数据值不能包含特殊字符！\")\r\n          }else{\r\n            //update--begin--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\r\n            getAction(\"/sys/dictItem/dictItemCheck\",param).then((res)=>{\r\n              if(res.success){\r\n                callback()\r\n              }else{\r\n                callback(res.message);\r\n              }\r\n            });\r\n            //update--end--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\r\n          }\r\n        }else{\r\n          callback()\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}