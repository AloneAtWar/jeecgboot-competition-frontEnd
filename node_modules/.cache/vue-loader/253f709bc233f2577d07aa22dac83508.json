{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JEditor.vue","mtime":1661074531176},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tinymce from 'tinymce/tinymce'\nimport Editor from '@tinymce/tinymce-vue'\nimport 'tinymce/themes/silver/theme'\nimport 'tinymce/plugins/image'\nimport 'tinymce/plugins/link'\nimport 'tinymce/plugins/media'\nimport 'tinymce/plugins/table'\nimport 'tinymce/plugins/lists'\nimport 'tinymce/plugins/contextmenu'\nimport 'tinymce/plugins/wordcount'\nimport 'tinymce/plugins/colorpicker'\nimport 'tinymce/plugins/textcolor'\nimport 'tinymce/plugins/fullscreen'\nimport 'tinymce/icons/default'\nimport { uploadAction,getFileAccessHttpUrl } from '@/api/manage'\nimport { getVmParentByName } from '@/utils/util'\nexport default {\n  components: {\n    Editor\n  },\n  props: {\n    value: {\n      type: String,\n      required:false\n    },\n    triggerChange:{\n      type: Boolean,\n      default: false,\n      required:false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    plugins: {\n      type: [String, Array],\n      default: 'lists image link media table textcolor wordcount contextmenu fullscreen'\n    },\n    toolbar: {\n      type: [String, Array],\n      default: 'undo redo |  formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists link unlink image media table | removeformat | fullscreen',\n      branding:false\n    }\n  },\n  data() {\n    return {\n      //初始化配置\n      init: {\n        language_url: '/tinymce/langs/zh_CN.js',\n        language: 'zh_CN',\n        skin_url: '/tinymce/skins/lightgray',\n        height: 300,\n        plugins: this.plugins,\n        toolbar: this.toolbar,\n        branding: false,\n        menubar: false,\n        toolbar_drawer: false,\n        //update-begin-author:taoyan date:2022-5-6 for: issues/I4BCC3 富文本编辑器在服务器图片上传是相对路径\n        convert_urls: false,\n        //update-end-author:taoyan date:2022-5-6 for: issues/I4BCC3 富文本编辑器在服务器图片上传是相对路径\n        images_upload_handler: (blobInfo, success) => {\n          let formData = new FormData()\n          formData.append('file', blobInfo.blob(), blobInfo.filename());\n          formData.append('biz', \"jeditor\");\n          formData.append(\"jeditor\",\"1\");\n          uploadAction(window._CONFIG['domianURL']+\"/sys/common/upload\", formData).then((res) => {\n            if (res.success) {\n              if(res.message == 'local'){\n                const img = 'data:image/jpeg;base64,' + blobInfo.base64()\n                success(img)\n              }else{\n                let img = getFileAccessHttpUrl(res.message)\n                success(img)\n              }\n            }\n          })\n        }\n      },\n      myValue: this.value,\n      reloading: false,\n    }\n  },\n  mounted() {\n    this.initATabsChangeAutoReload()\n  },\n  methods: {\n\n    reload() {\n      this.reloading = true\n      this.$nextTick(() => this.reloading = false)\n    },\n\n    onClick(e) {\n      this.$emit('onClick', e, tinymce)\n    },\n    //可以添加一些自己的自定义事件，如清空内容\n    clear() {\n      this.myValue = ''\n    },\n\n    /**\n     * 自动判断父级是否是 <a-tabs/> 组件，然后添加事件监听，自动触发reload()\n     *\n     * 由于 tabs 组件切换会导致 tinymce 无法输入，\n     * 只有重新加载才能使用（无论是vue版的还是jQuery版tinymce都有这个通病）\n     */\n    initATabsChangeAutoReload() {\n      // 获取父级\n      let tabs = getVmParentByName(this, 'ATabs')\n      let tabPane = getVmParentByName(this, 'ATabPane')\n      if (tabs && tabPane) {\n        // 用户自定义的 key\n        let currentKey = tabPane.$vnode.key\n        // 添加事件监听\n        tabs.$on('change', (key) => {\n          // 切换到自己时执行reload\n          if (currentKey === key) {\n            this.reload()\n          }\n        })\n        //update--begin--autor:liusq-----date:20210316------for：富文本编辑器tab父组件可能导致的赋值问题------\n        this.reload()\n        //update--end--autor:liusq-----date:20210316------for：富文本编辑器tab父组件可能导致的赋值问题------\n      }else{\n        //update--begin--autor:wangshuai-----date:20200724------for：富文本编辑器切换tab无法修改------\n        let tabLayout = getVmParentByName(this, 'TabLayout')\n        //update--begin--autor:liusq-----date:20210713------for：处理特殊情况excuteCallback不能使用------\n        try {\n          tabLayout.excuteCallback(() => {\n            this.reload()\n          })\n        } catch (error) {\n          if (tabLayout) {\n            this.reload()\n          }\n        }\n        //update--end--autor:liusq-----date:20210713------for：处理特殊情况excuteCallback不能使用------\n        //update--begin--autor:wangshuai-----date:20200724------for：文本编辑器切换tab无法修改------\n      }\n    },\n\n  },\n  watch: {\n    value(newValue) {\n      this.myValue = (newValue == null ? '' : newValue)\n    },\n    myValue(newValue) {\n      if(this.triggerChange){\n        this.$emit('change', newValue)\n      }else{\n        this.$emit('input', newValue)\n      }\n    }\n  }\n}\n\n",{"version":3,"sources":["JEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"JEditor.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <div class=\"tinymce-editor\">\r\n    <editor\r\n      v-if=\"!reloading\"\r\n      v-model=\"myValue\"\r\n      :init=\"init\"\r\n      :disabled=\"disabled\"\r\n      @onClick=\"onClick\">\r\n    </editor>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import tinymce from 'tinymce/tinymce'\r\n  import Editor from '@tinymce/tinymce-vue'\r\n  import 'tinymce/themes/silver/theme'\r\n  import 'tinymce/plugins/image'\r\n  import 'tinymce/plugins/link'\r\n  import 'tinymce/plugins/media'\r\n  import 'tinymce/plugins/table'\r\n  import 'tinymce/plugins/lists'\r\n  import 'tinymce/plugins/contextmenu'\r\n  import 'tinymce/plugins/wordcount'\r\n  import 'tinymce/plugins/colorpicker'\r\n  import 'tinymce/plugins/textcolor'\r\n  import 'tinymce/plugins/fullscreen'\r\n  import 'tinymce/icons/default'\r\n  import { uploadAction,getFileAccessHttpUrl } from '@/api/manage'\r\n  import { getVmParentByName } from '@/utils/util'\r\n  export default {\r\n    components: {\r\n      Editor\r\n    },\r\n    props: {\r\n      value: {\r\n        type: String,\r\n        required:false\r\n      },\r\n      triggerChange:{\r\n        type: Boolean,\r\n        default: false,\r\n        required:false\r\n      },\r\n      disabled: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      plugins: {\r\n        type: [String, Array],\r\n        default: 'lists image link media table textcolor wordcount contextmenu fullscreen'\r\n      },\r\n      toolbar: {\r\n        type: [String, Array],\r\n        default: 'undo redo |  formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists link unlink image media table | removeformat | fullscreen',\r\n        branding:false\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        //初始化配置\r\n        init: {\r\n          language_url: '/tinymce/langs/zh_CN.js',\r\n          language: 'zh_CN',\r\n          skin_url: '/tinymce/skins/lightgray',\r\n          height: 300,\r\n          plugins: this.plugins,\r\n          toolbar: this.toolbar,\r\n          branding: false,\r\n          menubar: false,\r\n          toolbar_drawer: false,\r\n          //update-begin-author:taoyan date:2022-5-6 for: issues/I4BCC3 富文本编辑器在服务器图片上传是相对路径\r\n          convert_urls: false,\r\n          //update-end-author:taoyan date:2022-5-6 for: issues/I4BCC3 富文本编辑器在服务器图片上传是相对路径\r\n          images_upload_handler: (blobInfo, success) => {\r\n            let formData = new FormData()\r\n            formData.append('file', blobInfo.blob(), blobInfo.filename());\r\n            formData.append('biz', \"jeditor\");\r\n            formData.append(\"jeditor\",\"1\");\r\n            uploadAction(window._CONFIG['domianURL']+\"/sys/common/upload\", formData).then((res) => {\r\n              if (res.success) {\r\n                if(res.message == 'local'){\r\n                  const img = 'data:image/jpeg;base64,' + blobInfo.base64()\r\n                  success(img)\r\n                }else{\r\n                  let img = getFileAccessHttpUrl(res.message)\r\n                  success(img)\r\n                }\r\n              }\r\n            })\r\n          }\r\n        },\r\n        myValue: this.value,\r\n        reloading: false,\r\n      }\r\n    },\r\n    mounted() {\r\n      this.initATabsChangeAutoReload()\r\n    },\r\n    methods: {\r\n\r\n      reload() {\r\n        this.reloading = true\r\n        this.$nextTick(() => this.reloading = false)\r\n      },\r\n\r\n      onClick(e) {\r\n        this.$emit('onClick', e, tinymce)\r\n      },\r\n      //可以添加一些自己的自定义事件，如清空内容\r\n      clear() {\r\n        this.myValue = ''\r\n      },\r\n\r\n      /**\r\n       * 自动判断父级是否是 <a-tabs/> 组件，然后添加事件监听，自动触发reload()\r\n       *\r\n       * 由于 tabs 组件切换会导致 tinymce 无法输入，\r\n       * 只有重新加载才能使用（无论是vue版的还是jQuery版tinymce都有这个通病）\r\n       */\r\n      initATabsChangeAutoReload() {\r\n        // 获取父级\r\n        let tabs = getVmParentByName(this, 'ATabs')\r\n        let tabPane = getVmParentByName(this, 'ATabPane')\r\n        if (tabs && tabPane) {\r\n          // 用户自定义的 key\r\n          let currentKey = tabPane.$vnode.key\r\n          // 添加事件监听\r\n          tabs.$on('change', (key) => {\r\n            // 切换到自己时执行reload\r\n            if (currentKey === key) {\r\n              this.reload()\r\n            }\r\n          })\r\n          //update--begin--autor:liusq-----date:20210316------for：富文本编辑器tab父组件可能导致的赋值问题------\r\n          this.reload()\r\n          //update--end--autor:liusq-----date:20210316------for：富文本编辑器tab父组件可能导致的赋值问题------\r\n        }else{\r\n          //update--begin--autor:wangshuai-----date:20200724------for：富文本编辑器切换tab无法修改------\r\n          let tabLayout = getVmParentByName(this, 'TabLayout')\r\n          //update--begin--autor:liusq-----date:20210713------for：处理特殊情况excuteCallback不能使用------\r\n          try {\r\n            tabLayout.excuteCallback(() => {\r\n              this.reload()\r\n            })\r\n          } catch (error) {\r\n            if (tabLayout) {\r\n              this.reload()\r\n            }\r\n          }\r\n          //update--end--autor:liusq-----date:20210713------for：处理特殊情况excuteCallback不能使用------\r\n          //update--begin--autor:wangshuai-----date:20200724------for：文本编辑器切换tab无法修改------\r\n        }\r\n      },\r\n\r\n    },\r\n    watch: {\r\n      value(newValue) {\r\n        this.myValue = (newValue == null ? '' : newValue)\r\n      },\r\n      myValue(newValue) {\r\n        if(this.triggerChange){\r\n          this.$emit('change', newValue)\r\n        }else{\r\n          this.$emit('input', newValue)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n</script>\r\n<style scoped>\r\n</style>"]}]}