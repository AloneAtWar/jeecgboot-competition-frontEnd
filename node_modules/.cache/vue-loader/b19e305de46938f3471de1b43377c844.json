{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\JVxeSubPopover.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\JVxeSubPopover.vue","mtime":1661074531188},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport domAlign from 'dom-align'\nimport { getParentNodeByTagName } from '../utils/vxeUtils'\nimport { cloneObject, triggerWindowResizeEvent } from '@/utils/util'\n\nexport default {\n  name: 'JVxeSubPopover',\n  data() {\n    return {\n      visible: false,\n      // 当前行\n      row: null,\n      column: null,\n\n      overlayStyle: {\n        width: null,\n        zIndex: 100\n      },\n      placement: 'bottom'\n    }\n  },\n  created() {\n  },\n  methods: {\n\n    toggle(event) {\n\n      //update-begin-author:taoyan date:20200921 for: 弹出子表时，子表会闪一下，类似重新计算子表的位置\n      if(document.body.clientHeight - event.$event.clientY > 350){\n        this.placement = 'bottom'\n      }else{\n        this.placement = 'top'\n      }\n      //update-end-author:taoyan date:20200921 for: 弹出子表时，子表会闪一下，类似重新计算子表的位置\n      if (this.row == null) {\n        this.open(event)\n      } else {\n        this.row.id === event.row.id ? this.close() : this.reopen(event)\n      }\n    },\n\n    open(event, level = 0) {\n      if (level > 3) {\n        this.$message.error('打开子表失败')\n        console.warn('【JVxeSubPopover】打开子表失败')\n        return\n      }\n\n      let {row, column, $table, $event: {target}} = event\n      this.row = cloneObject(row)\n      this.column = column\n\n      let className = target.className || ''\n      className = typeof className === 'string' ? className : className.toString()\n\n      // 获取 td 父级\n      let td = getParentNodeByTagName(target, 'td');\n      // 点击的是拖拽排序列，不做处理\n      if (td && td.querySelector('.j-vxe-ds-icons')) {\n        return\n      }\n      // 点击的是expand，不做处理\n      if (className.includes('vxe-table--expand-btn')) {\n        return\n      }\n      // 点击的是checkbox，不做处理\n      if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\n        return\n      }\n      // 点击的是radio，不做处理\n      if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\n        return\n      }\n      let table = $table.$el\n      let tr = getParentNodeByTagName(target, 'tr')\n      if (table && tr) {\n        let clientWidth = table.clientWidth\n        let clientHeight = tr.clientHeight\n        this.$refs.div.style.width = clientWidth + 'px'\n        this.$refs.div.style.height = clientHeight + 'px'\n        this.overlayStyle.width = Number.parseInt((clientWidth - clientWidth * 0.04)) + 'px'\n        this.overlayStyle.maxWidth = this.overlayStyle.width\n        //update-begin-author:taoyan date:20200921 for: 子表弹出位置存在现实位置问题。\n        //let realTable = getParentNodeByTagName(tr, 'table')\n        //let left = realTable.parentNode.scrollLeft\n        let h = event.$event.clientY\n        if(h){\n          h = h-140\n        }\n        let toolbar = this.$refs.div.nextSibling\n        domAlign(this.$refs.div, toolbar, {\n          points: ['tl', 'tl'],\n          offset: [0, h],\n          overflow: {\n            alwaysByViewport: true\n          },\n        })\n        //update-end-author:taoyan date:20200921 for: 子表弹出位置存在现实位置问题。\n        this.$nextTick(() => {\n          this.visible = true\n          this.$nextTick(() => {\n            triggerWindowResizeEvent()\n          })\n        })\n      } else {\n        let num = ++level\n        console.warn('【JVxeSubPopover】table or tr 获取失败，正在进行第 ' + num + '次重试', {event, table, tr})\n        window.setTimeout(() => this.open(event, num), 100)\n      }\n    },\n    close() {\n      if (this.visible) {\n        this.row = null\n        this.visible = false\n      }\n    },\n    reopen(event) {\n      this.close()\n      this.open(event)\n    },\n  },\n}\n",{"version":3,"sources":["JVxeSubPopover.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"JVxeSubPopover.vue","sourceRoot":"src/components/jeecg/JVxeTable/components","sourcesContent":["<template>\r\n  <a-popover :visible=\"visible\" :placement=\"placement\" overlayClassName=\"j-vxe-popover-overlay\" :overlayStyle=\"overlayStyle\">\r\n    <div class=\"j-vxe-popover-title\" slot=\"title\">\r\n      <div>子表</div>\r\n      <div class=\"j-vxe-popover-title-close\" @click=\"close\">\r\n        <a-icon type=\"close\"/>\r\n      </div>\r\n    </div>\r\n    <template slot=\"content\">\r\n      <transition name=\"fade\">\r\n        <slot v-if=\"visible\" name=\"subForm\" :row=\"row\" :column=\"column\"/>\r\n      </transition>\r\n    </template>\r\n\r\n    <div ref=\"div\" class=\"j-vxe-popover-div\"></div>\r\n\r\n  </a-popover>\r\n</template>\r\n<script>\r\n  import domAlign from 'dom-align'\r\n  import { getParentNodeByTagName } from '../utils/vxeUtils'\r\n  import { cloneObject, triggerWindowResizeEvent } from '@/utils/util'\r\n\r\n  export default {\r\n    name: 'JVxeSubPopover',\r\n    data() {\r\n      return {\r\n        visible: false,\r\n        // 当前行\r\n        row: null,\r\n        column: null,\r\n\r\n        overlayStyle: {\r\n          width: null,\r\n          zIndex: 100\r\n        },\r\n        placement: 'bottom'\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n\r\n      toggle(event) {\r\n\r\n        //update-begin-author:taoyan date:20200921 for: 弹出子表时，子表会闪一下，类似重新计算子表的位置\r\n        if(document.body.clientHeight - event.$event.clientY > 350){\r\n          this.placement = 'bottom'\r\n        }else{\r\n          this.placement = 'top'\r\n        }\r\n        //update-end-author:taoyan date:20200921 for: 弹出子表时，子表会闪一下，类似重新计算子表的位置\r\n        if (this.row == null) {\r\n          this.open(event)\r\n        } else {\r\n          this.row.id === event.row.id ? this.close() : this.reopen(event)\r\n        }\r\n      },\r\n\r\n      open(event, level = 0) {\r\n        if (level > 3) {\r\n          this.$message.error('打开子表失败')\r\n          console.warn('【JVxeSubPopover】打开子表失败')\r\n          return\r\n        }\r\n\r\n        let {row, column, $table, $event: {target}} = event\r\n        this.row = cloneObject(row)\r\n        this.column = column\r\n\r\n        let className = target.className || ''\r\n        className = typeof className === 'string' ? className : className.toString()\r\n\r\n        // 获取 td 父级\r\n        let td = getParentNodeByTagName(target, 'td');\r\n        // 点击的是拖拽排序列，不做处理\r\n        if (td && td.querySelector('.j-vxe-ds-icons')) {\r\n          return\r\n        }\r\n        // 点击的是expand，不做处理\r\n        if (className.includes('vxe-table--expand-btn')) {\r\n          return\r\n        }\r\n        // 点击的是checkbox，不做处理\r\n        if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\r\n          return\r\n        }\r\n        // 点击的是radio，不做处理\r\n        if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\r\n          return\r\n        }\r\n        let table = $table.$el\r\n        let tr = getParentNodeByTagName(target, 'tr')\r\n        if (table && tr) {\r\n          let clientWidth = table.clientWidth\r\n          let clientHeight = tr.clientHeight\r\n          this.$refs.div.style.width = clientWidth + 'px'\r\n          this.$refs.div.style.height = clientHeight + 'px'\r\n          this.overlayStyle.width = Number.parseInt((clientWidth - clientWidth * 0.04)) + 'px'\r\n          this.overlayStyle.maxWidth = this.overlayStyle.width\r\n          //update-begin-author:taoyan date:20200921 for: 子表弹出位置存在现实位置问题。\r\n          //let realTable = getParentNodeByTagName(tr, 'table')\r\n          //let left = realTable.parentNode.scrollLeft\r\n          let h = event.$event.clientY\r\n          if(h){\r\n            h = h-140\r\n          }\r\n          let toolbar = this.$refs.div.nextSibling\r\n          domAlign(this.$refs.div, toolbar, {\r\n            points: ['tl', 'tl'],\r\n            offset: [0, h],\r\n            overflow: {\r\n              alwaysByViewport: true\r\n            },\r\n          })\r\n          //update-end-author:taoyan date:20200921 for: 子表弹出位置存在现实位置问题。\r\n          this.$nextTick(() => {\r\n            this.visible = true\r\n            this.$nextTick(() => {\r\n              triggerWindowResizeEvent()\r\n            })\r\n          })\r\n        } else {\r\n          let num = ++level\r\n          console.warn('【JVxeSubPopover】table or tr 获取失败，正在进行第 ' + num + '次重试', {event, table, tr})\r\n          window.setTimeout(() => this.open(event, num), 100)\r\n        }\r\n      },\r\n      close() {\r\n        if (this.visible) {\r\n          this.row = null\r\n          this.visible = false\r\n        }\r\n      },\r\n      reopen(event) {\r\n        this.close()\r\n        this.open(event)\r\n      },\r\n    },\r\n  }\r\n</script>\r\n<style scoped lang=\"less\">\r\n  .j-vxe-popover-title {\r\n    .j-vxe-popover-title-close {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      width: 31px;\r\n      height: 31px;\r\n      text-align: center;\r\n      line-height: 31px;\r\n      color: rgba(0, 0, 0, 0.45);\r\n      cursor: pointer;\r\n      transition: color 300ms;\r\n\r\n      &:hover {\r\n        color: rgba(0, 0, 0, 0.8);\r\n      }\r\n    }\r\n  }\r\n\r\n  .j-vxe-popover-div {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 31px;\r\n    z-index: -1;\r\n  }\r\n</style>\r\n<style lang=\"less\">\r\n  .j-vxe-popover-overlay.ant-popover {\r\n    .ant-popover-title {\r\n      position: relative;\r\n    }\r\n  }\r\n\r\n  .fade-enter-active,\r\n  .fade-leave-active {\r\n    opacity: 1;\r\n    transition: opacity 0.5s;\r\n  }\r\n\r\n  .fade-enter,\r\n  .fade-leave-to {\r\n    opacity: 0;\r\n  }\r\n</style>"]}]}