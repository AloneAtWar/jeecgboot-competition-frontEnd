{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\user\\LoginAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\user\\LoginAccount.vue","mtime":1661074531323},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getAction } from '@/api/manage'\nimport Vue from 'vue'\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'LoginAccount',\n  data(){\n    return {\n      requestCodeSuccess: false,\n      randCodeImage: '',\n      currdatetime: '',\n      loginType: 0,\n      model:{\n        username: 'admin',\n        password: '123456',\n        inputCode: ''\n      },\n      validatorRules:{\n        username: [\n          { required: true, message: '请输入用户名!' },\n          { validator: this.handleUsernameOrEmail }\n        ],\n        password: [{\n          required: true, message: '请输入密码!', validator: 'click'\n        }],\n        inputCode: [{\n          required: true, message: '请输入验证码!'\n        }]\n      }\n\n    }\n  },\n  created() {\n    this.handleChangeCheckCode();\n  },\n  methods:{\n    ...mapActions(['Login']),\n    /**刷新验证码*/\n    handleChangeCheckCode(){\n      this.currdatetime = new Date().getTime();\n      this.model.inputCode = ''\n      getAction(`/sys/randomImage/${this.currdatetime}`).then(res=>{\n        if(res.success){\n          this.randCodeImage = res.result\n          this.requestCodeSuccess=true\n        }else{\n          this.$message.error(res.message)\n          this.requestCodeSuccess=false\n        }\n      }).catch(()=>{\n        this.requestCodeSuccess=false\n      })\n    },\n    // 判断登录类型\n    handleUsernameOrEmail (rule, value, callback) {\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n      if (regex.test(value)) {\n        this.loginType = 0\n      } else {\n        this.loginType = 1\n      }\n      callback()\n    },\n    /**\n     * 验证字段\n     * @param arr\n     * @param callback\n     */\n    validateFields(arr, callback){\n      let promiseArray = []\n      for(let item of arr){\n        let p = new Promise((resolve, reject) => {\n          this.$refs['form'].validateField(item, (err)=>{\n            if(!err){\n              resolve();\n            }else{\n              reject(err);\n            }\n          })\n        });\n        promiseArray.push(p)\n      }\n      Promise.all(promiseArray).then(()=>{\n        callback()\n      }).catch(err=>{\n        callback(err)\n      })\n    },\n    acceptUsername(username){\n      this.model['username'] = username\n    },\n    //账号密码登录\n    handleLogin(rememberMe){\n      this.validateFields([ 'username', 'password', 'inputCode' ], (err)=>{\n        if(!err){\n          let loginParams = {\n            username: this.model.username,\n            password: this.model.password,\n            captcha: this.model.inputCode,\n            checkKey: this.currdatetime,\n            remember_me: rememberMe,\n          }\n          console.log(\"登录参数\", loginParams)\n          this.Login(loginParams).then((res) => {\n            this.$emit('success', res.result)\n          }).catch((err) => {\n            //update-begin-author: taoyan date:20220425 for: 登录页面，当输入验证码错误时，验证码图片要刷新一下，而不是保持旧的验证码图片不变 #41\n            if(err && err.code===412){\n              this.handleChangeCheckCode();\n            }\n            //update-end-author: taoyan date:20220425 for: 登录页面，当输入验证码错误时，验证码图片要刷新一下，而不是保持旧的验证码图片不变 #41\n            this.$emit('fail', err)\n          });\n        }else{\n          this.$emit('validateFail')\n        }\n      })\n    }\n\n\n  }\n\n}\n",{"version":3,"sources":["LoginAccount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"LoginAccount.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n    <div>\r\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\r\n        <a-form-model-item required prop=\"username\">\r\n          <a-input v-model=\"model.username\" size=\"large\" placeholder=\"请输入帐户名 / admin\">\r\n            <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n          </a-input>\r\n        </a-form-model-item>\r\n        <a-form-model-item required prop=\"password\">\r\n          <a-input v-model=\"model.password\" size=\"large\" type=\"password\" autocomplete=\"false\" placeholder=\"请输入密码 / 123456\">\r\n            <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n          </a-input>\r\n        </a-form-model-item>\r\n\r\n        <a-row :gutter=\"0\">\r\n          <a-col :span=\"16\">\r\n            <a-form-model-item required prop=\"inputCode\">\r\n              <a-input v-model=\"model.inputCode\" size=\"large\" type=\"text\" placeholder=\"请输入验证码\">\r\n                <a-icon slot=\"prefix\" type=\"smile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n              </a-input>\r\n            </a-form-model-item>\r\n          </a-col>\r\n          <a-col :span=\"8\" style=\"text-align: right\">\r\n            <img v-if=\"requestCodeSuccess\" style=\"margin-top: 2px;\" :src=\"randCodeImage\" @click=\"handleChangeCheckCode\"/>\r\n            <img v-else style=\"margin-top: 2px;\" src=\"../../assets/checkcode.png\" @click=\"handleChangeCheckCode\"/>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form-model>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n  import Vue from 'vue'\r\n  import { mapActions } from 'vuex'\r\n\r\n  export default {\r\n    name: 'LoginAccount',\r\n    data(){\r\n      return {\r\n        requestCodeSuccess: false,\r\n        randCodeImage: '',\r\n        currdatetime: '',\r\n        loginType: 0,\r\n        model:{\r\n          username: 'admin',\r\n          password: '123456',\r\n          inputCode: ''\r\n        },\r\n        validatorRules:{\r\n          username: [\r\n            { required: true, message: '请输入用户名!' },\r\n            { validator: this.handleUsernameOrEmail }\r\n          ],\r\n          password: [{\r\n            required: true, message: '请输入密码!', validator: 'click'\r\n          }],\r\n          inputCode: [{\r\n            required: true, message: '请输入验证码!'\r\n          }]\r\n        }\r\n\r\n      }\r\n    },\r\n    created() {\r\n      this.handleChangeCheckCode();\r\n    },\r\n    methods:{\r\n      ...mapActions(['Login']),\r\n      /**刷新验证码*/\r\n      handleChangeCheckCode(){\r\n        this.currdatetime = new Date().getTime();\r\n        this.model.inputCode = ''\r\n        getAction(`/sys/randomImage/${this.currdatetime}`).then(res=>{\r\n          if(res.success){\r\n            this.randCodeImage = res.result\r\n            this.requestCodeSuccess=true\r\n          }else{\r\n            this.$message.error(res.message)\r\n            this.requestCodeSuccess=false\r\n          }\r\n        }).catch(()=>{\r\n          this.requestCodeSuccess=false\r\n        })\r\n      },\r\n      // 判断登录类型\r\n      handleUsernameOrEmail (rule, value, callback) {\r\n        const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\r\n        if (regex.test(value)) {\r\n          this.loginType = 0\r\n        } else {\r\n          this.loginType = 1\r\n        }\r\n        callback()\r\n      },\r\n      /**\r\n       * 验证字段\r\n       * @param arr\r\n       * @param callback\r\n       */\r\n      validateFields(arr, callback){\r\n        let promiseArray = []\r\n        for(let item of arr){\r\n          let p = new Promise((resolve, reject) => {\r\n            this.$refs['form'].validateField(item, (err)=>{\r\n              if(!err){\r\n                resolve();\r\n              }else{\r\n                reject(err);\r\n              }\r\n            })\r\n          });\r\n          promiseArray.push(p)\r\n        }\r\n        Promise.all(promiseArray).then(()=>{\r\n          callback()\r\n        }).catch(err=>{\r\n          callback(err)\r\n        })\r\n      },\r\n      acceptUsername(username){\r\n        this.model['username'] = username\r\n      },\r\n      //账号密码登录\r\n      handleLogin(rememberMe){\r\n        this.validateFields([ 'username', 'password', 'inputCode' ], (err)=>{\r\n          if(!err){\r\n            let loginParams = {\r\n              username: this.model.username,\r\n              password: this.model.password,\r\n              captcha: this.model.inputCode,\r\n              checkKey: this.currdatetime,\r\n              remember_me: rememberMe,\r\n            }\r\n            console.log(\"登录参数\", loginParams)\r\n            this.Login(loginParams).then((res) => {\r\n              this.$emit('success', res.result)\r\n            }).catch((err) => {\r\n              //update-begin-author: taoyan date:20220425 for: 登录页面，当输入验证码错误时，验证码图片要刷新一下，而不是保持旧的验证码图片不变 #41\r\n              if(err && err.code===412){\r\n                this.handleChangeCheckCode();\r\n              }\r\n              //update-end-author: taoyan date:20220425 for: 登录页面，当输入验证码错误时，验证码图片要刷新一下，而不是保持旧的验证码图片不变 #41\r\n              this.$emit('fail', err)\r\n            });\r\n          }else{\r\n            this.$emit('validateFail')\r\n          }\r\n        })\r\n      }\r\n\r\n\r\n    }\r\n\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}