{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\competition\\vue\\modules\\CompetitionUserForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\competition\\vue\\modules\\CompetitionUserForm.vue","mtime":1661068762956},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { httpAction, getAction } from '@/api/manage'\nimport { validateDuplicateValue } from '@/utils/util'\n\nexport default {\n  name: 'CompetitionUserForm',\n  components: {\n  },\n  props: {\n    //表单禁用\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data () {\n    return {\n      model:{\n       },\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      confirmLoading: false,\n      validatorRules: {\n         name: [\n            { required: false},\n            { validator: (rule, value, callback) => validateDuplicateValue('competition_user', 'name', value, this.model.id, callback)},\n         ],\n      },\n      url: {\n        add: \"/competition/competitionUser/add\",\n        edit: \"/competition/competitionUser/edit\",\n        queryById: \"/competition/competitionUser/queryById\"\n      }\n    }\n  },\n  computed: {\n    formDisabled(){\n      return this.disabled\n    },\n  },\n  created () {\n     //备份model原始值\n    this.modelDefault = JSON.parse(JSON.stringify(this.model));\n  },\n  methods: {\n    add () {\n      this.edit(this.modelDefault);\n    },\n    edit (record) {\n      this.model = Object.assign({}, record);\n      this.visible = true;\n    },\n    submitForm () {\n      const that = this;\n      // 触发表单验证\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          httpAction(httpurl,this.model,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n          })\n        }\n       \n      })\n    },\n  }\n}\n",{"version":3,"sources":["CompetitionUserForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CompetitionUserForm.vue","sourceRoot":"src/views/competition/vue/modules","sourcesContent":["<template>\r\n  <a-spin :spinning=\"confirmLoading\">\r\n    <j-form-container :disabled=\"formDisabled\">\r\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\" slot=\"detail\">\r\n        <a-row>\r\n          <a-col :span=\"24\">\r\n            <a-form-model-item label=\"用户名\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"name\">\r\n              <a-input v-model=\"model.name\" placeholder=\"请输入用户名\"  ></a-input>\r\n            </a-form-model-item>\r\n          </a-col>\r\n          <a-col :span=\"24\">\r\n            <a-form-model-item label=\"密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" prop=\"password\">\r\n              <a-input-password v-model=\"model.password\" placeholder=\"请输入密码\" />\r\n            </a-form-model-item>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form-model>\r\n    </j-form-container>\r\n  </a-spin>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { httpAction, getAction } from '@/api/manage'\r\n  import { validateDuplicateValue } from '@/utils/util'\r\n\r\n  export default {\r\n    name: 'CompetitionUserForm',\r\n    components: {\r\n    },\r\n    props: {\r\n      //表单禁用\r\n      disabled: {\r\n        type: Boolean,\r\n        default: false,\r\n        required: false\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        model:{\r\n         },\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        confirmLoading: false,\r\n        validatorRules: {\r\n           name: [\r\n              { required: false},\r\n              { validator: (rule, value, callback) => validateDuplicateValue('competition_user', 'name', value, this.model.id, callback)},\r\n           ],\r\n        },\r\n        url: {\r\n          add: \"/competition/competitionUser/add\",\r\n          edit: \"/competition/competitionUser/edit\",\r\n          queryById: \"/competition/competitionUser/queryById\"\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      formDisabled(){\r\n        return this.disabled\r\n      },\r\n    },\r\n    created () {\r\n       //备份model原始值\r\n      this.modelDefault = JSON.parse(JSON.stringify(this.model));\r\n    },\r\n    methods: {\r\n      add () {\r\n        this.edit(this.modelDefault);\r\n      },\r\n      edit (record) {\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n      },\r\n      submitForm () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.$refs.form.validate(valid => {\r\n          if (valid) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(!this.model.id){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n               method = 'put';\r\n            }\r\n            httpAction(httpurl,this.model,method).then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n            })\r\n          }\r\n         \r\n        })\r\n      },\r\n    }\r\n  }\r\n</script>"]}]}