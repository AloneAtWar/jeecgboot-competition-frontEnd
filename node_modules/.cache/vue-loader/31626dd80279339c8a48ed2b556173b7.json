{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectMultiUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectMultiUser.vue","mtime":1661074531206},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport JDate from '@comp/jeecg/JDate'\nimport JSelectBizComponent from './JSelectBizComponent'\n\nexport default {\n  name: 'JSelectMultiUser',\n  components: {JDate, JSelectBizComponent},\n  props: {\n    value: null, // any type\n    queryConfig: {\n      type: Array,\n      default: () => []\n    },\n  },\n  data() {\n    return {\n      url: { list: '/sys/user/list' },\n      columns: [\n        { title: '姓名', align: 'center', width: '25%', widthRight: '70%', dataIndex: 'realname' },\n        { title: '账号', align: 'center', width: '25%', dataIndex: 'username' },\n        { title: '电话', align: 'center', width: '20%', dataIndex: 'phone' },\n        { title: '出生日期', align: 'center', width: '20%', dataIndex: 'birthday' }\n      ],\n      // 定义在这里的参数都是可以在外部传递覆盖的，可以更灵活的定制化使用的组件\n      default: {\n        name: '用户',\n        width: 1200,\n        displayKey: 'realname',\n        returnKeys: ['id', 'username'],\n        queryParamText: '账号',\n      },\n      // 多条件查询配置\n      queryConfigDefault: [\n        {\n          key: 'sex',\n          label: '性别',\n          // 如果包含 dictCode，那么就会显示成下拉框\n          dictCode: 'sex',\n        },\n        {\n          key: 'birthday',\n          label: '生日',\n          placeholder: '请选择出生日期',\n          // 如果想要使用局部注册的组件，就必须要使用箭头函数\n          customRender: ({key, queryParam, options}) => {\n            return <j-date {...options} vModel={queryParam[key]} style=\"width:180px;\"/>\n          },\n        },\n      ],\n    }\n  },\n  computed: {\n    attrs() {\n      return Object.assign(this.default, this.$attrs, {\n        queryConfig: this.queryConfigDefault.concat(this.queryConfig)\n      })\n    }\n  }\n}\n",{"version":3,"sources":["JSelectMultiUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JSelectMultiUser.vue","sourceRoot":"src/components/jeecgbiz","sourcesContent":["<template>\r\n  <!-- 定义在这里的参数都是不可在外部覆盖的，防止出现问题 -->\r\n  <j-select-biz-component\r\n    :value=\"value\"\r\n    :ellipsisLength=\"25\"\r\n    :listUrl=\"url.list\"\r\n    :columns=\"columns\"\r\n    v-on=\"$listeners\"\r\n    v-bind=\"attrs\"\r\n  />\r\n</template>\r\n\r\n<script>\r\n  import JDate from '@comp/jeecg/JDate'\r\n  import JSelectBizComponent from './JSelectBizComponent'\r\n\r\n  export default {\r\n    name: 'JSelectMultiUser',\r\n    components: {JDate, JSelectBizComponent},\r\n    props: {\r\n      value: null, // any type\r\n      queryConfig: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        url: { list: '/sys/user/list' },\r\n        columns: [\r\n          { title: '姓名', align: 'center', width: '25%', widthRight: '70%', dataIndex: 'realname' },\r\n          { title: '账号', align: 'center', width: '25%', dataIndex: 'username' },\r\n          { title: '电话', align: 'center', width: '20%', dataIndex: 'phone' },\r\n          { title: '出生日期', align: 'center', width: '20%', dataIndex: 'birthday' }\r\n        ],\r\n        // 定义在这里的参数都是可以在外部传递覆盖的，可以更灵活的定制化使用的组件\r\n        default: {\r\n          name: '用户',\r\n          width: 1200,\r\n          displayKey: 'realname',\r\n          returnKeys: ['id', 'username'],\r\n          queryParamText: '账号',\r\n        },\r\n        // 多条件查询配置\r\n        queryConfigDefault: [\r\n          {\r\n            key: 'sex',\r\n            label: '性别',\r\n            // 如果包含 dictCode，那么就会显示成下拉框\r\n            dictCode: 'sex',\r\n          },\r\n          {\r\n            key: 'birthday',\r\n            label: '生日',\r\n            placeholder: '请选择出生日期',\r\n            // 如果想要使用局部注册的组件，就必须要使用箭头函数\r\n            customRender: ({key, queryParam, options}) => {\r\n              return <j-date {...options} vModel={queryParam[key]} style=\"width:180px;\"/>\r\n            },\r\n          },\r\n        ],\r\n      }\r\n    },\r\n    computed: {\r\n      attrs() {\r\n        return Object.assign(this.default, this.$attrs, {\r\n          queryConfig: this.queryConfigDefault.concat(this.queryConfig)\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>"]}]}