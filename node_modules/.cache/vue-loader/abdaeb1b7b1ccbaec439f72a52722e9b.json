{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JEasyCron\\EasyCron.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JEasyCron\\EasyCron.vue","mtime":1661074531167},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport SecondUi from './tabs/second'\r\nimport MinuteUi from './tabs/minute'\r\nimport HourUi from './tabs/hour'\r\nimport DayUi from './tabs/day'\r\nimport WeekUi from './tabs/week'\r\nimport MonthUi from './tabs/month'\r\nimport YearUi from './tabs/year'\r\nimport CronParser from 'cron-parser'\r\nimport dateFormat from './format-date'\r\nimport { simpleDebounce } from '@/utils/util'\r\nimport ACol from 'ant-design-vue/es/grid/Col'\r\n\r\nexport default {\r\n  name: 'easy-cron',\r\n  components: {\r\n    ACol,\r\n    SecondUi,\r\n    MinuteUi,\r\n    HourUi,\r\n    DayUi,\r\n    WeekUi,\r\n    MonthUi,\r\n    YearUi\r\n  },\r\n  props: {\r\n    cronValue: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    hideSecond: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    hideYear: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    remote: {\r\n      type: Function,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      curtab: this.hideSecond ? 'minute' : 'second',\r\n      second: '*',\r\n      minute: '*',\r\n      hour: '*',\r\n      day: '*',\r\n      month: '*',\r\n      week: '?',\r\n      year: '*',\r\n      inputValues: {second: '', minute: '', hour: '', day: '', month: '', week: '', year: '', cron: ''},\r\n      preTimeList: '执行预览，会忽略年份参数',\r\n    }\r\n  },\r\n  computed: {\r\n    cronValue_c() {\r\n      let result = []\r\n      if (!this.hideSecond) result.push(this.second ? this.second : '*')\r\n      result.push(this.minute ? this.minute : '*')\r\n      result.push(this.hour ? this.hour : '*')\r\n      result.push(this.day ? this.day : '*')\r\n      result.push(this.month ? this.month : '*')\r\n      result.push(this.week ? this.week : '?')\r\n      if (!this.hideYear && !this.hideSecond) result.push(this.year ? this.year : '*')\r\n      return result.join(' ')\r\n    },\r\n    cronValue_c2() {\r\n      const v = this.cronValue_c\r\n      if (this.hideYear || this.hideSecond) return v\r\n      const vs = v.split(' ')\r\n      if (vs.length >= 6) {\r\n        // 将 Quartz 星期 的规则转换为 CronParser 的规则\r\n        vs[5] = this.convertQuartzWeekToCParser(vs[5])\r\n      }\r\n      return vs.slice(0, vs.length - 1).join(' ')\r\n    },\r\n  },\r\n  watch: {\r\n    cronValue(newVal, oldVal) {\r\n      if (newVal === this.cronValue_c) {\r\n        // console.info('same cron value: ' + newVal)\r\n        return\r\n      }\r\n      this.formatValue()\r\n    },\r\n    cronValue_c(newVal, oldVal) {\r\n      this.calTriggerList()\r\n      this.$emit('change', newVal)\r\n      this.assignInput()\r\n    },\r\n    minute() {\r\n      if (this.second === '*') {\r\n        this.second = '0'\r\n      }\r\n    },\r\n    hour() {\r\n      if (this.minute === '*') {\r\n        this.minute = '0'\r\n      }\r\n    },\r\n    day(day) {\r\n      if (day !== '?' && this.hour === '*') {\r\n        this.hour = '0'\r\n      }\r\n    },\r\n    week(week) {\r\n      if (week !== '?' && this.hour === '*') {\r\n        this.hour = '0'\r\n      }\r\n    },\r\n    month() {\r\n      if (this.day === '?' && this.week === '*') {\r\n        this.week = '1'\r\n      } else if (this.week === '?' && this.day === '*') {\r\n        this.day = '1'\r\n      }\r\n    },\r\n    year() {\r\n      if (this.month === '*') {\r\n        this.month = '1'\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.formatValue()\r\n    this.$nextTick(() => {\r\n      this.calTriggerListInner()\r\n    })\r\n  },\r\n  methods: {\r\n    assignInput() {\r\n      Object.assign(this.inputValues, {\r\n        second: this.second,\r\n        minute: this.minute,\r\n        hour: this.hour,\r\n        day: this.day,\r\n        month: this.month,\r\n        week: this.week,\r\n        year: this.year,\r\n        cron: this.cronValue_c,\r\n      })\r\n    },\r\n    formatValue() {\r\n      if (!this.cronValue) return\r\n      const values = this.cronValue.split(' ').filter(item => !!item)\r\n      if (!values || values.length <= 0) return\r\n      let i = 0\r\n      if (!this.hideSecond) this.second = values[i++]\r\n      if (values.length > i) this.minute = values[i++]\r\n      if (values.length > i) this.hour = values[i++]\r\n      if (values.length > i) this.day = values[i++]\r\n      if (values.length > i) this.month = values[i++]\r\n      if (values.length > i) this.week = values[i++]\r\n      if (values.length > i) this.year = values[i]\r\n      this.assignInput()\r\n    },\r\n    // 将 Quartz 星期 的规则转换为 CronParser 的规则：\r\n    // Quartz 的规则：1 = 周日，2 = 周一，3 = 周二，4 = 周三，5 = 周四，6 = 周五，7 = 周六\r\n    // CronParser 的规则： 0 = 周日，1 = 周一，2 = 周二，3 = 周三，4 = 周四，5 = 周五，6 = 周六，7 = 周日\r\n    convertQuartzWeekToCParser(week) {\r\n      let convert = (v) => {\r\n        if (v === '0') {\r\n          return '1'\r\n        }\r\n        if (v === '1') {\r\n          return '0'\r\n        }\r\n        return (Number.parseInt(v) - 1).toString()\r\n      }\r\n      // 匹配示例 1-7 or 1/7\r\n      let patten1 = /^([0-7])([-/])([0-7])$/\r\n      // 匹配示例 1,4,7\r\n      let patten2 = /^([0-7])(,[0-7])+$/\r\n      if (/^[0-7]$/.test(week)) {\r\n        return convert(week)\r\n      } else if (patten1.test(week)) {\r\n        return week.replace(patten1, ($0, before, separator, after) => {\r\n          if (separator === '/') {\r\n            return convert(before) + separator + after\r\n          } else {\r\n            return convert(before) + separator + convert(after)\r\n          }\r\n        })\r\n      } else if (patten2.test(week)) {\r\n        return week.split(',').map(v => convert(v)).join(',')\r\n      }\r\n      return week\r\n    },\r\n    calTriggerList: simpleDebounce(function () {\r\n      this.calTriggerListInner()\r\n    }, 500),\r\n    calTriggerListInner() {\r\n      // 设置了回调函数\r\n      if (this.remote) {\r\n        this.remote(this.cronValue_c, +new Date(), v => {\r\n          this.preTimeList = v\r\n        })\r\n        return\r\n      }\r\n      const format = 'yyyy-MM-dd hh:mm:ss'\r\n      const options = {\r\n        currentDate: dateFormat(new Date(), format)\r\n      }\r\n      const iter = CronParser.parseExpression(this.cronValue_c2, options)\r\n      const result = []\r\n      for (let i = 1; i <= 10; i++) {\r\n        result.push(dateFormat(new Date(iter.next()), format))\r\n      }\r\n      this.preTimeList = result.length > 0 ? result.join('\\n') : '无执行时间'\r\n    },\r\n    onInputBlur(){\r\n      this.second = this.inputValues.second\r\n      this.minute = this.inputValues.minute\r\n      this.hour = this.inputValues.hour\r\n      this.day = this.inputValues.day\r\n      this.month = this.inputValues.month\r\n      this.week = this.inputValues.week\r\n      this.year = this.inputValues.year\r\n    },\r\n    onInputCronBlur(event){\r\n      this.$emit('change', event.target.value)\r\n    },\r\n  },\r\n  model: {\r\n    prop: 'cronValue',\r\n    event: 'change'\r\n  },\r\n}\r\n",{"version":3,"sources":["EasyCron.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"EasyCron.vue","sourceRoot":"src/components/jeecg/JEasyCron","sourcesContent":["<template>\r\n  <div class=\"j-easy-cron\">\r\n    <div class=\"content\">\r\n      <div>\r\n        <a-tabs size=\"small\" v-model=\"curtab\">\r\n          <a-tab-pane tab=\"秒\" key=\"second\" v-if=\"!hideSecond\">\r\n            <second-ui v-model=\"second\" :disabled=\"disabled\"></second-ui>\r\n          </a-tab-pane>\r\n          <a-tab-pane tab=\"分\" key=\"minute\">\r\n            <minute-ui v-model=\"minute\" :disabled=\"disabled\"></minute-ui>\r\n          </a-tab-pane>\r\n          <a-tab-pane tab=\"时\" key=\"hour\">\r\n            <hour-ui v-model=\"hour\" :disabled=\"disabled\"></hour-ui>\r\n          </a-tab-pane>\r\n          <a-tab-pane tab=\"日\" key=\"day\">\r\n            <day-ui v-model=\"day\" :week=\"week\" :disabled=\"disabled\"></day-ui>\r\n          </a-tab-pane>\r\n          <a-tab-pane tab=\"月\" key=\"month\">\r\n            <month-ui v-model=\"month\" :disabled=\"disabled\"></month-ui>\r\n          </a-tab-pane>\r\n          <a-tab-pane tab=\"周\" key=\"week\">\r\n            <week-ui v-model=\"week\" :day=\"day\" :disabled=\"disabled\"></week-ui>\r\n          </a-tab-pane>\r\n          <a-tab-pane tab=\"年\" key=\"year\" v-if=\"!hideYear && !hideSecond\">\r\n            <year-ui v-model=\"year\" :disabled=\"disabled\"></year-ui>\r\n          </a-tab-pane>\r\n        </a-tabs>\r\n      </div>\r\n      <a-divider/>\r\n      <!-- 执行时间预览 -->\r\n      <a-row :gutter=\"8\">\r\n        <a-col :span=\"18\" style=\"margin-top: 22px;\">\r\n          <a-row :gutter=\"8\">\r\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\r\n              <a-input addon-before=\"秒\" v-model=\"inputValues.second\" @blur=\"onInputBlur\"/>\r\n            </a-col>\r\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\r\n              <a-input addon-before=\"分\" v-model=\"inputValues.minute\" @blur=\"onInputBlur\"/>\r\n            </a-col>\r\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\r\n              <a-input addon-before=\"时\" v-model=\"inputValues.hour\" @blur=\"onInputBlur\"/>\r\n            </a-col>\r\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\r\n              <a-input addon-before=\"日\" v-model=\"inputValues.day\" @blur=\"onInputBlur\"/>\r\n            </a-col>\r\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\r\n              <a-input addon-before=\"月\" v-model=\"inputValues.month\" @blur=\"onInputBlur\"/>\r\n            </a-col>\r\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\r\n              <a-input addon-before=\"周\" v-model=\"inputValues.week\" @blur=\"onInputBlur\"/>\r\n            </a-col>\r\n            <a-col :span=\"8\" style=\"margin-bottom: 8px;\">\r\n              <a-input addon-before=\"年\" v-model=\"inputValues.year\" @blur=\"onInputBlur\"/>\r\n            </a-col>\r\n            <a-col :span=\"16\" style=\"margin-bottom: 8px;\">\r\n              <a-input addon-before=\"Cron\" v-model=\"inputValues.cron\" @blur=\"onInputCronBlur\"/>\r\n            </a-col>\r\n          </a-row>\r\n        </a-col>\r\n        <a-col :span=\"6\">\r\n\r\n          <div>近十次执行时间（不含年）</div>\r\n          <a-textarea type=\"textarea\" :value=\"preTimeList\" :rows=\"5\"/>\r\n        </a-col>\r\n      </a-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SecondUi from './tabs/second'\r\nimport MinuteUi from './tabs/minute'\r\nimport HourUi from './tabs/hour'\r\nimport DayUi from './tabs/day'\r\nimport WeekUi from './tabs/week'\r\nimport MonthUi from './tabs/month'\r\nimport YearUi from './tabs/year'\r\nimport CronParser from 'cron-parser'\r\nimport dateFormat from './format-date'\r\nimport { simpleDebounce } from '@/utils/util'\r\nimport ACol from 'ant-design-vue/es/grid/Col'\r\n\r\nexport default {\r\n  name: 'easy-cron',\r\n  components: {\r\n    ACol,\r\n    SecondUi,\r\n    MinuteUi,\r\n    HourUi,\r\n    DayUi,\r\n    WeekUi,\r\n    MonthUi,\r\n    YearUi\r\n  },\r\n  props: {\r\n    cronValue: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    hideSecond: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    hideYear: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    remote: {\r\n      type: Function,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      curtab: this.hideSecond ? 'minute' : 'second',\r\n      second: '*',\r\n      minute: '*',\r\n      hour: '*',\r\n      day: '*',\r\n      month: '*',\r\n      week: '?',\r\n      year: '*',\r\n      inputValues: {second: '', minute: '', hour: '', day: '', month: '', week: '', year: '', cron: ''},\r\n      preTimeList: '执行预览，会忽略年份参数',\r\n    }\r\n  },\r\n  computed: {\r\n    cronValue_c() {\r\n      let result = []\r\n      if (!this.hideSecond) result.push(this.second ? this.second : '*')\r\n      result.push(this.minute ? this.minute : '*')\r\n      result.push(this.hour ? this.hour : '*')\r\n      result.push(this.day ? this.day : '*')\r\n      result.push(this.month ? this.month : '*')\r\n      result.push(this.week ? this.week : '?')\r\n      if (!this.hideYear && !this.hideSecond) result.push(this.year ? this.year : '*')\r\n      return result.join(' ')\r\n    },\r\n    cronValue_c2() {\r\n      const v = this.cronValue_c\r\n      if (this.hideYear || this.hideSecond) return v\r\n      const vs = v.split(' ')\r\n      if (vs.length >= 6) {\r\n        // 将 Quartz 星期 的规则转换为 CronParser 的规则\r\n        vs[5] = this.convertQuartzWeekToCParser(vs[5])\r\n      }\r\n      return vs.slice(0, vs.length - 1).join(' ')\r\n    },\r\n  },\r\n  watch: {\r\n    cronValue(newVal, oldVal) {\r\n      if (newVal === this.cronValue_c) {\r\n        // console.info('same cron value: ' + newVal)\r\n        return\r\n      }\r\n      this.formatValue()\r\n    },\r\n    cronValue_c(newVal, oldVal) {\r\n      this.calTriggerList()\r\n      this.$emit('change', newVal)\r\n      this.assignInput()\r\n    },\r\n    minute() {\r\n      if (this.second === '*') {\r\n        this.second = '0'\r\n      }\r\n    },\r\n    hour() {\r\n      if (this.minute === '*') {\r\n        this.minute = '0'\r\n      }\r\n    },\r\n    day(day) {\r\n      if (day !== '?' && this.hour === '*') {\r\n        this.hour = '0'\r\n      }\r\n    },\r\n    week(week) {\r\n      if (week !== '?' && this.hour === '*') {\r\n        this.hour = '0'\r\n      }\r\n    },\r\n    month() {\r\n      if (this.day === '?' && this.week === '*') {\r\n        this.week = '1'\r\n      } else if (this.week === '?' && this.day === '*') {\r\n        this.day = '1'\r\n      }\r\n    },\r\n    year() {\r\n      if (this.month === '*') {\r\n        this.month = '1'\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.formatValue()\r\n    this.$nextTick(() => {\r\n      this.calTriggerListInner()\r\n    })\r\n  },\r\n  methods: {\r\n    assignInput() {\r\n      Object.assign(this.inputValues, {\r\n        second: this.second,\r\n        minute: this.minute,\r\n        hour: this.hour,\r\n        day: this.day,\r\n        month: this.month,\r\n        week: this.week,\r\n        year: this.year,\r\n        cron: this.cronValue_c,\r\n      })\r\n    },\r\n    formatValue() {\r\n      if (!this.cronValue) return\r\n      const values = this.cronValue.split(' ').filter(item => !!item)\r\n      if (!values || values.length <= 0) return\r\n      let i = 0\r\n      if (!this.hideSecond) this.second = values[i++]\r\n      if (values.length > i) this.minute = values[i++]\r\n      if (values.length > i) this.hour = values[i++]\r\n      if (values.length > i) this.day = values[i++]\r\n      if (values.length > i) this.month = values[i++]\r\n      if (values.length > i) this.week = values[i++]\r\n      if (values.length > i) this.year = values[i]\r\n      this.assignInput()\r\n    },\r\n    // 将 Quartz 星期 的规则转换为 CronParser 的规则：\r\n    // Quartz 的规则：1 = 周日，2 = 周一，3 = 周二，4 = 周三，5 = 周四，6 = 周五，7 = 周六\r\n    // CronParser 的规则： 0 = 周日，1 = 周一，2 = 周二，3 = 周三，4 = 周四，5 = 周五，6 = 周六，7 = 周日\r\n    convertQuartzWeekToCParser(week) {\r\n      let convert = (v) => {\r\n        if (v === '0') {\r\n          return '1'\r\n        }\r\n        if (v === '1') {\r\n          return '0'\r\n        }\r\n        return (Number.parseInt(v) - 1).toString()\r\n      }\r\n      // 匹配示例 1-7 or 1/7\r\n      let patten1 = /^([0-7])([-/])([0-7])$/\r\n      // 匹配示例 1,4,7\r\n      let patten2 = /^([0-7])(,[0-7])+$/\r\n      if (/^[0-7]$/.test(week)) {\r\n        return convert(week)\r\n      } else if (patten1.test(week)) {\r\n        return week.replace(patten1, ($0, before, separator, after) => {\r\n          if (separator === '/') {\r\n            return convert(before) + separator + after\r\n          } else {\r\n            return convert(before) + separator + convert(after)\r\n          }\r\n        })\r\n      } else if (patten2.test(week)) {\r\n        return week.split(',').map(v => convert(v)).join(',')\r\n      }\r\n      return week\r\n    },\r\n    calTriggerList: simpleDebounce(function () {\r\n      this.calTriggerListInner()\r\n    }, 500),\r\n    calTriggerListInner() {\r\n      // 设置了回调函数\r\n      if (this.remote) {\r\n        this.remote(this.cronValue_c, +new Date(), v => {\r\n          this.preTimeList = v\r\n        })\r\n        return\r\n      }\r\n      const format = 'yyyy-MM-dd hh:mm:ss'\r\n      const options = {\r\n        currentDate: dateFormat(new Date(), format)\r\n      }\r\n      const iter = CronParser.parseExpression(this.cronValue_c2, options)\r\n      const result = []\r\n      for (let i = 1; i <= 10; i++) {\r\n        result.push(dateFormat(new Date(iter.next()), format))\r\n      }\r\n      this.preTimeList = result.length > 0 ? result.join('\\n') : '无执行时间'\r\n    },\r\n    onInputBlur(){\r\n      this.second = this.inputValues.second\r\n      this.minute = this.inputValues.minute\r\n      this.hour = this.inputValues.hour\r\n      this.day = this.inputValues.day\r\n      this.month = this.inputValues.month\r\n      this.week = this.inputValues.week\r\n      this.year = this.inputValues.year\r\n    },\r\n    onInputCronBlur(event){\r\n      this.$emit('change', event.target.value)\r\n    },\r\n  },\r\n  model: {\r\n    prop: 'cronValue',\r\n    event: 'change'\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .j-easy-cron {\r\n\r\n    /deep/ .content {\r\n      .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n        margin-left: 0;\r\n      }\r\n    }\r\n\r\n  }\r\n</style>\r\n"]}]}