{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizComponentModal.vue?vue&type=style&index=0&id=790d3a66&lang=less&scoped=true&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizComponentModal.vue","mtime":1661074531204},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\css-loader\\index.js","mtime":1657458574837},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1657458571653},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\postcss-loader\\src\\index.js","mtime":1657458638287},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\less-loader\\dist\\cjs.js","mtime":1657458655181},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.full-form-item {\n  display: flex;\n  margin-right: 0;\n\n  /deep/ .ant-form-item-control-wrapper {\n    flex: 1 1;\n    display: inline-block;\n  }\n}\n\n.j-inline-form {\n  /deep/ .ant-form-item {\n    margin-bottom: 12px;\n  }\n\n  /deep/ .ant-form-item-label {\n    line-height: 32px;\n    width: auto;\n  }\n\n  /deep/ .ant-form-item-control {\n    height: 32px;\n    line-height: 32px;\n  }\n}\n",{"version":3,"sources":["JSelectBizComponentModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"JSelectBizComponentModal.vue","sourceRoot":"src/components/jeecgbiz/JSelectBizComponent","sourcesContent":["<template>\r\n  <j-modal\r\n    centered\r\n    :title=\"name + '选择'\"\r\n    :width=\"width\"\r\n    :visible=\"visible\"\r\n    switchFullscreen\r\n    @ok=\"handleOk\"\r\n    @cancel=\"close\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-row :gutter=\"18\">\r\n      <a-col :span=\"16\">\r\n        <!-- 查询区域 -->\r\n        <a-form layout=\"inline\" class=\"j-inline-form\">\r\n          <!-- 固定条件 -->\r\n          <a-form-item :label=\"(queryParamText||name)\">\r\n            <a-input v-model=\"queryParam[queryParamCode||valueKey]\" :placeholder=\"'请输入' + (queryParamText||name)\" @pressEnter=\"searchQuery\"/>\r\n          </a-form-item>\r\n          <!-- 动态生成的查询条件 -->\r\n          <j-select-biz-query-item v-if=\"queryConfig.length>0\" v-show=\"showMoreQueryItems\" :queryParam=\"queryParam\" :queryConfig=\"queryConfig\" @pressEnter=\"searchQuery\"/>\r\n          <!-- 按钮 -->\r\n          <a-button type=\"primary\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\r\n          <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n          <a v-if=\"queryConfig.length>0\" @click=\"showMoreQueryItems=!showMoreQueryItems\" style=\"margin-left: 8px\">\r\n            {{ showMoreQueryItems ? '收起' : '展开' }}\r\n            <a-icon :type=\"showMoreQueryItems ? 'up' : 'down'\"/>\r\n          </a>\r\n        </a-form>\r\n\r\n        <a-table\r\n          size=\"middle\"\r\n          bordered\r\n          :rowKey=\"rowKey\"\r\n          :columns=\"innerColumns\"\r\n          :dataSource=\"dataSource\"\r\n          :pagination=\"ipagination\"\r\n          :loading=\"loading\"\r\n          :scroll=\"{ y: 240 }\"\r\n          :rowSelection=\"{selectedRowKeys, onChange: onSelectChange, type: multiple ? 'checkbox':'radio'}\"\r\n          :customRow=\"customRowFn\"\r\n          @change=\"handleTableChange\">\r\n        </a-table>\r\n\r\n      </a-col>\r\n      <a-col :span=\"8\">\r\n        <a-card :title=\"'已选' + name\" :bordered=\"false\" :head-style=\"{padding:0}\" :body-style=\"{padding:0}\">\r\n\r\n          <a-table size=\"middle\" :rowKey=\"rowKey\" bordered v-bind=\"selectedTable\">\r\n              <span slot=\"action\" slot-scope=\"text, record, index\">\r\n                <a @click=\"handleDeleteSelected(record, index)\">删除</a>\r\n              </span>\r\n          </a-table>\r\n\r\n        </a-card>\r\n      </a-col>\r\n    </a-row>\r\n  </j-modal>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n  import Ellipsis from '@/components/Ellipsis'\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n  import { pushIfNotExist } from '@/utils/util'\r\n  import JSelectBizQueryItem from './JSelectBizQueryItem'\r\n  import {cloneDeep} from 'lodash'\r\n\r\n  export default {\r\n    name: 'JSelectBizComponentModal',\r\n    mixins: [JeecgListMixin],\r\n    components: {Ellipsis, JSelectBizQueryItem},\r\n    props: {\r\n      value: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n      visible: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      valueKey: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      multiple: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      width: {\r\n        type: Number,\r\n        default: 900\r\n      },\r\n\r\n      name: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      listUrl: {\r\n        type: String,\r\n        required: true,\r\n        default: ''\r\n      },\r\n      // 根据 value 获取显示文本的地址，例如存的是 username，可以通过该地址获取到 realname\r\n      valueUrl: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      displayKey: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      columns: {\r\n        type: Array,\r\n        required: true,\r\n        default: () => []\r\n      },\r\n      // 查询条件Code\r\n      queryParamCode: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      // 查询条件文字\r\n      queryParamText: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      // 查询配置\r\n      queryConfig: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n      rowKey: {\r\n        type: String,\r\n        default: 'id'\r\n      },\r\n      // 过长裁剪长度，设置为 -1 代表不裁剪\r\n      ellipsisLength: {\r\n        type: Number,\r\n        default: 12\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        innerValue: [],\r\n        // 已选择列表\r\n        selectedTable: {\r\n          pagination: false,\r\n          scroll: { y: 240 },\r\n          columns: [\r\n            {\r\n              ...this.columns[0],\r\n              width: this.columns[0].widthRight || this.columns[0].width,\r\n            },\r\n            { title: '操作', dataIndex: 'action', align: 'center', width: 60, scopedSlots: { customRender: 'action' }, }\r\n          ],\r\n          dataSource: [],\r\n        },\r\n        renderEllipsis: (value) => (<ellipsis length={this.ellipsisLength}>{value}</ellipsis>),\r\n        url: { list: this.listUrl },\r\n        /* 分页参数 */\r\n        ipagination: {\r\n          current: 1,\r\n          pageSize: 5,\r\n          pageSizeOptions: ['5', '10', '20', '30'],\r\n          showTotal: (total, range) => {\r\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n          },\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          total: 0\r\n        },\r\n        options: [],\r\n        dataSourceMap: {},\r\n        showMoreQueryItems: false,\r\n      }\r\n    },\r\n    computed: {\r\n      // 表头\r\n      innerColumns() {\r\n        let columns = cloneDeep(this.columns)\r\n        columns.forEach(column => {\r\n          // 给所有的列加上过长裁剪\r\n          if (this.ellipsisLength !== -1) {\r\n            // JSelectBizComponent columns 建议开放customRender等方法类配置\r\n            // https://github.com/jeecgboot/jeecg-boot/issues/3203\r\n            let myCustomRender = column.customRender\r\n            column.customRender = (text, record, index) => {\r\n              let value = text\r\n              if (typeof myCustomRender === 'function') {\r\n                // noinspection JSVoidFunctionReturnValueUsed\r\n                value = myCustomRender(text, record, index)\r\n              }\r\n              if (typeof value === 'string') {\r\n                return this.renderEllipsis(value)\r\n              }\r\n              return value\r\n            }\r\n          }\r\n        })\r\n        return columns\r\n      },\r\n    },\r\n    watch: {\r\n      value: {\r\n        deep: true,\r\n        immediate: true,\r\n        handler(val) {\r\n          this.innerValue = cloneDeep(val)\r\n          this.selectedRowKeys = []\r\n          this.valueWatchHandler(val)\r\n          this.queryOptionsByValue(val)\r\n        }\r\n      },\r\n      dataSource: {\r\n        deep: true,\r\n        handler(val) {\r\n          this.emitOptions(val)\r\n          this.valueWatchHandler(this.innerValue)\r\n        }\r\n      },\r\n      selectedRowKeys: {\r\n        immediate: true,\r\n        deep: true,\r\n        handler(val) {\r\n          //update--begin--autor:scott-----date:20200927------for：选取职务名称出现全选 #1753-----\r\n          if(this.innerValue){\r\n            this.innerValue.length=0;\r\n          }\r\n          //update--end--autor:scott-----date:20200927------for：选取职务名称出现全选 #1753-----\r\n          this.selectedTable.dataSource = val.map(key => {\r\n            for (let data of this.dataSource) {\r\n              if (data[this.rowKey] === key) {\r\n                pushIfNotExist(this.innerValue, data[this.valueKey])\r\n                return data\r\n              }\r\n            }\r\n            for (let data of this.selectedTable.dataSource) {\r\n              if (data[this.rowKey] === key) {\r\n                pushIfNotExist(this.innerValue, data[this.valueKey])\r\n                return data\r\n              }\r\n            }\r\n            console.warn('未找到选择的行信息，key：' + key)\r\n            return {}\r\n          })\r\n        },\r\n      }\r\n    },\r\n\r\n    methods: {\r\n\r\n      /** 关闭弹窗 */\r\n      close() {\r\n        this.$emit('update:visible', false)\r\n      },\r\n\r\n      valueWatchHandler(val) {\r\n        val.forEach(item => {\r\n          this.dataSource.concat(this.selectedTable.dataSource).forEach(data => {\r\n            if (data[this.valueKey] === item) {\r\n              pushIfNotExist(this.selectedRowKeys, data[this.rowKey])\r\n            }\r\n          })\r\n        })\r\n      },\r\n\r\n      queryOptionsByValue(value) {\r\n        if (!value || value.length === 0) {\r\n          return\r\n        }\r\n        // 判断options是否存在value，如果已存在数据就不再请求后台了\r\n        let notExist = false\r\n        for (let val of value) {\r\n          let find = false\r\n          for (let option of this.options) {\r\n            if (val === option.value) {\r\n              find = true\r\n              break\r\n            }\r\n          }\r\n          if (!find) {\r\n            notExist = true\r\n            break\r\n          }\r\n        }\r\n        if (!notExist) return\r\n        getAction(this.valueUrl || this.listUrl, {\r\n          // 这里最后加一个 , 的原因是因为无论如何都要使用 in 查询，防止后台进行了模糊匹配，导致查询结果不准确\r\n          [this.valueKey]: value.join(',') + ',',\r\n          pageNo: 1,\r\n          pageSize: value.length\r\n        }).then((res) => {\r\n          if (res.success) {\r\n            let dataSource = res.result\r\n            if (!(dataSource instanceof Array)) {\r\n              dataSource = res.result.records\r\n            }\r\n            this.emitOptions(dataSource, (data) => {\r\n              pushIfNotExist(this.innerValue, data[this.valueKey])\r\n              pushIfNotExist(this.selectedRowKeys, data[this.rowKey])\r\n              pushIfNotExist(this.selectedTable.dataSource, data, this.rowKey)\r\n            })\r\n          }\r\n        })\r\n      },\r\n\r\n      emitOptions(dataSource, callback) {\r\n        dataSource.forEach(data => {\r\n          let key = data[this.valueKey]\r\n          this.dataSourceMap[key] = data\r\n          pushIfNotExist(this.options, { label: data[this.displayKey || this.valueKey], value: key }, 'value')\r\n          typeof callback === 'function' ? callback(data) : ''\r\n        })\r\n        this.$emit('options', this.options, this.dataSourceMap)\r\n      },\r\n\r\n      /** 完成选择 */\r\n      handleOk() {\r\n        let value = this.selectedTable.dataSource.map(data => data[this.valueKey])\r\n        this.$emit('input', value)\r\n        this.close()\r\n      },\r\n      /** 删除已选择的 */\r\n      handleDeleteSelected(record, index) {\r\n        this.selectedRowKeys.splice(this.selectedRowKeys.indexOf(record[this.rowKey]), 1)\r\n        //update--begin--autor:wangshuai-----date:20200722------for：JSelectBizComponent组件切换页数值问题------\r\n        this.selectedTable.dataSource.splice(this.selectedTable.dataSource.indexOf(record), 1)\r\n        this.innerValue.splice(this.innerValue.indexOf(record[this.valueKey]), 1)\r\n        console.log(\"this.selectedRowKeys:\",this.selectedRowKeys)\r\n        console.log(\"this.selectedTable.dataSource:\",this.selectedTable.dataSource)\r\n        //update--begin--autor:wangshuai-----date:20200722------for：JSelectBizComponent组件切换页数值问题------\r\n      },\r\n\r\n      customRowFn(record) {\r\n        return {\r\n          on: {\r\n            click: () => {\r\n              let key = record[this.rowKey]\r\n              if (!this.multiple) {\r\n                this.selectedRowKeys = [key]\r\n                this.selectedTable.dataSource = [record]\r\n              } else {\r\n                let index = this.selectedRowKeys.indexOf(key)\r\n                if (index === -1) {\r\n                  this.selectedRowKeys.push(key)\r\n                  this.selectedTable.dataSource.push(record)\r\n                } else {\r\n                  this.handleDeleteSelected(record, index)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  .full-form-item {\r\n    display: flex;\r\n    margin-right: 0;\r\n\r\n    /deep/ .ant-form-item-control-wrapper {\r\n      flex: 1 1;\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .j-inline-form {\r\n    /deep/ .ant-form-item {\r\n      margin-bottom: 12px;\r\n    }\r\n\r\n    /deep/ .ant-form-item-label {\r\n      line-height: 32px;\r\n      width: auto;\r\n    }\r\n\r\n    /deep/ .ant-form-item-control {\r\n      height: 32px;\r\n      line-height: 32px;\r\n    }\r\n  }\r\n</style>"]}]}