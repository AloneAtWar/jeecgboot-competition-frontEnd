{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeCheckboxCell.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeCheckboxCell.vue","mtime":1661074531190},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\css-loader\\index.js","mtime":1657458574837},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1657458571653},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\postcss-loader\\src\\index.js","mtime":1657458638287},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\less-loader\\dist\\cjs.js","mtime":1657458655181},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// 关闭动画，防止滚动时动态赋值出现问题\n.j-vxe-checkbox.no-animation {\n  .ant-checkbox-inner,\n  .ant-checkbox-inner::after {\n    transition: none !important;\n  }\n}\n",{"version":3,"sources":["JVxeCheckboxCell.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JVxeCheckboxCell.vue","sourceRoot":"src/components/jeecg/JVxeTable/components/cells","sourcesContent":["<template>\r\n  <div :class=\"clazz\" :style=\"boxStyle\">\r\n    <a-checkbox\r\n      ref=\"checkbox\"\r\n      :checked=\"innerValue\"\r\n      v-bind=\"cellProps\"\r\n      @change=\"handleChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { neverNull } from '@/utils/util'\r\n  import JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\r\n\r\n  export default {\r\n    name: 'JVxeCheckboxCell',\r\n    mixins: [JVxeCellMixins],\r\n    props: {},\r\n    computed: {\r\n      bordered() {\r\n        return !!this.renderOptions.bordered\r\n      },\r\n      scrolling() {\r\n        return !!this.renderOptions.scrolling\r\n      },\r\n      clazz() {\r\n        return {\r\n          'j-vxe-checkbox': true,\r\n          'no-animation': this.scrolling\r\n        }\r\n      },\r\n      boxStyle() {\r\n        const style = {}\r\n        // 如果有边框且未设置align属性，就强制居中\r\n        if (this.bordered && !this.originColumn.align) {\r\n          style['text-align'] = 'center'\r\n        }\r\n        return style\r\n      },\r\n    },\r\n    methods: {\r\n      handleChange(event) {\r\n        this.handleChangeCommon(event.target.checked)\r\n      },\r\n    },\r\n    // 【组件增强】注释详见：JVxeCellMixins.js\r\n    enhanced: {\r\n      switches: {\r\n        visible: true,\r\n      },\r\n      getValue(value) {\r\n        let {own: col} = this.column\r\n        // 处理 customValue\r\n        if (Array.isArray(col.customValue)) {\r\n          let customValue = getCustomValue(col)\r\n          if (typeof value === 'boolean') {\r\n            return value ? customValue[0] : customValue[1]\r\n          } else {\r\n            return value\r\n          }\r\n        } else {\r\n          return value\r\n        }\r\n      },\r\n      setValue(value) {\r\n        let {own: col} = this.column\r\n        // 判断是否设定了customValue（自定义值）\r\n        if (Array.isArray(col.customValue)) {\r\n          let customValue = getCustomValue(col)\r\n          return neverNull(value).toString() === customValue[0].toString()\r\n        } else {\r\n          return !!value\r\n        }\r\n      },\r\n      createValue({column}) {\r\n        let {own: col} = column\r\n        if (Array.isArray(col.customValue)) {\r\n          let customValue = getCustomValue(col)\r\n          return col.defaultChecked ? customValue[0] : customValue[1]\r\n        } else {\r\n          return !!col.defaultChecked\r\n        }\r\n      },\r\n    }\r\n  }\r\n\r\n  function getCustomValue(col) {\r\n    let customTrue = neverNull(col.customValue[0], true)\r\n    let customFalse = neverNull(col.customValue[1], false)\r\n    return [customTrue, customFalse]\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n  // 关闭动画，防止滚动时动态赋值出现问题\r\n  .j-vxe-checkbox.no-animation {\r\n    .ant-checkbox-inner,\r\n    .ant-checkbox-inner::after {\r\n      transition: none !important;\r\n    }\r\n  }\r\n</style>"]}]}