{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\jeecg\\ThirdAppMessageTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\jeecg\\ThirdAppMessageTest.vue","mtime":1661074531276},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { loadEnabledTypes } from '@/components/jeecgbiz/thirdApp/JThirdAppButton'\r\nimport { postAction } from '@/api/manage'\r\nimport { randomUUID } from '@/utils/util'\r\n\r\nexport default {\r\n  name: 'ThirdAppMessageTest',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      labelCol: {span: 6},\r\n      wrapperCol: {span: 12},\r\n      model: {\r\n        sendAll: false,\r\n      },\r\n      enabledTypes: {},\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: '',\r\n          key: 'rowIndex',\r\n          width: 60,\r\n          align: 'center',\r\n          customRender: (t, r, index) => {\r\n            return this.dataSource.length - index\r\n          }\r\n        },\r\n        {\r\n          title: '测试APP',\r\n          align: 'center',\r\n          dataIndex: 'app',\r\n          customRender: (t, r, index) => {\r\n            if (t === 'WECHAT_ENTERPRISE') {\r\n              return '企业微信'\r\n            }\r\n            if (t === 'DINGTALK') {\r\n              return '钉钉'\r\n            } else {\r\n              return t\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '接收人',\r\n          align: 'center',\r\n          dataIndex: 'receiver',\r\n          customRender: (t, r, index) => {\r\n            return r.sendAll ? '【全体】' : t\r\n          }\r\n        },\r\n        {\r\n          title: '消息内容',\r\n          align: 'center',\r\n          dataIndex: 'content'\r\n        },\r\n        {\r\n          title: 'response',\r\n          align: 'center',\r\n          dataIndex: 'response'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          align: 'center',\r\n          fixed: 'right',\r\n          width: 80,\r\n          scopedSlots: {customRender: 'action'}\r\n        }\r\n      ],\r\n      dataSource: [],\r\n    }\r\n  },\r\n  computed: {\r\n    rules() {\r\n      return {\r\n        app: [{required: true, message: '请选择测试APP'}],\r\n        url: [{required: this.show, message: '请输入菜单路径!'}],\r\n        receiver: [{required: !this.model.sendAll, message: '请选择接收人'}],\r\n        content: [{required: true, message: '消息内容不能为空'}]\r\n      }\r\n    },\r\n    appOptions() {\r\n      return [\r\n        {\r\n          label: `企业微信${this.enabledTypes.wechatEnterprise ? '' : '（已禁用）'}`,\r\n          value: 'WECHAT_ENTERPRISE',\r\n          disabled: !this.enabledTypes.wechatEnterprise\r\n        },\r\n        {\r\n          label: `钉钉${this.enabledTypes.dingtalk ? '' : '（已禁用）'}`,\r\n          value: 'DINGTALK',\r\n          disabled: !this.enabledTypes.dingtalk\r\n        },\r\n      ]\r\n    },\r\n  },\r\n  created() {\r\n    this.loadEnabledTypes()\r\n  },\r\n  methods: {\r\n\r\n    // 获取启用的第三方App\r\n    async loadEnabledTypes() {\r\n      this.enabledTypes = await loadEnabledTypes()\r\n    },\r\n\r\n    onSendAllChange() {\r\n      this.$refs.form.clearValidate('receiver')\r\n    },\r\n\r\n    onSend() {\r\n      this.$refs.form.validate((ok, err) => {\r\n        if (ok) {\r\n          this.loading = true\r\n          postAction('/sys/thirdApp/sendMessageTest', this.model).then(({success, result, message}) => {\r\n            if (success) {\r\n              let response = ''\r\n              try {\r\n                response = JSON.stringify(result)\r\n              } catch (e) {\r\n                response = result\r\n              }\r\n              this.dataSource.unshift(Object.assign({id: randomUUID()}, this.model, {response}))\r\n            } else {\r\n              this.$message.warning(message)\r\n            }\r\n          }).finally(() => this.loading = false)\r\n        }\r\n      })\r\n    },\r\n\r\n    handleRecall(record) {\r\n      try {\r\n        let response = JSON.parse(record.response)\r\n        postAction('/sys/thirdApp/recallMessageTest', {\r\n          app: record.app,\r\n          msg_task_id: response.result\r\n        }).then(res => {\r\n          if (res.success) {\r\n            this.$set(record, 'recalled', true)\r\n            this.$message.success(res.message)\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n        }).catch(e => this.$message.warning(e.message || e))\r\n      } catch (e) {\r\n        this.$message.warning(e.message || e)\r\n      }\r\n    },\r\n\r\n  },\r\n}\r\n",{"version":3,"sources":["ThirdAppMessageTest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"ThirdAppMessageTest.vue","sourceRoot":"src/views/jeecg","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <a-spin :spinning=\"loading\">\r\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"rules\">\r\n        <a-tabs>\r\n          <a-tab-pane tab=\"消息选项\" key=\"1\">\r\n            <a-form-model-item label=\"测试APP\" prop=\"app\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n              <a-select v-model=\"model.app\" placeholder=\"请选择测试APP\" :options=\"appOptions\"/>\r\n            </a-form-model-item>\r\n            <a-form-model-item label=\"发送给所有人\" prop=\"sendAll\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n              <a-switch checkedChildren=\"是\" unCheckedChildren=\"否\" v-model=\"model.sendAll\" @change=\"onSendAllChange\"/>\r\n            </a-form-model-item>\r\n            <a-form-model-item label=\"接收人\" prop=\"receiver\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n              <j-select-multi-user v-model=\"model.receiver\" :disabled=\"model.sendAll\" placeholder=\"请选择接收人\"/>\r\n            </a-form-model-item>\r\n            <a-form-model-item label=\"消息内容\" prop=\"content\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n              <a-textarea :rows=\"5\" v-model=\"model.content\" placeholder=\"请输入消息内容\"/>\r\n            </a-form-model-item>\r\n            <div style=\"text-align: center;\">\r\n              <a-button type=\"primary\" size=\"large\" @click=\"onSend\" style=\"width: 120px;\">发送</a-button>\r\n            </div>\r\n          </a-tab-pane>\r\n        </a-tabs>\r\n\r\n        <a-tabs>\r\n          <a-tab-pane tab=\"测试结果（刷新自动清空）\" key=\"1\">\r\n            <a-table\r\n              rowKey=\"id\"\r\n              bordered\r\n              size=\"middle\"\r\n              :columns=\"columns\"\r\n              :dataSource=\"dataSource\"\r\n            >\r\n              <div slot=\"action\" slot-scope=\"text, record\">\r\n                <template v-if=\"record.app==='DINGTALK'\">\r\n                  <a-popconfirm v-if=\"!record.recalled\" title=\"确定吗？\" @confirm=\"handleRecall(record)\">\r\n                    <a @click=\"\">撤回</a>\r\n                  </a-popconfirm>\r\n                  <span v-else>已撤回</span>\r\n                </template>\r\n                <template v-else>-</template>\r\n              </div>\r\n            </a-table>\r\n\r\n          </a-tab-pane>\r\n        </a-tabs>\r\n      </a-form-model>\r\n    </a-spin>\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\nimport { loadEnabledTypes } from '@/components/jeecgbiz/thirdApp/JThirdAppButton'\r\nimport { postAction } from '@/api/manage'\r\nimport { randomUUID } from '@/utils/util'\r\n\r\nexport default {\r\n  name: 'ThirdAppMessageTest',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      labelCol: {span: 6},\r\n      wrapperCol: {span: 12},\r\n      model: {\r\n        sendAll: false,\r\n      },\r\n      enabledTypes: {},\r\n      columns: [\r\n        {\r\n          title: '#',\r\n          dataIndex: '',\r\n          key: 'rowIndex',\r\n          width: 60,\r\n          align: 'center',\r\n          customRender: (t, r, index) => {\r\n            return this.dataSource.length - index\r\n          }\r\n        },\r\n        {\r\n          title: '测试APP',\r\n          align: 'center',\r\n          dataIndex: 'app',\r\n          customRender: (t, r, index) => {\r\n            if (t === 'WECHAT_ENTERPRISE') {\r\n              return '企业微信'\r\n            }\r\n            if (t === 'DINGTALK') {\r\n              return '钉钉'\r\n            } else {\r\n              return t\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: '接收人',\r\n          align: 'center',\r\n          dataIndex: 'receiver',\r\n          customRender: (t, r, index) => {\r\n            return r.sendAll ? '【全体】' : t\r\n          }\r\n        },\r\n        {\r\n          title: '消息内容',\r\n          align: 'center',\r\n          dataIndex: 'content'\r\n        },\r\n        {\r\n          title: 'response',\r\n          align: 'center',\r\n          dataIndex: 'response'\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          align: 'center',\r\n          fixed: 'right',\r\n          width: 80,\r\n          scopedSlots: {customRender: 'action'}\r\n        }\r\n      ],\r\n      dataSource: [],\r\n    }\r\n  },\r\n  computed: {\r\n    rules() {\r\n      return {\r\n        app: [{required: true, message: '请选择测试APP'}],\r\n        url: [{required: this.show, message: '请输入菜单路径!'}],\r\n        receiver: [{required: !this.model.sendAll, message: '请选择接收人'}],\r\n        content: [{required: true, message: '消息内容不能为空'}]\r\n      }\r\n    },\r\n    appOptions() {\r\n      return [\r\n        {\r\n          label: `企业微信${this.enabledTypes.wechatEnterprise ? '' : '（已禁用）'}`,\r\n          value: 'WECHAT_ENTERPRISE',\r\n          disabled: !this.enabledTypes.wechatEnterprise\r\n        },\r\n        {\r\n          label: `钉钉${this.enabledTypes.dingtalk ? '' : '（已禁用）'}`,\r\n          value: 'DINGTALK',\r\n          disabled: !this.enabledTypes.dingtalk\r\n        },\r\n      ]\r\n    },\r\n  },\r\n  created() {\r\n    this.loadEnabledTypes()\r\n  },\r\n  methods: {\r\n\r\n    // 获取启用的第三方App\r\n    async loadEnabledTypes() {\r\n      this.enabledTypes = await loadEnabledTypes()\r\n    },\r\n\r\n    onSendAllChange() {\r\n      this.$refs.form.clearValidate('receiver')\r\n    },\r\n\r\n    onSend() {\r\n      this.$refs.form.validate((ok, err) => {\r\n        if (ok) {\r\n          this.loading = true\r\n          postAction('/sys/thirdApp/sendMessageTest', this.model).then(({success, result, message}) => {\r\n            if (success) {\r\n              let response = ''\r\n              try {\r\n                response = JSON.stringify(result)\r\n              } catch (e) {\r\n                response = result\r\n              }\r\n              this.dataSource.unshift(Object.assign({id: randomUUID()}, this.model, {response}))\r\n            } else {\r\n              this.$message.warning(message)\r\n            }\r\n          }).finally(() => this.loading = false)\r\n        }\r\n      })\r\n    },\r\n\r\n    handleRecall(record) {\r\n      try {\r\n        let response = JSON.parse(record.response)\r\n        postAction('/sys/thirdApp/recallMessageTest', {\r\n          app: record.app,\r\n          msg_task_id: response.result\r\n        }).then(res => {\r\n          if (res.success) {\r\n            this.$set(record, 'recalled', true)\r\n            this.$message.success(res.message)\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n        }).catch(e => this.$message.warning(e.message || e))\r\n      } catch (e) {\r\n        this.$message.warning(e.message || e)\r\n      }\r\n    },\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}