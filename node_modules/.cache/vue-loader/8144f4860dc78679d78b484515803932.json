{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JModal\\JPrompt.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\components\\jeecg\\JModal\\JPrompt.vue","mtime":1661074531180},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport pick from 'lodash.pick'\r\n\r\nexport default {\r\n  name: 'JPrompt',\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      loading: false,\r\n      content: '',\r\n      // 弹窗参数\r\n      modalProps: {\r\n        title: '',\r\n      },\r\n      inputProps: {\r\n        placeholder: '',\r\n      },\r\n      // form model\r\n      model: {\r\n        input: '',\r\n      },\r\n      // 校验\r\n      rule: [],\r\n      // 回调函数\r\n      callback: {},\r\n    }\r\n  },\r\n  computed: {\r\n    rules() {\r\n      return {\r\n        input: this.rule\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    show(options) {\r\n      this.content = options.content\r\n      if (Array.isArray(options.rule)) {\r\n        this.rule = options.rule\r\n      }\r\n      if (options.defaultValue != null) {\r\n        this.model.input = options.defaultValue\r\n      }\r\n      // 取出常用的弹窗参数\r\n      let pickModalProps = pick(options, 'title', 'centered', 'cancelText', 'closable', 'mask', 'maskClosable', 'okText', 'okType', 'okButtonProps', 'cancelButtonProps', 'width', 'wrapClassName', 'zIndex', 'dialogStyle', 'dialogClass')\r\n      this.modalProps = Object.assign({}, pickModalProps, options.modalProps)\r\n      // 取出常用的input参数\r\n      let pickInputProps = pick(options, 'placeholder', 'allowClear')\r\n      this.inputProps = Object.assign({}, pickInputProps, options.inputProps)\r\n      // 回调函数\r\n      this.callback = pick(options, 'onOk', 'onOkAsync', 'onCancel')\r\n      this.visible = true\r\n      this.$nextTick(() => this.$refs.input.focus())\r\n    },\r\n\r\n    onOk() {\r\n      this.$refs.form.validate((ok, err) => {\r\n        if (ok) {\r\n          let event = {value: this.model.input, target: this}\r\n          // 异步方法优先级高于同步方法\r\n          if (typeof this.callback.onOkAsync === 'function') {\r\n            this.callback.onOkAsync(event)\r\n          } else if (typeof this.callback.onOk === 'function') {\r\n            this.callback.onOk(event)\r\n            this.close()\r\n          } else {\r\n            this.close()\r\n          }\r\n        }\r\n      })\r\n    },\r\n    onCancel() {\r\n      if (typeof this.callback.onCancel === 'function') {\r\n        this.callback.onCancel(this.model.input)\r\n      }\r\n      this.close()\r\n    },\r\n\r\n    onInputPressEnter() {\r\n      this.onOk()\r\n    },\r\n\r\n    close() {\r\n      this.visible = this.loading ? this.visible : false\r\n    },\r\n\r\n    forceClose() {\r\n      this.visible = false\r\n    },\r\n\r\n    showLoading() {\r\n      this.loading = true\r\n    },\r\n    hideLoading() {\r\n      this.loading = false\r\n    },\r\n\r\n    afterClose(e) {\r\n      if (typeof this.modalProps.afterClose === 'function') {\r\n        this.modalProps.afterClose(e)\r\n      }\r\n      this.$emit('after-close', e)\r\n    },\r\n\r\n  },\r\n}\r\n",{"version":3,"sources":["JPrompt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"JPrompt.vue","sourceRoot":"src/components/jeecg/JModal","sourcesContent":["<template>\r\n  <j-modal :visible=\"visible\" :confirmLoading=\"loading\" :after-close=\"afterClose\" v-bind=\"modalProps\" @ok=\"onOk\" @cancel=\"onCancel\">\r\n    <a-spin :spinning=\"loading\">\r\n      <div v-html=\"content\"></div>\r\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"rules\">\r\n        <a-form-model-item prop=\"input\">\r\n          <a-input ref=\"input\" v-model=\"model.input\" v-bind=\"inputProps\" @pressEnter=\"onInputPressEnter\"/>\r\n        </a-form-model-item>\r\n      </a-form-model>\r\n    </a-spin>\r\n  </j-modal>\r\n</template>\r\n\r\n<script>\r\nimport pick from 'lodash.pick'\r\n\r\nexport default {\r\n  name: 'JPrompt',\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      loading: false,\r\n      content: '',\r\n      // 弹窗参数\r\n      modalProps: {\r\n        title: '',\r\n      },\r\n      inputProps: {\r\n        placeholder: '',\r\n      },\r\n      // form model\r\n      model: {\r\n        input: '',\r\n      },\r\n      // 校验\r\n      rule: [],\r\n      // 回调函数\r\n      callback: {},\r\n    }\r\n  },\r\n  computed: {\r\n    rules() {\r\n      return {\r\n        input: this.rule\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    show(options) {\r\n      this.content = options.content\r\n      if (Array.isArray(options.rule)) {\r\n        this.rule = options.rule\r\n      }\r\n      if (options.defaultValue != null) {\r\n        this.model.input = options.defaultValue\r\n      }\r\n      // 取出常用的弹窗参数\r\n      let pickModalProps = pick(options, 'title', 'centered', 'cancelText', 'closable', 'mask', 'maskClosable', 'okText', 'okType', 'okButtonProps', 'cancelButtonProps', 'width', 'wrapClassName', 'zIndex', 'dialogStyle', 'dialogClass')\r\n      this.modalProps = Object.assign({}, pickModalProps, options.modalProps)\r\n      // 取出常用的input参数\r\n      let pickInputProps = pick(options, 'placeholder', 'allowClear')\r\n      this.inputProps = Object.assign({}, pickInputProps, options.inputProps)\r\n      // 回调函数\r\n      this.callback = pick(options, 'onOk', 'onOkAsync', 'onCancel')\r\n      this.visible = true\r\n      this.$nextTick(() => this.$refs.input.focus())\r\n    },\r\n\r\n    onOk() {\r\n      this.$refs.form.validate((ok, err) => {\r\n        if (ok) {\r\n          let event = {value: this.model.input, target: this}\r\n          // 异步方法优先级高于同步方法\r\n          if (typeof this.callback.onOkAsync === 'function') {\r\n            this.callback.onOkAsync(event)\r\n          } else if (typeof this.callback.onOk === 'function') {\r\n            this.callback.onOk(event)\r\n            this.close()\r\n          } else {\r\n            this.close()\r\n          }\r\n        }\r\n      })\r\n    },\r\n    onCancel() {\r\n      if (typeof this.callback.onCancel === 'function') {\r\n        this.callback.onCancel(this.model.input)\r\n      }\r\n      this.close()\r\n    },\r\n\r\n    onInputPressEnter() {\r\n      this.onOk()\r\n    },\r\n\r\n    close() {\r\n      this.visible = this.loading ? this.visible : false\r\n    },\r\n\r\n    forceClose() {\r\n      this.visible = false\r\n    },\r\n\r\n    showLoading() {\r\n      this.loading = true\r\n    },\r\n    hideLoading() {\r\n      this.loading = false\r\n    },\r\n\r\n    afterClose(e) {\r\n      if (typeof this.modalProps.afterClose === 'function') {\r\n        this.modalProps.afterClose(e)\r\n      }\r\n      this.$emit('after-close', e)\r\n    },\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}