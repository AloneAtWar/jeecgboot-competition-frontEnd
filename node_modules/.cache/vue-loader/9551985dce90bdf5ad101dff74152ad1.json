{"remainingRequest":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a\\ant-design-vue-jeecg\\src\\views\\user\\alteration\\Step3.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a\\ant-design-vue-jeecg\\src\\views\\user\\alteration\\Step3.vue","mtime":1661074531326},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1657458618345},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657458637011},{"path":"D:\\a\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1657458571653}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { getAction } from '@/api/manage'\n  export default {\n    name: \"Step3\",\n//    components: {\n//      Result\n//    },\n    props: ['userList'],\n    data () {\n      return {\n        model:{},\n        layout: {\n          labelCol: { span: 5 },\n          wrapperCol: { span: 19 },\n        },\n        loading: false,\n        accountName: this.userList.username,\n        validatorRules: {\n          password: [{\n            required: true, pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,.\\/]).{8,}$/, message: '密码由8位数字、大小写字母和特殊符号组成!!'\n          }],\n          confirmPassword: [\n            { required: true, message: '密码不能为空!'},\n            { validator: this.handlePasswordCheck}\n          ]\n        }\n      }\n    },\n    methods: {\n      nextStep () {\n        let that = this\n        that.loading = true\n        that.$refs['form'].validate(success => {\n          if (success === true) {\n            let params = {\n              username: that.userList.username,\n              password: that.model.password,\n              smscode: that.userList.smscode,\n              phone: that.userList.phone,\n            }\n            getAction(\"/sys/user/passwordChange\", params).then((res) => {\n              if (res.success) {\n                let userList = {\n                  username: that.userList.username\n                }\n                console.log(userList);\n                setTimeout(function() {\n                  that.$emit('nextStep', userList)\n                }, 1500)\n              } else {\n                that.passwordFailed(res.message);\n                that.loading = false\n              }\n            })\n          } else {\n            that.loading = false\n          }\n        })\n      },\n      prevStep () {\n        this.$emit('prevStep', this.userList)\n      },\n\n      handlePasswordCheck (rule, value, callback) {\n        let password = this.model['password']\n        if (value && password && value.trim() !== password.trim()) {\n          callback(new Error('两次密码不一致'))\n        }\n        callback()\n      },\n      passwordFailed(err){\n        this.$notification[ 'error' ]({\n          message: \"更改密码失败\",\n          description:err,\n          duration: 4,\n        });\n      },\n    }\n  }\n",{"version":3,"sources":["Step3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Step3.vue","sourceRoot":"src/views/user/alteration","sourcesContent":["<template>\r\n  <div>\r\n    <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\" class=\"password-retrieval-form\">\r\n\r\n      <a-form-model-item label=\"账号名\" v-bind=\"layout\">\r\n        <a-input type=\"text\" :value=\"accountName\" disabled/>\r\n      </a-form-model-item>\r\n\r\n      <a-form-model-item prop=\"password\" label=\"新密码\" v-bind=\"layout\" class=\"stepFormText\">\r\n        <a-input v-model=\"model.password\" type=\"password\" autocomplete=\"false\"/>\r\n      </a-form-model-item>\r\n\r\n      <a-form-model-item prop=\"confirmPassword\" label=\"确认密码\" v-bind=\"layout\" class=\"stepFormText\">\r\n        <a-input v-model=\"model.confirmPassword\" type=\"password\" autocomplete=\"false\"/>\r\n      </a-form-model-item>\r\n\r\n      <a-form-model-item :wrapperCol=\"{span: 19, offset: 5}\">\r\n        <a-button style=\"margin-left: 8px\" @click=\"prevStep\">上一步</a-button>\r\n        <a-button :loading=\"loading\" type=\"primary\" @click=\"nextStep\" style=\"margin-left:20px\">提交</a-button>\r\n      </a-form-model-item>\r\n    </a-form-model>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n  export default {\r\n    name: \"Step3\",\r\n//    components: {\r\n//      Result\r\n//    },\r\n    props: ['userList'],\r\n    data () {\r\n      return {\r\n        model:{},\r\n        layout: {\r\n          labelCol: { span: 5 },\r\n          wrapperCol: { span: 19 },\r\n        },\r\n        loading: false,\r\n        accountName: this.userList.username,\r\n        validatorRules: {\r\n          password: [{\r\n            required: true, pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,.\\/]).{8,}$/, message: '密码由8位数字、大小写字母和特殊符号组成!!'\r\n          }],\r\n          confirmPassword: [\r\n            { required: true, message: '密码不能为空!'},\r\n            { validator: this.handlePasswordCheck}\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      nextStep () {\r\n        let that = this\r\n        that.loading = true\r\n        that.$refs['form'].validate(success => {\r\n          if (success === true) {\r\n            let params = {\r\n              username: that.userList.username,\r\n              password: that.model.password,\r\n              smscode: that.userList.smscode,\r\n              phone: that.userList.phone,\r\n            }\r\n            getAction(\"/sys/user/passwordChange\", params).then((res) => {\r\n              if (res.success) {\r\n                let userList = {\r\n                  username: that.userList.username\r\n                }\r\n                console.log(userList);\r\n                setTimeout(function() {\r\n                  that.$emit('nextStep', userList)\r\n                }, 1500)\r\n              } else {\r\n                that.passwordFailed(res.message);\r\n                that.loading = false\r\n              }\r\n            })\r\n          } else {\r\n            that.loading = false\r\n          }\r\n        })\r\n      },\r\n      prevStep () {\r\n        this.$emit('prevStep', this.userList)\r\n      },\r\n\r\n      handlePasswordCheck (rule, value, callback) {\r\n        let password = this.model['password']\r\n        if (value && password && value.trim() !== password.trim()) {\r\n          callback(new Error('两次密码不一致'))\r\n        }\r\n        callback()\r\n      },\r\n      passwordFailed(err){\r\n        this.$notification[ 'error' ]({\r\n          message: \"更改密码失败\",\r\n          description:err,\r\n          duration: 4,\r\n        });\r\n      },\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  .stepFormText {\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  .ant-form-item-label,\r\n  .ant-form-item-control {\r\n    line-height: 22px;\r\n  }\r\n\r\n</style>"]}]}